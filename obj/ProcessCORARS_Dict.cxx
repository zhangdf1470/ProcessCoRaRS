#include "ProcessCORARS/ConfigureClass.h"
#include "ProcessCORARS/Alignment.h"
#include "ProcessCORARS/SelectBranch.h"
#include "ProcessCORARS/CalcuVariables.h"
#include "ProcessCORARS/AnalyseED.h"
#include "ProcessCORARS/ChargeCorrectTime.h"
#include "ProcessCORARS/GenerateTimeCalib.h"
#include "ProcessCORARS/SimulateTimeCalib.h"
#include "ProcessCORARS/ReGenerateTimeCalib.h"
#include "ProcessCORARS/ComDiscriminator.h"
#include "ProcessCORARS/Cluster.h"
#include "ProcessCORARS/CalcuTGCScin.h"
#include "ProcessCORARS/LocateED.h"
#include "ProcessCORARS/ReCalcuVariables.h"
#include "ProcessCORARS/KM2AEvent.h"
//
// File generated by /home/zhangdf/Public/root/bin/rootcint at Thu Jan 11 10:07:12 2018

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dOdOdIobjdIProcessCORARS_Dict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "ProcessCORARS_Dict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ConfigureClass ConfigureClass;
      #else
      class ConfigureClass  {
         public:
         //friend XX;
         string Temperature; //temperature in las
         bool ProcessAllStages; //process all the stages or not, from the original collected data to final results
         string process_stages; //specify the running substage
         int process_stage; //specify the running substage, from 1 to 10
         string inPath; //inpath of the original datas collected by CORARS and White Rabbit
         string outPath; //outpath of the processing stage x , it can also be the inpath of next step
         bool doTimeCalib; //do time calibration or not
         string CalibrationConfFile; //configuration for time calibration
         string TimeCalibrationFile; //resulted calibration file used in time calibration
         bool doLocateED; //locate ED position or not
         bool useNormalizedCharge; //normalize charge to the united thickness of ED
         float FuncSlope[8]; //slope of ED position
         float XTruncation[8]; //
         float YTruncation[8]; //
         string CORARSCollectionTime; //collection time of CORARS
         string WRCollectionTime; //collection time of White Rabbit DAQ with new electronics
         string TSCTFile; //file containing position of Trigger SCTs
         vector< pair< float, float >  > TSCTXY; //x and y of the bottom left of SCT
         int NEDs; //totoal number of measured EDs
         string EDName[8]; //ED name
         string EDSCT1Name[8]; //
         string EDSCT2Name[8]; //
         string EDSCT3Name[8]; //
         string EDSCT4Name[8]; //
         float EDZ[8]; //ED Height
         int EDV1290NChannel[8]; //ED V1290N Channel
         int EDV792NChannel[8]; //ED V792N Channel
         int UpScinV1290NChannel; //V1290N Channel Number of Up Scintillator
         int DownScinV1290NChannel; //V1290N Channel Number of Down Scintillator
         int TriggerID; //Electrinics Pad ID of Trigger
         int UpScinID; //Electrinics Pad ID of Up Scintillator
         int DownScinID; //Electrinics Pad ID of Down Scintillator
         int EDID[8]; //Electrinics Pad ID of EDs
         string NormalEventQualityFileName; //
         ::TFile* NormalEventQualityFile; //
         ::TH1F* NormalEventQuality; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Alignment Alignment;
      #else
      class Alignment  {
         public:
         //friend XX;
         ::ConfigureClass* conf; //
         string inPath; //path of thein data files
         string inrawfilename; //in file name collected by White Babbit DAQ
         string indaqfilename; //in file name collected by DAQ with new electronics 
         ::TFile* inRawFile; //in root file of CORARS DAQ
         ::TTree* inRawTree; //
         ::TChain* inDAQChain; //
         string outPath; //out path
         string outfilename; //out file name
         ::TFile* outFile; //out root file containing measured time and charge of Scintillor s and EDs
         ::TTree* outTree; //
         unsigned int event_id; //event id 
         unsigned int event_time; //event time
         unsigned int V1190A_1_LeadingMeasure[512]; //leading and trailing signal measured by V1190A
         unsigned int V1190A_1_TrailingMeasure[512]; //
         unsigned int V1190A_2_LeadingMeasure[512]; //
         unsigned int V1190A_2_TrailingMeasure[512]; //
         unsigned int V1290N_measure[16]; //time  measured by V1290N
         unsigned int V792N_measure[16]; //charge measured by V792N
         float KM2ACharge[16]; //charge measured by new electronics pad
         float KM2ATime[16]; //time measured by new electronics pad
         ::KM2AEvent* pevent; //event of White Rabbit
         int UpScinV1290NChannel; //V1290N Channel Number of Up Scintillator
         int DownScinV1290NChannel; //V1290N Channel Number of Down Scintillator
         int EDV1290NChannel[8]; //ED V1290N Channel
         int EDV792NChannel[8]; //ED V792N Channel
         int NEDs; //Number of measured EDs
         int TriggerID; //Electrinics Pad ID of Trigger
         int UpScinID; //Electrinics Pad ID of Up Scintillator 
         int UpScinHitIndex; //
         int DownScinID; //Electrinics Pad ID of Down Scintillator
         int DownScinHitIndex; //
         int EDID[8]; //Electrinics Pad ID of EDs
         int NEDNoiseHit[8]; //Number of noise hits before trigger
         int EDHitIndex[8]; //
         bool isCORARSAhead; //true: CORARS records event first, false: White Rabbit records event first
         int NMisalignment; //N of event of misalignment between CORARAS and White Babbit
         float DeltaTOFMean; //
         float DeltaTOFSigma; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::SelectBranch SelectBranch;
      #else
      class SelectBranch  {
         public:
         //friend XX;
         ::ConfigureClass* conf; //
         string inPath; //path of thein data files
         string inFileName; //in file name 
         ::TFile* inFile; //
         ::TTree* inTree; //
         string outPath; //out path
         string outFileName; //out file name
         ::TFile* outFile; //out root file containing measured time and charge of Scintillor s and EDs
         ::TTree* outTree; //
         unsigned int event_id; //
         unsigned int event_time; //
         unsigned int TGC_Leading_One[512]; //
         unsigned int TGC_Trailing_One[512]; //
         unsigned int TGC_Leading_Two[512]; //
         unsigned int TGC_Trailing_Two[512]; //
         float KM2ACharge[16]; //charge measured by new electronics pad
         float KM2ATime[16]; //time measured by new electronics pad
         int NEDNoiseHit[8]; //Number of noise hits before trigger
         int Count_Up_Strip_One; //
         int Count_Up_Wire_One; //
         int Count_Down_Strip_One; //
         int Count_Down_Wire_One; //
         int Count_Up_Strip_Two; //
         int Count_Up_Wire_Two; //
         int Count_Down_Strip_Two; //
         int Count_Down_Wire_Two; //
         ::TH1I* FiredNStripsUpTGCOne; //
         ::TH1I* FiredNWiresUpTGCOne; //
         ::TH1I* FiredNStripsUpTGCTwo; //
         ::TH1I* FiredNWiresUpTGCTwo; //
         ::TH1I* FiredNStripsDownTGCOne; //
         ::TH1I* FiredNWiresDownTGCOne; //
         ::TH1I* FiredNStripsDownTGCTwo; //
         ::TH1I* FiredNWiresDownTGCTwo; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::CalcuVariables CalcuVariables;
      #else
      class CalcuVariables  {
         public:
         //friend XX;
         ::ConfigureClass* conf; //
         ::TFile* PedestalFile; //
         string inPath; //
         string inFileName; //
         ::TFile* inFile; //
         ::TTree* inTree; //
         string outPath; //
         string outFileName; //
         ::TFile* outFile; //
         ::TTree* outTree; //
         vector< pair< float, float >  > TSCTXY; //x and y of the bottom left of SCT
         float KM2ACharge[16]; //charge measured by new electronics pad
         float KM2ATime[16]; //time measured by new electronics pad
         int NEDNoiseHit[8]; //Number of noise hits before trigger
         int EventQuality; //
         ::TH2F* CalibMean[12]; //
         unsigned int event_id; //
         ::Point Up_TGC; //
         ::Point Down_TGC; //
         ::Scin Up_Scin_ScinED; //
         ::Scin Down_Scin_ScinED; //
         ::Scin Up_Scin; //
         ::Scin Down_Scin; //
         ::ED ElecDet[8]; //
         ::TOF Muon_TOF; //
         float TrackLength; //
         int NEDs; //totoal number of measured EDs
         string EDName[8]; //ED name
         ::TH1F* DeltaTimeUDScins[4]; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::AnalyseED AnalyseED;
      #else
      class AnalyseED  {
         public:
         //friend XX;
         ::ConfigureClass* conf; //
         string CORARSCollectionTime; //
         string inPath; //path of thein data files
         string inFileName; //in file name 
         ::TFile* inFile; //
         ::TTree* inTree; //
         ::TFile* EDPositionFile; //
         string outPath; //out path
         string outFileName; //out file name
         ::TFile* outFile; //out root file containing measured time and charge of Scintillor s and ED
         int NEDs; //totoal number of measured EDs
         string EDName[8]; //ED name
         string EDSCT1Name[8]; //
         string EDSCT2Name[8]; //
         string EDSCT3Name[8]; //
         string EDSCT4Name[8]; //
         ::TVectorT< double >* SCT1BLRotatedPoint; //
         ::TVectorT< double >* SCT2BLRotatedPoint; //
         ::TVectorT< double >* SCT3BLRotatedPoint; //
         ::TVectorT< double >* SCT4BLRotatedPoint; //
         ::TAxis* XAxis[8]; //the bin edge is the SCT boundary
         ::TAxis* YAxis[8]; //
         int NEDNoiseHit[8]; //Number of noise hits before trigger
         ::ED ElecDet[8]; //
         ::TOF Muon_TOF; //
         int EventQuality; //
         ::TH2F* EDPlaneNHits[8]; //Count all the hits crossing ED Plane within whole ED plane
         ::TH2F* EDPlaneNFiredHits[8]; //Count all the hits above ED threashold (Firred Hits) crossing ED Plane within whole ED plane
         ::TH2F* EDSCT1NHits[8]; //Count all the hits crossing ED Plane within EDSCT1
         ::TH2F* EDSCT2NHits[8]; //Count all the hits crossing ED Plane within EDSCT2
         ::TH2F* EDSCT3NHits[8]; //Count all the hits crossing ED Plane within EDSCT3
         ::TH2F* EDSCT4NHits[8]; //Count all the hits crossing ED Plane within EDSCT4
         ::TH2F* EDSCT1NFiredHits[8]; //Count all the hits above ED threashold (Firred Hits) crossing ED Plane within EDSCT1
         ::TH2F* EDSCT2NFiredHits[8]; //Count all the hits above ED threashold (Firred Hits) crossing ED Plane within EDSCT2
         ::TH2F* EDSCT3NFiredHits[8]; //Count all the hits above ED threashold (Firred Hits) crossing ED Plane within EDSCT3
         ::TH2F* EDSCT4NFiredHits[8]; //Count all the hits above ED threashold (Firred Hits) crossing ED Plane within EDSCT4
         ::TH2F* EDPlaneDetEffi2DScan[8]; //
         ::TH2F* EDSCT1DetEffi2DScan[8]; //
         ::TH2F* EDSCT2DetEffi2DScan[8]; //
         ::TH2F* EDSCT3DetEffi2DScan[8]; //
         ::TH2F* EDSCT4DetEffi2DScan[8]; //
         ::TH1F* EDSCT1DetEffi1DScan[8]; //
         ::TH1F* EDSCT2DetEffi1DScan[8]; //
         ::TH1F* EDSCT3DetEffi1DScan[8]; //
         ::TH1F* EDSCT4DetEffi1DScan[8]; //
         ::TH1F* DeltaTOF; //
         ::TH1F* EDSCT1MeasureTime[8]; //
         ::TH1F* EDSCT2MeasureTime[8]; //
         ::TH1F* EDSCT3MeasureTime[8]; //
         ::TH1F* EDSCT4MeasureTime[8]; //
         ::TH1F* EDSCT1ReconTime[8]; //
         ::TH1F* EDSCT2ReconTime[8]; //
         ::TH1F* EDSCT3ReconTime[8]; //
         ::TH1F* EDSCT4ReconTime[8]; //
         ::TH1F* EDSCT1DeltaTime[8]; //
         ::TH1F* EDSCT2DeltaTime[8]; //
         ::TH1F* EDSCT3DeltaTime[8]; //
         ::TH1F* EDSCT4DeltaTime[8]; //
         ::TH1F* EDSCT1CorrectedDeltaTime[8]; //
         ::TH1F* EDSCT2CorrectedDeltaTime[8]; //
         ::TH1F* EDSCT3CorrectedDeltaTime[8]; //
         ::TH1F* EDSCT4CorrectedDeltaTime[8]; //
         ::TH1F* EDSCT1DeltaTimeBin[8][4][19]; //
         ::TH1F* EDSCT2DeltaTimeBin[8][4][19]; //
         ::TH1F* EDSCT3DeltaTimeBin[8][4][19]; //
         ::TH1F* EDSCT4DeltaTimeBin[8][4][19]; //
         ::TH1F* EDSCT1CorrectedDeltaTimeBin[8][4][19]; //
         ::TH1F* EDSCT2CorrectedDeltaTimeBin[8][4][19]; //
         ::TH1F* EDSCT3CorrectedDeltaTimeBin[8][4][19]; //
         ::TH1F* EDSCT4CorrectedDeltaTimeBin[8][4][19]; //
         ::TH2F* EDSCT1TimeRes2DScan[8]; //
         ::TH2F* EDSCT2TimeRes2DScan[8]; //
         ::TH2F* EDSCT3TimeRes2DScan[8]; //
         ::TH2F* EDSCT4TimeRes2DScan[8]; //
         ::TH1F* EDSCT1TimeRes1DScan[8]; //
         ::TH1F* EDSCT2TimeRes1DScan[8]; //
         ::TH1F* EDSCT3TimeRes1DScan[8]; //
         ::TH1F* EDSCT4TimeRes1DScan[8]; //
         ::TH2F* EDSCT1TimeOffset2DScan[8]; //
         ::TH2F* EDSCT2TimeOffset2DScan[8]; //
         ::TH2F* EDSCT3TimeOffset2DScan[8]; //
         ::TH2F* EDSCT4TimeOffset2DScan[8]; //
         ::TH1F* EDSCT1TimeOffset1DScan[8]; //
         ::TH1F* EDSCT2TimeOffset1DScan[8]; //
         ::TH1F* EDSCT3TimeOffset1DScan[8]; //
         ::TH1F* EDSCT4TimeOffset1DScan[8]; //
         ::TH1F* EDSCT1SignalCharge[8]; //
         ::TH1F* EDSCT2SignalCharge[8]; //
         ::TH1F* EDSCT3SignalCharge[8]; //
         ::TH1F* EDSCT4SignalCharge[8]; //
         ::TH1F* EDSCT1SignalChargeBin[8][4][19]; //
         ::TH1F* EDSCT2SignalChargeBin[8][4][19]; //
         ::TH1F* EDSCT3SignalChargeBin[8][4][19]; //
         ::TH1F* EDSCT4SignalChargeBin[8][4][19]; //
         ::TH2F* EDSCT1EnergyRes2DScan[8]; //
         ::TH2F* EDSCT2EnergyRes2DScan[8]; //
         ::TH2F* EDSCT3EnergyRes2DScan[8]; //
         ::TH2F* EDSCT4EnergyRes2DScan[8]; //
         ::TH1F* EDSCT1EnergyRes1DScan[8]; //
         ::TH1F* EDSCT2EnergyRes1DScan[8]; //
         ::TH1F* EDSCT3EnergyRes1DScan[8]; //
         ::TH1F* EDSCT4EnergyRes1DScan[8]; //
         ::TH2F* EDSCT1ReEnergyRes2DScan[8]; //
         ::TH2F* EDSCT2ReEnergyRes2DScan[8]; //
         ::TH2F* EDSCT3ReEnergyRes2DScan[8]; //
         ::TH2F* EDSCT4ReEnergyRes2DScan[8]; //
         ::TH1F* EDSCT1ReEnergyRes1DScan[8]; //
         ::TH1F* EDSCT2ReEnergyRes1DScan[8]; //
         ::TH1F* EDSCT3ReEnergyRes1DScan[8]; //
         ::TH1F* EDSCT4ReEnergyRes1DScan[8]; //
         ::TH2F* EDSCT1SingleParticlePeak2DScan[8]; //
         ::TH2F* EDSCT2SingleParticlePeak2DScan[8]; //
         ::TH2F* EDSCT3SingleParticlePeak2DScan[8]; //
         ::TH2F* EDSCT4SingleParticlePeak2DScan[8]; //
         ::TH1F* EDSCT1SingleParticlePeak1DScan[8]; //
         ::TH1F* EDSCT2SingleParticlePeak1DScan[8]; //
         ::TH1F* EDSCT3SingleParticlePeak1DScan[8]; //
         ::TH1F* EDSCT4SingleParticlePeak1DScan[8]; //
         int NPreHitsOnSCT[8]; //N hits on SCT collected before the trigger
         ::TVectorT< double >* SingleRate; //
         ::TVectorT< double >* EDSCTDetEffi; //
         ::TVectorT< double >* EDSCTDetEffiErrors; //
         ::TMatrixT< float >* EDPlaneDetEffi[8]; //
         ::TMatrixT< float >* EDPlaneDetEffiErrors[8]; //
         ::TMatrixT< float >* EDSCT1DetEffi[8]; //
         ::TMatrixT< float >* EDSCT2DetEffi[8]; //
         ::TMatrixT< float >* EDSCT3DetEffi[8]; //
         ::TMatrixT< float >* EDSCT4DetEffi[8]; //
         ::TMatrixT< float >* EDSCT1DetEffiErrors[8]; //
         ::TMatrixT< float >* EDSCT2DetEffiErrors[8]; //
         ::TMatrixT< float >* EDSCT3DetEffiErrors[8]; //
         ::TMatrixT< float >* EDSCT4DetEffiErrors[8]; //
         ::TVectorT< double >* SysTimeRes; //
         ::TVectorT< double >* SysTimeResError; //
         ::TVectorT< double >* ScinTimeRes; //
         ::TVectorT< double >* ScinTimeResError; //
         ::TVectorT< double >* EDSCTTimeRes; //
         ::TVectorT< double >* EDSCTTimeResErrors; //
         ::TVectorT< double >* EDSCTTimeOffset; //
         ::TVectorT< double >* EDSCTTimeOffsetErrors; //
         ::TMatrixT< float >* EDSCT1TimeOffset[8]; //
         ::TMatrixT< float >* EDSCT2TimeOffset[8]; //
         ::TMatrixT< float >* EDSCT3TimeOffset[8]; //
         ::TMatrixT< float >* EDSCT4TimeOffset[8]; //
         ::TMatrixT< float >* EDSCT1TimeOffsetErrors[8]; //
         ::TMatrixT< float >* EDSCT2TimeOffsetErrors[8]; //
         ::TMatrixT< float >* EDSCT3TimeOffsetErrors[8]; //
         ::TMatrixT< float >* EDSCT4TimeOffsetErrors[8]; //
         ::TMatrixT< float >* EDSCT1TimeRes[8]; //
         ::TMatrixT< float >* EDSCT2TimeRes[8]; //
         ::TMatrixT< float >* EDSCT3TimeRes[8]; //
         ::TMatrixT< float >* EDSCT4TimeRes[8]; //
         ::TMatrixT< float >* EDSCT1TimeResErrors[8]; //
         ::TMatrixT< float >* EDSCT2TimeResErrors[8]; //
         ::TMatrixT< float >* EDSCT3TimeResErrors[8]; //
         ::TMatrixT< float >* EDSCT4TimeResErrors[8]; //
         ::TVectorT< double >* EDSCTEnergyRes; //
         ::TVectorT< double >* EDSCTEnergyResErrors; //
         ::TMatrixT< float >* EDSCT1EnergyRes[8]; //
         ::TMatrixT< float >* EDSCT2EnergyRes[8]; //
         ::TMatrixT< float >* EDSCT3EnergyRes[8]; //
         ::TMatrixT< float >* EDSCT4EnergyRes[8]; //
         ::TMatrixT< float >* EDSCT1EnergyResErrors[8]; //
         ::TMatrixT< float >* EDSCT2EnergyResErrors[8]; //
         ::TMatrixT< float >* EDSCT3EnergyResErrors[8]; //
         ::TMatrixT< float >* EDSCT4EnergyResErrors[8]; //
         ::TVectorT< double >* EDSCTReEnergyRes; //
         ::TVectorT< double >* EDSCTReEnergyResErrors; //
         ::TMatrixT< float >* EDSCT1ReEnergyRes[8]; //
         ::TMatrixT< float >* EDSCT2ReEnergyRes[8]; //
         ::TMatrixT< float >* EDSCT3ReEnergyRes[8]; //
         ::TMatrixT< float >* EDSCT4ReEnergyRes[8]; //
         ::TMatrixT< float >* EDSCT1ReEnergyResErrors[8]; //
         ::TMatrixT< float >* EDSCT2ReEnergyResErrors[8]; //
         ::TMatrixT< float >* EDSCT3ReEnergyResErrors[8]; //
         ::TMatrixT< float >* EDSCT4ReEnergyResErrors[8]; //
         ::TVectorT< double >* EDSCTSingleParticlePeak; //
         ::TVectorT< double >* EDSCTSingleParticlePeakErrors; //
         ::TMatrixT< float >* EDSCT1SingleParticlePeak[8]; //
         ::TMatrixT< float >* EDSCT2SingleParticlePeak[8]; //
         ::TMatrixT< float >* EDSCT3SingleParticlePeak[8]; //
         ::TMatrixT< float >* EDSCT4SingleParticlePeak[8]; //
         ::TMatrixT< float >* EDSCT1SingleParticlePeakErrors[8]; //
         ::TMatrixT< float >* EDSCT2SingleParticlePeakErrors[8]; //
         ::TMatrixT< float >* EDSCT3SingleParticlePeakErrors[8]; //
         ::TMatrixT< float >* EDSCT4SingleParticlePeakErrors[8]; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ChargeCorrectTime ChargeCorrectTime;
      #else
      class ChargeCorrectTime  {
         public:
         //friend XX;
         ::ConfigureClass* conf; //
         string inPath; //path of thein data files
         string inFileName; //in file name 
         ::TFile* inFile; //
         ::TTree* inTree; //
         string outPath; //out path
         string outFileName; //out file name
         ::TFile* outFile; //out root file containing measured time and charge of Scintillor s and ED
         int NEDs; //
         string EDName[8]; //
         ::ED ElecDet[8]; //
         ::TH1F* ChargeDeltaTime[8]; //
         ::TH1F* DeltaTime[8][55]; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::GenerateTimeCalib GenerateTimeCalib;
      #else
      class GenerateTimeCalib  {
         public:
         //friend XX;
         ::TChain* chain; //
         string inPath; //
         string outPath; //
         string inFileName; //
         ::TFile* outFile; //
         ::TTree* outTree; //
         ::TTree* SoutTree; //
         string outFileName; //
         vector< pair< float, float >  > TSCTXY; //x and y of the bottom left of SCT
         ::Scin Up_Scin_Calib; //
         ::Scin Down_Scin_Calib; //
         ::Scin Up_Scin; //
         ::Scin Down_Scin; //
         int EventQuality; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::SimulateTimeCalib SimulateTimeCalib;
      #else
      class SimulateTimeCalib  {
         public:
         //friend XX;
         string inPath; //
         string outPath; //
         ::TFile* inFile; //
         ::TTree* inTree; //
         ::TTree* SinTree; //
         string inFileName; //
         ::TFile* outFile; //
         ::TTree* outTree; //
         string outFileName; //
         ::TH1F* DownCalibToDistance[6]; //
         ::TH1F* DownCalinBin[6][62]; //
         ::TH1F* CalibToDistance[12]; //
         ::TH1F* CalinBin[12][62]; //
         ::TMatrixT< float >* DownFitParas; //initial fitting parameters of downcalib vs DistanceToPMT
         ::TMatrixT< float >* FitParas; //fitting parameters of calib vs DistanceToPMT
         ::Scin Up_Scin; //
         ::Scin Down_Scin; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ReGenerateTimeCalib ReGenerateTimeCalib;
      #else
      class ReGenerateTimeCalib  {
         public:
         //friend XX;
         string inPath; //
         string inFileName; //
         ::TFile* inFile; //
         ::TTree* inTree; //
         string outPath; //
         string outFileName; //
         ::TFile* outFile; //
         ::TTree* outTree; //
         vector< pair< float, float >  > TSCTXY; //x and y of the bottom left of SCT
         ::TMatrixT< float >* FitParas; //fitting parameters of calib vs DistanceToPMT
         ::TH1F* CalibBin[12][10][48]; //
         ::TH2F* CalibMean[12]; //
         ::Scin Up_Scin; //
         ::Scin Down_Scin; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ComDiscriminator ComDiscriminator;
      #else
      class ComDiscriminator  {
         public:
         //friend XX;
         ::TFile* InPut_File; //
         ::TString InPut_File_Name; //
         ::TFile* OutPut_File; //
         ::TTree* OutPut_Tree; //
         ::TTree* InPut_Tree; //
         ::TString OutPut_File_Name; //
         unsigned int Up_TGC_Strip_One[32]; //
         unsigned int Up_TGC_Wire_One[32]; //
         unsigned int Down_TGC_Strip_One[32]; //
         unsigned int Down_TGC_Wire_One[32]; //
         unsigned int ScinED_Time_Signal[16]; //
         unsigned int ED_Charge_Signal[16]; //
         int Up_TGC_Strip_Number; //
         int Up_TGC_Wire_Number; //
         int Down_TGC_Strip_Number; //
         int Down_TGC_Wire_Number; //
         float params[189]; //
         float calib_mean[8][10][48]; //
         float calib_charge[8][55]; //
         unsigned int event_id; //
         ::Point_CD Up_TGC; //
         ::Point_CD Down_TGC; //
         ::Scin_CD Up_Scin; //
         ::Scin_CD Down_Scin; //
         ::ED_CD ElecDet5; //
         ::TOF_CD Muon_TOF; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::CalcuTGCScin CalcuTGCScin;
      #else
      class CalcuTGCScin  {
         public:
         //friend XX;
         ::ConfigureClass* conf; //
         string inPath; //
         string inFileName; //
         ::TFile* inFile; //
         ::TTree* inTree; //
         string outPath; //
         string outFileName; //
         ::TFile* outFile; //
         ::TTree* outTree; //
         unsigned int Up_TGC_Strip_Leading_One[32]; //
         unsigned int Up_TGC_Strip_Trailing_One[32]; //
         unsigned int Up_TGC_Wire_Leading_One[32]; //
         unsigned int Up_TGC_Wire_Trailing_One[32]; //
         unsigned int Down_TGC_Strip_Leading_One[32]; //
         unsigned int Down_TGC_Strip_Trailing_One[32]; //
         unsigned int Down_TGC_Wire_Leading_One[32]; //
         unsigned int Down_TGC_Wire_Trailing_One[32]; //
         unsigned int Up_TGC_Strip_Leading_Two[32]; //
         unsigned int Up_TGC_Strip_Trailing_Two[32]; //
         unsigned int Up_TGC_Wire_Leading_Two[32]; //
         unsigned int Up_TGC_Wire_Trailing_Two[32]; //
         unsigned int Down_TGC_Strip_Leading_Two[32]; //
         unsigned int Down_TGC_Strip_Trailing_Two[32]; //
         unsigned int Down_TGC_Wire_Leading_Two[32]; //
         unsigned int Down_TGC_Wire_Trailing_Two[32]; //
         vector< pair< float, float >  > TSCTXY; //x and y of the bottom left of SCT
         int UpScinV1290NChannel; //V1290N Channel of Up SCT
         int DownScinV1290NChannel; //V1290N Channel of Down SCT
         float KM2ACharge[16]; //charge measured by new electronics pad
         float KM2ATime[16]; //time measured by new electronics pad
         int NEDNoiseHit[8]; //Number of noise hits before trigger
         int Count_Up_Strip_One; //
         int Count_Up_Wire_One; //
         int Count_Down_Strip_One; //
         int Count_Down_Wire_One; //
         int Count_Up_Strip_Two; //
         int Count_Up_Wire_Two; //
         int Count_Down_Strip_Two; //
         int Count_Down_Wire_Two; //
         float params[189]; //
         unsigned int event_id; //
         unsigned int event_time; //
         ::TGC Up_TGC_One; //
         ::TGC Down_TGC_One; //
         ::TGC Up_TGC_Two; //
         ::TGC Down_TGC_Two; //
         ::Point Up_TGC; //
         ::Point Down_TGC; //
         ::Scin Up_Scin; //
         ::Scin Down_Scin; //
         vector< ::Cluster > Up_TGC_Strip_One_Cluster; //
         vector< ::Cluster > Up_TGC_Wire_One_Cluster; //
         vector< ::Cluster > Down_TGC_Strip_One_Cluster; //
         vector< ::Cluster > Down_TGC_Wire_One_Cluster; //
         vector< ::Cluster > Up_TGC_Strip_Two_Cluster; //
         vector< ::Cluster > Up_TGC_Wire_Two_Cluster; //
         vector< ::Cluster > Down_TGC_Strip_Two_Cluster; //
         vector< ::Cluster > Down_TGC_Wire_Two_Cluster; //
         vector< int > up_one_strip_cluster_size; //
         vector< int > up_one_wire_cluster_size; //
         vector< int > up_two_strip_cluster_size; //
         vector< int > up_two_wire_cluster_size; //
         vector< int > down_one_strip_cluster_size; //
         vector< int > down_one_wire_cluster_size; //
         vector< int > down_two_strip_cluster_size; //
         vector< int > down_two_wire_cluster_size; //
         vector< int > up_one_strip_cluster_validnumber; //
         vector< int > up_one_wire_cluster_validnumber; //
         vector< int > up_two_strip_cluster_validnumber; //
         vector< int > up_two_wire_cluster_validnumber; //
         vector< int > down_one_strip_cluster_validnumber; //
         vector< int > down_one_wire_cluster_validnumber; //
         vector< int > down_two_strip_cluster_validnumber; //
         vector< int > down_two_wire_cluster_validnumber; //
         vector< int > up_one_strip_cluster_maxsignal; //
         vector< int > up_one_wire_cluster_maxsignal; //
         vector< int > up_two_strip_cluster_maxsignal; //
         vector< int > up_two_wire_cluster_maxsignal; //
         vector< int > down_one_strip_cluster_maxsignal; //
         vector< int > down_one_wire_cluster_maxsignal; //
         vector< int > down_two_strip_cluster_maxsignal; //
         vector< int > down_two_wire_cluster_maxsignal; //
         int Delta_Up_Strip_ValidNumber; //
         int Delta_Up_Wire_ValidNumber; //
         int Delta_Down_Strip_ValidNumber; //
         int Delta_Down_Wire_ValidNumber; //
         int EventQuality; //
         int nosignal; //
         ::TH1F* EventQualityDis; //
         ::TH1F* UpTGCOneStripSignalWidth; //
         ::TH1F* UpTGCOneWireSignalWidth; //
         ::TH1F* UpTGCTwoStripSignalWidth; //
         ::TH1F* UpTGCTwoWireSignalWidth; //
         ::TH1F* DownTGCOneStripSignalWidth; //
         ::TH1F* DownTGCOneWireSignalWidth; //
         ::TH1F* DownTGCTwoStripSignalWidth; //
         ::TH1F* DownTGCTwoWireSignalWidth; //
         ::TGraph* UpScinHitsGraph; //
         ::TGraph* DownScinHitsGraph; //
         ::TH1F* UpScinX; //
         ::TH1F* DownScinX; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::LocateED LocateED;
      #else
      class LocateED  {
         public:
         //friend XX;
         ::ConfigureClass* conf; //
         string inPath; //path of thein data files
         string inFileName; //in file name 
         ::TFile* inFile; //
         ::TTree* inTree; //
         string outPath; //out path
         string outFileName; //out file name
         ::TFile* outFile; //out root file containing measured time and charge of Scintillor s and EDs
         int NEDs; //totoal number of measured EDs
         string EDName[8]; //ED name
         string EDSCT1Name[8]; //
         string EDSCT2Name[8]; //
         string EDSCT3Name[8]; //
         string EDSCT4Name[8]; //
         ::TGraph* EDHitsGraphs[8]; //
         ::TGraph* RotatedEDHitsGraphs[8]; //
         ::TGraph* EDNoisesGraphs[8]; //
         ::TGraph* RotatedEDNoisesGraphs[8]; //
         ::TLine* Inner1BLine[8]; //
         ::TLine* Inner1TLine[8]; //
         ::TLine* Inner1LLine[8]; //
         ::TLine* Inner1RLine[8]; //
         ::TLine* Outer1BLine[8]; //
         ::TLine* Outer1TLine[8]; //
         ::TLine* Outer1LLine[8]; //
         ::TLine* Outer1RLine[8]; //
         ::TLine* Inner2BLine[8]; //
         ::TLine* Inner2TLine[8]; //
         ::TLine* Inner2LLine[8]; //
         ::TLine* Inner2RLine[8]; //
         ::TLine* Outer2BLine[8]; //
         ::TLine* Outer2TLine[8]; //
         ::TLine* Outer2LLine[8]; //
         ::TLine* Outer2RLine[8]; //
         ::TLine* Inner3BLine[8]; //
         ::TLine* Inner3TLine[8]; //
         ::TLine* Inner3LLine[8]; //
         ::TLine* Inner3RLine[8]; //
         ::TLine* Outer3BLine[8]; //
         ::TLine* Outer3TLine[8]; //
         ::TLine* Outer3LLine[8]; //
         ::TLine* Outer3RLine[8]; //
         ::TLine* Inner4BLine[8]; //
         ::TLine* Inner4TLine[8]; //
         ::TLine* Inner4LLine[8]; //
         ::TLine* Inner4RLine[8]; //
         ::TLine* Outer4BLine[8]; //
         ::TLine* Outer4TLine[8]; //
         ::TLine* Outer4LLine[8]; //
         ::TLine* Outer4RLine[8]; //
         ::TVectorT< double >* FuncSlope; //
         ::TVectorT< double >* XTruncation; //
         ::TVectorT< double >* YTruncation; //
         ::TVectorT< double >* SCT1BLPoint; //the left  bottom  point (x, y) of SCT 1
         ::TVectorT< double >* SCT2BLPoint; //the left  bottom  point (x, y) of SCT 2
         ::TVectorT< double >* SCT3BLPoint; //the left  bottom  point (x, y) of SCT 3
         ::TVectorT< double >* SCT4BLPoint; //the left  bottom  point (x, y) of SCT 4
         ::TVectorT< double >* SCT1BLRotatedPoint; //the left  bottom point (x, y) after rotation of SCT 1
         ::TVectorT< double >* SCT2BLRotatedPoint; //the left  bottom point (x, y) after rotation of SCT 2
         ::TVectorT< double >* SCT3BLRotatedPoint; //the left  bottom point (x, y) after rotation of SCT 3
         ::TVectorT< double >* SCT4BLRotatedPoint; //the left  bottom point (x, y) after rotation of SCT 4
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ReCalcuVariables ReCalcuVariables;
      #else
      class ReCalcuVariables  {
         public:
         //friend XX;
         ::ConfigureClass* conf; //
         string inPath; //path of thein data files
         string inFileName; //in file name 
         ::TFile* inFile; //
         ::TTree* inTree; //
         string outPath; //out path
         string outFileName; //out file name
         ::TFile* outFile; //out root file containing measured time and charge of Scintillor s and ED
         ::TTree* outTree; //
         int NEDs; //
         string EDName[8]; //
         int NEDNoiseHit[8]; //Number of noise hits before trigger
         ::ED ElecDet[8]; //
         int EventQuality; //
         ::TOF Muon_TOF; //
         float TrackLength; //
         ::TVectorT< double >* FuncSlope; //
         ::TH1F* ChargeDeltaTime[8]; //
      };
      #endif

   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void ConfigureClass_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void ConfigureClass_Dictionary();
   static void delete_ConfigureClass(void *p);
   static void deleteArray_ConfigureClass(void *p);
   static void destruct_ConfigureClass(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ConfigureClass*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ConfigureClass) == sizeof( ::ROOTShadow::Shadow::ConfigureClass));
      ::ConfigureClass *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ConfigureClass),0);
      static ::ROOT::TGenericClassInfo 
         instance("ConfigureClass", "../ProcessCORARS/ConfigureClass.h", 24,
                  typeid(::ConfigureClass), ::ROOT::DefineBehavior(ptr, ptr),
                  &ConfigureClass_ShowMembers, &ConfigureClass_Dictionary, isa_proxy, 4,
                  sizeof(::ConfigureClass) );
      instance.SetDelete(&delete_ConfigureClass);
      instance.SetDeleteArray(&deleteArray_ConfigureClass);
      instance.SetDestructor(&destruct_ConfigureClass);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ConfigureClass*)
   {
      return GenerateInitInstanceLocal((::ConfigureClass*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ConfigureClass*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ConfigureClass_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::ConfigureClass*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void KM2AEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KM2AEvent(void *p = 0);
   static void *newArray_KM2AEvent(Long_t size, void *p);
   static void delete_KM2AEvent(void *p);
   static void deleteArray_KM2AEvent(void *p);
   static void destruct_KM2AEvent(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KM2AEvent*)
   {
      ::KM2AEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KM2AEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KM2AEvent", ::KM2AEvent::Class_Version(), "../ProcessCORARS/KM2AEvent.h", 24,
                  typeid(::KM2AEvent), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KM2AEvent::Dictionary, isa_proxy, 4,
                  sizeof(::KM2AEvent) );
      instance.SetNew(&new_KM2AEvent);
      instance.SetNewArray(&newArray_KM2AEvent);
      instance.SetDelete(&delete_KM2AEvent);
      instance.SetDeleteArray(&deleteArray_KM2AEvent);
      instance.SetDestructor(&destruct_KM2AEvent);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KM2AEvent*)
   {
      return GenerateInitInstanceLocal((::KM2AEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KM2AEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KM2AHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KM2AHit(void *p = 0);
   static void *newArray_KM2AHit(Long_t size, void *p);
   static void delete_KM2AHit(void *p);
   static void deleteArray_KM2AHit(void *p);
   static void destruct_KM2AHit(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KM2AHit*)
   {
      ::KM2AHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KM2AHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KM2AHit", ::KM2AHit::Class_Version(), "../ProcessCORARS/KM2AEvent.h", 102,
                  typeid(::KM2AHit), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KM2AHit::Dictionary, isa_proxy, 4,
                  sizeof(::KM2AHit) );
      instance.SetNew(&new_KM2AHit);
      instance.SetNewArray(&newArray_KM2AHit);
      instance.SetDelete(&delete_KM2AHit);
      instance.SetDeleteArray(&deleteArray_KM2AHit);
      instance.SetDestructor(&destruct_KM2AHit);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KM2AHit*)
   {
      return GenerateInitInstanceLocal((::KM2AHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KM2AHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void Alignment_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void Alignment_Dictionary();
   static void *new_Alignment(void *p = 0);
   static void *newArray_Alignment(Long_t size, void *p);
   static void delete_Alignment(void *p);
   static void deleteArray_Alignment(void *p);
   static void destruct_Alignment(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Alignment*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Alignment) == sizeof( ::ROOTShadow::Shadow::Alignment));
      ::Alignment *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Alignment),0);
      static ::ROOT::TGenericClassInfo 
         instance("Alignment", "../ProcessCORARS/Alignment.h", 32,
                  typeid(::Alignment), ::ROOT::DefineBehavior(ptr, ptr),
                  &Alignment_ShowMembers, &Alignment_Dictionary, isa_proxy, 4,
                  sizeof(::Alignment) );
      instance.SetNew(&new_Alignment);
      instance.SetNewArray(&newArray_Alignment);
      instance.SetDelete(&delete_Alignment);
      instance.SetDeleteArray(&deleteArray_Alignment);
      instance.SetDestructor(&destruct_Alignment);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Alignment*)
   {
      return GenerateInitInstanceLocal((::Alignment*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Alignment*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Alignment_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::Alignment*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void SelectBranch_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void SelectBranch_Dictionary();
   static void *new_SelectBranch(void *p = 0);
   static void *newArray_SelectBranch(Long_t size, void *p);
   static void delete_SelectBranch(void *p);
   static void deleteArray_SelectBranch(void *p);
   static void destruct_SelectBranch(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::SelectBranch*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::SelectBranch) == sizeof( ::ROOTShadow::Shadow::SelectBranch));
      ::SelectBranch *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::SelectBranch),0);
      static ::ROOT::TGenericClassInfo 
         instance("SelectBranch", "../ProcessCORARS/SelectBranch.h", 20,
                  typeid(::SelectBranch), ::ROOT::DefineBehavior(ptr, ptr),
                  &SelectBranch_ShowMembers, &SelectBranch_Dictionary, isa_proxy, 4,
                  sizeof(::SelectBranch) );
      instance.SetNew(&new_SelectBranch);
      instance.SetNewArray(&newArray_SelectBranch);
      instance.SetDelete(&delete_SelectBranch);
      instance.SetDeleteArray(&deleteArray_SelectBranch);
      instance.SetDestructor(&destruct_SelectBranch);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::SelectBranch*)
   {
      return GenerateInitInstanceLocal((::SelectBranch*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SelectBranch*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void SelectBranch_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::SelectBranch*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void CalcuVariables_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void CalcuVariables_Dictionary();
   static void *new_CalcuVariables(void *p = 0);
   static void *newArray_CalcuVariables(Long_t size, void *p);
   static void delete_CalcuVariables(void *p);
   static void deleteArray_CalcuVariables(void *p);
   static void destruct_CalcuVariables(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::CalcuVariables*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::CalcuVariables) == sizeof( ::ROOTShadow::Shadow::CalcuVariables));
      ::CalcuVariables *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::CalcuVariables),0);
      static ::ROOT::TGenericClassInfo 
         instance("CalcuVariables", "../ProcessCORARS/CalcuVariables.h", 22,
                  typeid(::CalcuVariables), ::ROOT::DefineBehavior(ptr, ptr),
                  &CalcuVariables_ShowMembers, &CalcuVariables_Dictionary, isa_proxy, 4,
                  sizeof(::CalcuVariables) );
      instance.SetNew(&new_CalcuVariables);
      instance.SetNewArray(&newArray_CalcuVariables);
      instance.SetDelete(&delete_CalcuVariables);
      instance.SetDeleteArray(&deleteArray_CalcuVariables);
      instance.SetDestructor(&destruct_CalcuVariables);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::CalcuVariables*)
   {
      return GenerateInitInstanceLocal((::CalcuVariables*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CalcuVariables*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void CalcuVariables_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::CalcuVariables*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void AnalyseED_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void AnalyseED_Dictionary();
   static void *new_AnalyseED(void *p = 0);
   static void *newArray_AnalyseED(Long_t size, void *p);
   static void delete_AnalyseED(void *p);
   static void deleteArray_AnalyseED(void *p);
   static void destruct_AnalyseED(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::AnalyseED*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::AnalyseED) == sizeof( ::ROOTShadow::Shadow::AnalyseED));
      ::AnalyseED *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::AnalyseED),0);
      static ::ROOT::TGenericClassInfo 
         instance("AnalyseED", "../ProcessCORARS/AnalyseED.h", 45,
                  typeid(::AnalyseED), ::ROOT::DefineBehavior(ptr, ptr),
                  &AnalyseED_ShowMembers, &AnalyseED_Dictionary, isa_proxy, 4,
                  sizeof(::AnalyseED) );
      instance.SetNew(&new_AnalyseED);
      instance.SetNewArray(&newArray_AnalyseED);
      instance.SetDelete(&delete_AnalyseED);
      instance.SetDeleteArray(&deleteArray_AnalyseED);
      instance.SetDestructor(&destruct_AnalyseED);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::AnalyseED*)
   {
      return GenerateInitInstanceLocal((::AnalyseED*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::AnalyseED*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void AnalyseED_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::AnalyseED*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void ChargeCorrectTime_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void ChargeCorrectTime_Dictionary();
   static void *new_ChargeCorrectTime(void *p = 0);
   static void *newArray_ChargeCorrectTime(Long_t size, void *p);
   static void delete_ChargeCorrectTime(void *p);
   static void deleteArray_ChargeCorrectTime(void *p);
   static void destruct_ChargeCorrectTime(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ChargeCorrectTime*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ChargeCorrectTime) == sizeof( ::ROOTShadow::Shadow::ChargeCorrectTime));
      ::ChargeCorrectTime *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ChargeCorrectTime),0);
      static ::ROOT::TGenericClassInfo 
         instance("ChargeCorrectTime", "../ProcessCORARS/ChargeCorrectTime.h", 17,
                  typeid(::ChargeCorrectTime), ::ROOT::DefineBehavior(ptr, ptr),
                  &ChargeCorrectTime_ShowMembers, &ChargeCorrectTime_Dictionary, isa_proxy, 4,
                  sizeof(::ChargeCorrectTime) );
      instance.SetNew(&new_ChargeCorrectTime);
      instance.SetNewArray(&newArray_ChargeCorrectTime);
      instance.SetDelete(&delete_ChargeCorrectTime);
      instance.SetDeleteArray(&deleteArray_ChargeCorrectTime);
      instance.SetDestructor(&destruct_ChargeCorrectTime);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ChargeCorrectTime*)
   {
      return GenerateInitInstanceLocal((::ChargeCorrectTime*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ChargeCorrectTime*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ChargeCorrectTime_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::ChargeCorrectTime*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void GenerateTimeCalib_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void GenerateTimeCalib_Dictionary();
   static void *new_GenerateTimeCalib(void *p = 0);
   static void *newArray_GenerateTimeCalib(Long_t size, void *p);
   static void delete_GenerateTimeCalib(void *p);
   static void deleteArray_GenerateTimeCalib(void *p);
   static void destruct_GenerateTimeCalib(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::GenerateTimeCalib*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::GenerateTimeCalib) == sizeof( ::ROOTShadow::Shadow::GenerateTimeCalib));
      ::GenerateTimeCalib *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::GenerateTimeCalib),0);
      static ::ROOT::TGenericClassInfo 
         instance("GenerateTimeCalib", "../ProcessCORARS/GenerateTimeCalib.h", 18,
                  typeid(::GenerateTimeCalib), ::ROOT::DefineBehavior(ptr, ptr),
                  &GenerateTimeCalib_ShowMembers, &GenerateTimeCalib_Dictionary, isa_proxy, 4,
                  sizeof(::GenerateTimeCalib) );
      instance.SetNew(&new_GenerateTimeCalib);
      instance.SetNewArray(&newArray_GenerateTimeCalib);
      instance.SetDelete(&delete_GenerateTimeCalib);
      instance.SetDeleteArray(&deleteArray_GenerateTimeCalib);
      instance.SetDestructor(&destruct_GenerateTimeCalib);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::GenerateTimeCalib*)
   {
      return GenerateInitInstanceLocal((::GenerateTimeCalib*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::GenerateTimeCalib*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void GenerateTimeCalib_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::GenerateTimeCalib*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void SimulateTimeCalib_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void SimulateTimeCalib_Dictionary();
   static void *new_SimulateTimeCalib(void *p = 0);
   static void *newArray_SimulateTimeCalib(Long_t size, void *p);
   static void delete_SimulateTimeCalib(void *p);
   static void deleteArray_SimulateTimeCalib(void *p);
   static void destruct_SimulateTimeCalib(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::SimulateTimeCalib*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::SimulateTimeCalib) == sizeof( ::ROOTShadow::Shadow::SimulateTimeCalib));
      ::SimulateTimeCalib *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::SimulateTimeCalib),0);
      static ::ROOT::TGenericClassInfo 
         instance("SimulateTimeCalib", "../ProcessCORARS/SimulateTimeCalib.h", 21,
                  typeid(::SimulateTimeCalib), ::ROOT::DefineBehavior(ptr, ptr),
                  &SimulateTimeCalib_ShowMembers, &SimulateTimeCalib_Dictionary, isa_proxy, 4,
                  sizeof(::SimulateTimeCalib) );
      instance.SetNew(&new_SimulateTimeCalib);
      instance.SetNewArray(&newArray_SimulateTimeCalib);
      instance.SetDelete(&delete_SimulateTimeCalib);
      instance.SetDeleteArray(&deleteArray_SimulateTimeCalib);
      instance.SetDestructor(&destruct_SimulateTimeCalib);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::SimulateTimeCalib*)
   {
      return GenerateInitInstanceLocal((::SimulateTimeCalib*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SimulateTimeCalib*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void SimulateTimeCalib_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::SimulateTimeCalib*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void ReGenerateTimeCalib_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void ReGenerateTimeCalib_Dictionary();
   static void *new_ReGenerateTimeCalib(void *p = 0);
   static void *newArray_ReGenerateTimeCalib(Long_t size, void *p);
   static void delete_ReGenerateTimeCalib(void *p);
   static void deleteArray_ReGenerateTimeCalib(void *p);
   static void destruct_ReGenerateTimeCalib(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ReGenerateTimeCalib*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ReGenerateTimeCalib) == sizeof( ::ROOTShadow::Shadow::ReGenerateTimeCalib));
      ::ReGenerateTimeCalib *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ReGenerateTimeCalib),0);
      static ::ROOT::TGenericClassInfo 
         instance("ReGenerateTimeCalib", "../ProcessCORARS/ReGenerateTimeCalib.h", 20,
                  typeid(::ReGenerateTimeCalib), ::ROOT::DefineBehavior(ptr, ptr),
                  &ReGenerateTimeCalib_ShowMembers, &ReGenerateTimeCalib_Dictionary, isa_proxy, 4,
                  sizeof(::ReGenerateTimeCalib) );
      instance.SetNew(&new_ReGenerateTimeCalib);
      instance.SetNewArray(&newArray_ReGenerateTimeCalib);
      instance.SetDelete(&delete_ReGenerateTimeCalib);
      instance.SetDeleteArray(&deleteArray_ReGenerateTimeCalib);
      instance.SetDestructor(&destruct_ReGenerateTimeCalib);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ReGenerateTimeCalib*)
   {
      return GenerateInitInstanceLocal((::ReGenerateTimeCalib*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ReGenerateTimeCalib*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ReGenerateTimeCalib_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::ReGenerateTimeCalib*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void ComDiscriminator_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void ComDiscriminator_Dictionary();
   static void *new_ComDiscriminator(void *p = 0);
   static void *newArray_ComDiscriminator(Long_t size, void *p);
   static void delete_ComDiscriminator(void *p);
   static void deleteArray_ComDiscriminator(void *p);
   static void destruct_ComDiscriminator(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ComDiscriminator*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ComDiscriminator) == sizeof( ::ROOTShadow::Shadow::ComDiscriminator));
      ::ComDiscriminator *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ComDiscriminator),0);
      static ::ROOT::TGenericClassInfo 
         instance("ComDiscriminator", "../ProcessCORARS/ComDiscriminator.h", 41,
                  typeid(::ComDiscriminator), ::ROOT::DefineBehavior(ptr, ptr),
                  &ComDiscriminator_ShowMembers, &ComDiscriminator_Dictionary, isa_proxy, 4,
                  sizeof(::ComDiscriminator) );
      instance.SetNew(&new_ComDiscriminator);
      instance.SetNewArray(&newArray_ComDiscriminator);
      instance.SetDelete(&delete_ComDiscriminator);
      instance.SetDeleteArray(&deleteArray_ComDiscriminator);
      instance.SetDestructor(&destruct_ComDiscriminator);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ComDiscriminator*)
   {
      return GenerateInitInstanceLocal((::ComDiscriminator*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ComDiscriminator*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ComDiscriminator_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::ComDiscriminator*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void Cluster_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Cluster(void *p = 0);
   static void *newArray_Cluster(Long_t size, void *p);
   static void delete_Cluster(void *p);
   static void deleteArray_Cluster(void *p);
   static void destruct_Cluster(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Cluster*)
   {
      ::Cluster *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Cluster >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Cluster", ::Cluster::Class_Version(), "../ProcessCORARS/Cluster.h", 9,
                  typeid(::Cluster), ::ROOT::DefineBehavior(ptr, ptr),
                  &::Cluster::Dictionary, isa_proxy, 4,
                  sizeof(::Cluster) );
      instance.SetNew(&new_Cluster);
      instance.SetNewArray(&newArray_Cluster);
      instance.SetDelete(&delete_Cluster);
      instance.SetDeleteArray(&deleteArray_Cluster);
      instance.SetDestructor(&destruct_Cluster);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Cluster*)
   {
      return GenerateInitInstanceLocal((::Cluster*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Cluster*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void CalcuTGCScin_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void CalcuTGCScin_Dictionary();
   static void *new_CalcuTGCScin(void *p = 0);
   static void *newArray_CalcuTGCScin(Long_t size, void *p);
   static void delete_CalcuTGCScin(void *p);
   static void deleteArray_CalcuTGCScin(void *p);
   static void destruct_CalcuTGCScin(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::CalcuTGCScin*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::CalcuTGCScin) == sizeof( ::ROOTShadow::Shadow::CalcuTGCScin));
      ::CalcuTGCScin *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::CalcuTGCScin),0);
      static ::ROOT::TGenericClassInfo 
         instance("CalcuTGCScin", "../ProcessCORARS/CalcuTGCScin.h", 27,
                  typeid(::CalcuTGCScin), ::ROOT::DefineBehavior(ptr, ptr),
                  &CalcuTGCScin_ShowMembers, &CalcuTGCScin_Dictionary, isa_proxy, 4,
                  sizeof(::CalcuTGCScin) );
      instance.SetNew(&new_CalcuTGCScin);
      instance.SetNewArray(&newArray_CalcuTGCScin);
      instance.SetDelete(&delete_CalcuTGCScin);
      instance.SetDeleteArray(&deleteArray_CalcuTGCScin);
      instance.SetDestructor(&destruct_CalcuTGCScin);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::CalcuTGCScin*)
   {
      return GenerateInitInstanceLocal((::CalcuTGCScin*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CalcuTGCScin*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void CalcuTGCScin_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::CalcuTGCScin*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void LocateED_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void LocateED_Dictionary();
   static void *new_LocateED(void *p = 0);
   static void *newArray_LocateED(Long_t size, void *p);
   static void delete_LocateED(void *p);
   static void deleteArray_LocateED(void *p);
   static void destruct_LocateED(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::LocateED*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::LocateED) == sizeof( ::ROOTShadow::Shadow::LocateED));
      ::LocateED *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::LocateED),0);
      static ::ROOT::TGenericClassInfo 
         instance("LocateED", "../ProcessCORARS/LocateED.h", 23,
                  typeid(::LocateED), ::ROOT::DefineBehavior(ptr, ptr),
                  &LocateED_ShowMembers, &LocateED_Dictionary, isa_proxy, 4,
                  sizeof(::LocateED) );
      instance.SetNew(&new_LocateED);
      instance.SetNewArray(&newArray_LocateED);
      instance.SetDelete(&delete_LocateED);
      instance.SetDeleteArray(&deleteArray_LocateED);
      instance.SetDestructor(&destruct_LocateED);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::LocateED*)
   {
      return GenerateInitInstanceLocal((::LocateED*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::LocateED*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void LocateED_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::LocateED*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void ReCalcuVariables_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void ReCalcuVariables_Dictionary();
   static void *new_ReCalcuVariables(void *p = 0);
   static void *newArray_ReCalcuVariables(Long_t size, void *p);
   static void delete_ReCalcuVariables(void *p);
   static void deleteArray_ReCalcuVariables(void *p);
   static void destruct_ReCalcuVariables(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ReCalcuVariables*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ReCalcuVariables) == sizeof( ::ROOTShadow::Shadow::ReCalcuVariables));
      ::ReCalcuVariables *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ReCalcuVariables),0);
      static ::ROOT::TGenericClassInfo 
         instance("ReCalcuVariables", "../ProcessCORARS/ReCalcuVariables.h", 15,
                  typeid(::ReCalcuVariables), ::ROOT::DefineBehavior(ptr, ptr),
                  &ReCalcuVariables_ShowMembers, &ReCalcuVariables_Dictionary, isa_proxy, 4,
                  sizeof(::ReCalcuVariables) );
      instance.SetNew(&new_ReCalcuVariables);
      instance.SetNewArray(&newArray_ReCalcuVariables);
      instance.SetDelete(&delete_ReCalcuVariables);
      instance.SetDeleteArray(&deleteArray_ReCalcuVariables);
      instance.SetDestructor(&destruct_ReCalcuVariables);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ReCalcuVariables*)
   {
      return GenerateInitInstanceLocal((::ReCalcuVariables*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ReCalcuVariables*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ReCalcuVariables_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::ReCalcuVariables*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr KM2AEvent::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KM2AEvent::Class_Name()
{
   return "KM2AEvent";
}

//______________________________________________________________________________
const char *KM2AEvent::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KM2AEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KM2AEvent::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KM2AEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KM2AEvent::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KM2AEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KM2AEvent::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KM2AEvent*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KM2AHit::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KM2AHit::Class_Name()
{
   return "KM2AHit";
}

//______________________________________________________________________________
const char *KM2AHit::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KM2AHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KM2AHit::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KM2AHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KM2AHit::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KM2AHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KM2AHit::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KM2AHit*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr Cluster::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Cluster::Class_Name()
{
   return "Cluster";
}

//______________________________________________________________________________
const char *Cluster::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Cluster*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Cluster::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Cluster*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Cluster::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Cluster*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Cluster::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Cluster*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
namespace ROOTDict {
   void SelectBranch_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class SelectBranch.
      typedef ::ROOTShadow::Shadow::SelectBranch ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::SelectBranch*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*conf", &sobj->conf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "inPath", (void*)&sobj->inPath);
      R__insp.InspectMember("string", (void*)&sobj->inPath, "inPath.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "inFileName", (void*)&sobj->inFileName);
      R__insp.InspectMember("string", (void*)&sobj->inFileName, "inFileName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*inFile", &sobj->inFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*inTree", &sobj->inTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "outPath", (void*)&sobj->outPath);
      R__insp.InspectMember("string", (void*)&sobj->outPath, "outPath.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "outFileName", (void*)&sobj->outFileName);
      R__insp.InspectMember("string", (void*)&sobj->outFileName, "outFileName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*outFile", &sobj->outFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*outTree", &sobj->outTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "event_id", &sobj->event_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "event_time", &sobj->event_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TGC_Leading_One[512]", sobj->TGC_Leading_One);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TGC_Trailing_One[512]", sobj->TGC_Trailing_One);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TGC_Leading_Two[512]", sobj->TGC_Leading_Two);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TGC_Trailing_Two[512]", sobj->TGC_Trailing_Two);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "KM2ACharge[16]", sobj->KM2ACharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "KM2ATime[16]", sobj->KM2ATime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NEDNoiseHit[8]", sobj->NEDNoiseHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Count_Up_Strip_One", &sobj->Count_Up_Strip_One);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Count_Up_Wire_One", &sobj->Count_Up_Wire_One);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Count_Down_Strip_One", &sobj->Count_Down_Strip_One);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Count_Down_Wire_One", &sobj->Count_Down_Wire_One);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Count_Up_Strip_Two", &sobj->Count_Up_Strip_Two);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Count_Up_Wire_Two", &sobj->Count_Up_Wire_Two);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Count_Down_Strip_Two", &sobj->Count_Down_Strip_Two);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Count_Down_Wire_Two", &sobj->Count_Down_Wire_Two);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*FiredNStripsUpTGCOne", &sobj->FiredNStripsUpTGCOne);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*FiredNWiresUpTGCOne", &sobj->FiredNWiresUpTGCOne);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*FiredNStripsUpTGCTwo", &sobj->FiredNStripsUpTGCTwo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*FiredNWiresUpTGCTwo", &sobj->FiredNWiresUpTGCTwo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*FiredNStripsDownTGCOne", &sobj->FiredNStripsDownTGCOne);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*FiredNWiresDownTGCOne", &sobj->FiredNWiresDownTGCOne);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*FiredNStripsDownTGCTwo", &sobj->FiredNStripsDownTGCTwo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*FiredNWiresDownTGCTwo", &sobj->FiredNWiresDownTGCTwo);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_SelectBranch(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::SelectBranch : new ::SelectBranch;
   }
   static void *newArray_SelectBranch(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::SelectBranch[nElements] : new ::SelectBranch[nElements];
   }
   // Wrapper around operator delete
   static void delete_SelectBranch(void *p) {
      delete ((::SelectBranch*)p);
   }
   static void deleteArray_SelectBranch(void *p) {
      delete [] ((::SelectBranch*)p);
   }
   static void destruct_SelectBranch(void *p) {
      typedef ::SelectBranch current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::SelectBranch

//______________________________________________________________________________
namespace ROOTDict {
   void CalcuVariables_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class CalcuVariables.
      typedef ::ROOTShadow::Shadow::CalcuVariables ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::CalcuVariables*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*conf", &sobj->conf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*PedestalFile", &sobj->PedestalFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "inPath", (void*)&sobj->inPath);
      R__insp.InspectMember("string", (void*)&sobj->inPath, "inPath.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "inFileName", (void*)&sobj->inFileName);
      R__insp.InspectMember("string", (void*)&sobj->inFileName, "inFileName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*inFile", &sobj->inFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*inTree", &sobj->inTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "outPath", (void*)&sobj->outPath);
      R__insp.InspectMember("string", (void*)&sobj->outPath, "outPath.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "outFileName", (void*)&sobj->outFileName);
      R__insp.InspectMember("string", (void*)&sobj->outFileName, "outFileName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*outFile", &sobj->outFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*outTree", &sobj->outTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TSCTXY", (void*)&sobj->TSCTXY);
      R__insp.InspectMember("vector<std::pair<float,float> >", (void*)&sobj->TSCTXY, "TSCTXY.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "KM2ACharge[16]", sobj->KM2ACharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "KM2ATime[16]", sobj->KM2ATime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NEDNoiseHit[8]", sobj->NEDNoiseHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EventQuality", &sobj->EventQuality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*CalibMean[12]", &sobj->CalibMean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "event_id", &sobj->event_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Up_TGC", (void*)&sobj->Up_TGC);
      R__insp.InspectMember("Point", (void*)&sobj->Up_TGC, "Up_TGC.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Down_TGC", (void*)&sobj->Down_TGC);
      R__insp.InspectMember("Point", (void*)&sobj->Down_TGC, "Down_TGC.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Up_Scin_ScinED", (void*)&sobj->Up_Scin_ScinED);
      R__insp.InspectMember("Scin", (void*)&sobj->Up_Scin_ScinED, "Up_Scin_ScinED.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Down_Scin_ScinED", (void*)&sobj->Down_Scin_ScinED);
      R__insp.InspectMember("Scin", (void*)&sobj->Down_Scin_ScinED, "Down_Scin_ScinED.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Up_Scin", (void*)&sobj->Up_Scin);
      R__insp.InspectMember("Scin", (void*)&sobj->Up_Scin, "Up_Scin.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Down_Scin", (void*)&sobj->Down_Scin);
      R__insp.InspectMember("Scin", (void*)&sobj->Down_Scin, "Down_Scin.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ElecDet[8]", sobj->ElecDet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Muon_TOF", (void*)&sobj->Muon_TOF);
      R__insp.InspectMember("TOF", (void*)&sobj->Muon_TOF, "Muon_TOF.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrackLength", &sobj->TrackLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NEDs", &sobj->NEDs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDName[8]", sobj->EDName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*DeltaTimeUDScins[4]", &sobj->DeltaTimeUDScins);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_CalcuVariables(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::CalcuVariables : new ::CalcuVariables;
   }
   static void *newArray_CalcuVariables(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::CalcuVariables[nElements] : new ::CalcuVariables[nElements];
   }
   // Wrapper around operator delete
   static void delete_CalcuVariables(void *p) {
      delete ((::CalcuVariables*)p);
   }
   static void deleteArray_CalcuVariables(void *p) {
      delete [] ((::CalcuVariables*)p);
   }
   static void destruct_CalcuVariables(void *p) {
      typedef ::CalcuVariables current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::CalcuVariables

//______________________________________________________________________________
namespace ROOTDict {
   void AnalyseED_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class AnalyseED.
      typedef ::ROOTShadow::Shadow::AnalyseED ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::AnalyseED*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*conf", &sobj->conf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CORARSCollectionTime", (void*)&sobj->CORARSCollectionTime);
      R__insp.InspectMember("string", (void*)&sobj->CORARSCollectionTime, "CORARSCollectionTime.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "inPath", (void*)&sobj->inPath);
      R__insp.InspectMember("string", (void*)&sobj->inPath, "inPath.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "inFileName", (void*)&sobj->inFileName);
      R__insp.InspectMember("string", (void*)&sobj->inFileName, "inFileName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*inFile", &sobj->inFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*inTree", &sobj->inTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDPositionFile", &sobj->EDPositionFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "outPath", (void*)&sobj->outPath);
      R__insp.InspectMember("string", (void*)&sobj->outPath, "outPath.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "outFileName", (void*)&sobj->outFileName);
      R__insp.InspectMember("string", (void*)&sobj->outFileName, "outFileName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*outFile", &sobj->outFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NEDs", &sobj->NEDs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDName[8]", sobj->EDName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDSCT1Name[8]", sobj->EDSCT1Name);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDSCT2Name[8]", sobj->EDSCT2Name);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDSCT3Name[8]", sobj->EDSCT3Name);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDSCT4Name[8]", sobj->EDSCT4Name);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*SCT1BLRotatedPoint", &sobj->SCT1BLRotatedPoint);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*SCT2BLRotatedPoint", &sobj->SCT2BLRotatedPoint);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*SCT3BLRotatedPoint", &sobj->SCT3BLRotatedPoint);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*SCT4BLRotatedPoint", &sobj->SCT4BLRotatedPoint);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*XAxis[8]", &sobj->XAxis);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*YAxis[8]", &sobj->YAxis);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NEDNoiseHit[8]", sobj->NEDNoiseHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ElecDet[8]", sobj->ElecDet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Muon_TOF", (void*)&sobj->Muon_TOF);
      R__insp.InspectMember("TOF", (void*)&sobj->Muon_TOF, "Muon_TOF.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EventQuality", &sobj->EventQuality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDPlaneNHits[8]", &sobj->EDPlaneNHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDPlaneNFiredHits[8]", &sobj->EDPlaneNFiredHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT1NHits[8]", &sobj->EDSCT1NHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT2NHits[8]", &sobj->EDSCT2NHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT3NHits[8]", &sobj->EDSCT3NHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT4NHits[8]", &sobj->EDSCT4NHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT1NFiredHits[8]", &sobj->EDSCT1NFiredHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT2NFiredHits[8]", &sobj->EDSCT2NFiredHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT3NFiredHits[8]", &sobj->EDSCT3NFiredHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT4NFiredHits[8]", &sobj->EDSCT4NFiredHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDPlaneDetEffi2DScan[8]", &sobj->EDPlaneDetEffi2DScan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT1DetEffi2DScan[8]", &sobj->EDSCT1DetEffi2DScan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT2DetEffi2DScan[8]", &sobj->EDSCT2DetEffi2DScan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT3DetEffi2DScan[8]", &sobj->EDSCT3DetEffi2DScan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT4DetEffi2DScan[8]", &sobj->EDSCT4DetEffi2DScan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT1DetEffi1DScan[8]", &sobj->EDSCT1DetEffi1DScan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT2DetEffi1DScan[8]", &sobj->EDSCT2DetEffi1DScan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT3DetEffi1DScan[8]", &sobj->EDSCT3DetEffi1DScan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT4DetEffi1DScan[8]", &sobj->EDSCT4DetEffi1DScan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*DeltaTOF", &sobj->DeltaTOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT1MeasureTime[8]", &sobj->EDSCT1MeasureTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT2MeasureTime[8]", &sobj->EDSCT2MeasureTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT3MeasureTime[8]", &sobj->EDSCT3MeasureTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT4MeasureTime[8]", &sobj->EDSCT4MeasureTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT1ReconTime[8]", &sobj->EDSCT1ReconTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT2ReconTime[8]", &sobj->EDSCT2ReconTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT3ReconTime[8]", &sobj->EDSCT3ReconTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT4ReconTime[8]", &sobj->EDSCT4ReconTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT1DeltaTime[8]", &sobj->EDSCT1DeltaTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT2DeltaTime[8]", &sobj->EDSCT2DeltaTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT3DeltaTime[8]", &sobj->EDSCT3DeltaTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT4DeltaTime[8]", &sobj->EDSCT4DeltaTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT1CorrectedDeltaTime[8]", &sobj->EDSCT1CorrectedDeltaTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT2CorrectedDeltaTime[8]", &sobj->EDSCT2CorrectedDeltaTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT3CorrectedDeltaTime[8]", &sobj->EDSCT3CorrectedDeltaTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT4CorrectedDeltaTime[8]", &sobj->EDSCT4CorrectedDeltaTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT1DeltaTimeBin[8][4][19]", &sobj->EDSCT1DeltaTimeBin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT2DeltaTimeBin[8][4][19]", &sobj->EDSCT2DeltaTimeBin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT3DeltaTimeBin[8][4][19]", &sobj->EDSCT3DeltaTimeBin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT4DeltaTimeBin[8][4][19]", &sobj->EDSCT4DeltaTimeBin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT1CorrectedDeltaTimeBin[8][4][19]", &sobj->EDSCT1CorrectedDeltaTimeBin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT2CorrectedDeltaTimeBin[8][4][19]", &sobj->EDSCT2CorrectedDeltaTimeBin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT3CorrectedDeltaTimeBin[8][4][19]", &sobj->EDSCT3CorrectedDeltaTimeBin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT4CorrectedDeltaTimeBin[8][4][19]", &sobj->EDSCT4CorrectedDeltaTimeBin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT1TimeRes2DScan[8]", &sobj->EDSCT1TimeRes2DScan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT2TimeRes2DScan[8]", &sobj->EDSCT2TimeRes2DScan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT3TimeRes2DScan[8]", &sobj->EDSCT3TimeRes2DScan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT4TimeRes2DScan[8]", &sobj->EDSCT4TimeRes2DScan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT1TimeRes1DScan[8]", &sobj->EDSCT1TimeRes1DScan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT2TimeRes1DScan[8]", &sobj->EDSCT2TimeRes1DScan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT3TimeRes1DScan[8]", &sobj->EDSCT3TimeRes1DScan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT4TimeRes1DScan[8]", &sobj->EDSCT4TimeRes1DScan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT1TimeOffset2DScan[8]", &sobj->EDSCT1TimeOffset2DScan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT2TimeOffset2DScan[8]", &sobj->EDSCT2TimeOffset2DScan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT3TimeOffset2DScan[8]", &sobj->EDSCT3TimeOffset2DScan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT4TimeOffset2DScan[8]", &sobj->EDSCT4TimeOffset2DScan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT1TimeOffset1DScan[8]", &sobj->EDSCT1TimeOffset1DScan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT2TimeOffset1DScan[8]", &sobj->EDSCT2TimeOffset1DScan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT3TimeOffset1DScan[8]", &sobj->EDSCT3TimeOffset1DScan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT4TimeOffset1DScan[8]", &sobj->EDSCT4TimeOffset1DScan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT1SignalCharge[8]", &sobj->EDSCT1SignalCharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT2SignalCharge[8]", &sobj->EDSCT2SignalCharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT3SignalCharge[8]", &sobj->EDSCT3SignalCharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT4SignalCharge[8]", &sobj->EDSCT4SignalCharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT1SignalChargeBin[8][4][19]", &sobj->EDSCT1SignalChargeBin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT2SignalChargeBin[8][4][19]", &sobj->EDSCT2SignalChargeBin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT3SignalChargeBin[8][4][19]", &sobj->EDSCT3SignalChargeBin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT4SignalChargeBin[8][4][19]", &sobj->EDSCT4SignalChargeBin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT1EnergyRes2DScan[8]", &sobj->EDSCT1EnergyRes2DScan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT2EnergyRes2DScan[8]", &sobj->EDSCT2EnergyRes2DScan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT3EnergyRes2DScan[8]", &sobj->EDSCT3EnergyRes2DScan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT4EnergyRes2DScan[8]", &sobj->EDSCT4EnergyRes2DScan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT1EnergyRes1DScan[8]", &sobj->EDSCT1EnergyRes1DScan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT2EnergyRes1DScan[8]", &sobj->EDSCT2EnergyRes1DScan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT3EnergyRes1DScan[8]", &sobj->EDSCT3EnergyRes1DScan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT4EnergyRes1DScan[8]", &sobj->EDSCT4EnergyRes1DScan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT1ReEnergyRes2DScan[8]", &sobj->EDSCT1ReEnergyRes2DScan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT2ReEnergyRes2DScan[8]", &sobj->EDSCT2ReEnergyRes2DScan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT3ReEnergyRes2DScan[8]", &sobj->EDSCT3ReEnergyRes2DScan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT4ReEnergyRes2DScan[8]", &sobj->EDSCT4ReEnergyRes2DScan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT1ReEnergyRes1DScan[8]", &sobj->EDSCT1ReEnergyRes1DScan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT2ReEnergyRes1DScan[8]", &sobj->EDSCT2ReEnergyRes1DScan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT3ReEnergyRes1DScan[8]", &sobj->EDSCT3ReEnergyRes1DScan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT4ReEnergyRes1DScan[8]", &sobj->EDSCT4ReEnergyRes1DScan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT1SingleParticlePeak2DScan[8]", &sobj->EDSCT1SingleParticlePeak2DScan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT2SingleParticlePeak2DScan[8]", &sobj->EDSCT2SingleParticlePeak2DScan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT3SingleParticlePeak2DScan[8]", &sobj->EDSCT3SingleParticlePeak2DScan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT4SingleParticlePeak2DScan[8]", &sobj->EDSCT4SingleParticlePeak2DScan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT1SingleParticlePeak1DScan[8]", &sobj->EDSCT1SingleParticlePeak1DScan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT2SingleParticlePeak1DScan[8]", &sobj->EDSCT2SingleParticlePeak1DScan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT3SingleParticlePeak1DScan[8]", &sobj->EDSCT3SingleParticlePeak1DScan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT4SingleParticlePeak1DScan[8]", &sobj->EDSCT4SingleParticlePeak1DScan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NPreHitsOnSCT[8]", sobj->NPreHitsOnSCT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*SingleRate", &sobj->SingleRate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCTDetEffi", &sobj->EDSCTDetEffi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCTDetEffiErrors", &sobj->EDSCTDetEffiErrors);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDPlaneDetEffi[8]", &sobj->EDPlaneDetEffi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDPlaneDetEffiErrors[8]", &sobj->EDPlaneDetEffiErrors);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT1DetEffi[8]", &sobj->EDSCT1DetEffi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT2DetEffi[8]", &sobj->EDSCT2DetEffi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT3DetEffi[8]", &sobj->EDSCT3DetEffi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT4DetEffi[8]", &sobj->EDSCT4DetEffi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT1DetEffiErrors[8]", &sobj->EDSCT1DetEffiErrors);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT2DetEffiErrors[8]", &sobj->EDSCT2DetEffiErrors);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT3DetEffiErrors[8]", &sobj->EDSCT3DetEffiErrors);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT4DetEffiErrors[8]", &sobj->EDSCT4DetEffiErrors);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*SysTimeRes", &sobj->SysTimeRes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*SysTimeResError", &sobj->SysTimeResError);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ScinTimeRes", &sobj->ScinTimeRes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ScinTimeResError", &sobj->ScinTimeResError);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCTTimeRes", &sobj->EDSCTTimeRes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCTTimeResErrors", &sobj->EDSCTTimeResErrors);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCTTimeOffset", &sobj->EDSCTTimeOffset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCTTimeOffsetErrors", &sobj->EDSCTTimeOffsetErrors);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT1TimeOffset[8]", &sobj->EDSCT1TimeOffset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT2TimeOffset[8]", &sobj->EDSCT2TimeOffset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT3TimeOffset[8]", &sobj->EDSCT3TimeOffset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT4TimeOffset[8]", &sobj->EDSCT4TimeOffset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT1TimeOffsetErrors[8]", &sobj->EDSCT1TimeOffsetErrors);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT2TimeOffsetErrors[8]", &sobj->EDSCT2TimeOffsetErrors);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT3TimeOffsetErrors[8]", &sobj->EDSCT3TimeOffsetErrors);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT4TimeOffsetErrors[8]", &sobj->EDSCT4TimeOffsetErrors);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT1TimeRes[8]", &sobj->EDSCT1TimeRes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT2TimeRes[8]", &sobj->EDSCT2TimeRes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT3TimeRes[8]", &sobj->EDSCT3TimeRes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT4TimeRes[8]", &sobj->EDSCT4TimeRes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT1TimeResErrors[8]", &sobj->EDSCT1TimeResErrors);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT2TimeResErrors[8]", &sobj->EDSCT2TimeResErrors);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT3TimeResErrors[8]", &sobj->EDSCT3TimeResErrors);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT4TimeResErrors[8]", &sobj->EDSCT4TimeResErrors);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCTEnergyRes", &sobj->EDSCTEnergyRes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCTEnergyResErrors", &sobj->EDSCTEnergyResErrors);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT1EnergyRes[8]", &sobj->EDSCT1EnergyRes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT2EnergyRes[8]", &sobj->EDSCT2EnergyRes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT3EnergyRes[8]", &sobj->EDSCT3EnergyRes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT4EnergyRes[8]", &sobj->EDSCT4EnergyRes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT1EnergyResErrors[8]", &sobj->EDSCT1EnergyResErrors);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT2EnergyResErrors[8]", &sobj->EDSCT2EnergyResErrors);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT3EnergyResErrors[8]", &sobj->EDSCT3EnergyResErrors);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT4EnergyResErrors[8]", &sobj->EDSCT4EnergyResErrors);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCTReEnergyRes", &sobj->EDSCTReEnergyRes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCTReEnergyResErrors", &sobj->EDSCTReEnergyResErrors);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT1ReEnergyRes[8]", &sobj->EDSCT1ReEnergyRes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT2ReEnergyRes[8]", &sobj->EDSCT2ReEnergyRes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT3ReEnergyRes[8]", &sobj->EDSCT3ReEnergyRes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT4ReEnergyRes[8]", &sobj->EDSCT4ReEnergyRes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT1ReEnergyResErrors[8]", &sobj->EDSCT1ReEnergyResErrors);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT2ReEnergyResErrors[8]", &sobj->EDSCT2ReEnergyResErrors);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT3ReEnergyResErrors[8]", &sobj->EDSCT3ReEnergyResErrors);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT4ReEnergyResErrors[8]", &sobj->EDSCT4ReEnergyResErrors);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCTSingleParticlePeak", &sobj->EDSCTSingleParticlePeak);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCTSingleParticlePeakErrors", &sobj->EDSCTSingleParticlePeakErrors);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT1SingleParticlePeak[8]", &sobj->EDSCT1SingleParticlePeak);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT2SingleParticlePeak[8]", &sobj->EDSCT2SingleParticlePeak);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT3SingleParticlePeak[8]", &sobj->EDSCT3SingleParticlePeak);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT4SingleParticlePeak[8]", &sobj->EDSCT4SingleParticlePeak);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT1SingleParticlePeakErrors[8]", &sobj->EDSCT1SingleParticlePeakErrors);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT2SingleParticlePeakErrors[8]", &sobj->EDSCT2SingleParticlePeakErrors);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT3SingleParticlePeakErrors[8]", &sobj->EDSCT3SingleParticlePeakErrors);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDSCT4SingleParticlePeakErrors[8]", &sobj->EDSCT4SingleParticlePeakErrors);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_AnalyseED(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::AnalyseED : new ::AnalyseED;
   }
   static void *newArray_AnalyseED(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::AnalyseED[nElements] : new ::AnalyseED[nElements];
   }
   // Wrapper around operator delete
   static void delete_AnalyseED(void *p) {
      delete ((::AnalyseED*)p);
   }
   static void deleteArray_AnalyseED(void *p) {
      delete [] ((::AnalyseED*)p);
   }
   static void destruct_AnalyseED(void *p) {
      typedef ::AnalyseED current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::AnalyseED

//______________________________________________________________________________
namespace ROOTDict {
   void ChargeCorrectTime_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class ChargeCorrectTime.
      typedef ::ROOTShadow::Shadow::ChargeCorrectTime ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::ChargeCorrectTime*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*conf", &sobj->conf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "inPath", (void*)&sobj->inPath);
      R__insp.InspectMember("string", (void*)&sobj->inPath, "inPath.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "inFileName", (void*)&sobj->inFileName);
      R__insp.InspectMember("string", (void*)&sobj->inFileName, "inFileName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*inFile", &sobj->inFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*inTree", &sobj->inTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "outPath", (void*)&sobj->outPath);
      R__insp.InspectMember("string", (void*)&sobj->outPath, "outPath.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "outFileName", (void*)&sobj->outFileName);
      R__insp.InspectMember("string", (void*)&sobj->outFileName, "outFileName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*outFile", &sobj->outFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NEDs", &sobj->NEDs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDName[8]", sobj->EDName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ElecDet[8]", sobj->ElecDet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ChargeDeltaTime[8]", &sobj->ChargeDeltaTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*DeltaTime[8][55]", &sobj->DeltaTime);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_ChargeCorrectTime(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ChargeCorrectTime : new ::ChargeCorrectTime;
   }
   static void *newArray_ChargeCorrectTime(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ChargeCorrectTime[nElements] : new ::ChargeCorrectTime[nElements];
   }
   // Wrapper around operator delete
   static void delete_ChargeCorrectTime(void *p) {
      delete ((::ChargeCorrectTime*)p);
   }
   static void deleteArray_ChargeCorrectTime(void *p) {
      delete [] ((::ChargeCorrectTime*)p);
   }
   static void destruct_ChargeCorrectTime(void *p) {
      typedef ::ChargeCorrectTime current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ChargeCorrectTime

//______________________________________________________________________________
namespace ROOTDict {
   void GenerateTimeCalib_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class GenerateTimeCalib.
      typedef ::ROOTShadow::Shadow::GenerateTimeCalib ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::GenerateTimeCalib*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*chain", &sobj->chain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "inPath", (void*)&sobj->inPath);
      R__insp.InspectMember("string", (void*)&sobj->inPath, "inPath.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "outPath", (void*)&sobj->outPath);
      R__insp.InspectMember("string", (void*)&sobj->outPath, "outPath.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "inFileName", (void*)&sobj->inFileName);
      R__insp.InspectMember("string", (void*)&sobj->inFileName, "inFileName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*outFile", &sobj->outFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*outTree", &sobj->outTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*SoutTree", &sobj->SoutTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "outFileName", (void*)&sobj->outFileName);
      R__insp.InspectMember("string", (void*)&sobj->outFileName, "outFileName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TSCTXY", (void*)&sobj->TSCTXY);
      R__insp.InspectMember("vector<std::pair<float,float> >", (void*)&sobj->TSCTXY, "TSCTXY.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Up_Scin_Calib", (void*)&sobj->Up_Scin_Calib);
      R__insp.InspectMember("Scin", (void*)&sobj->Up_Scin_Calib, "Up_Scin_Calib.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Down_Scin_Calib", (void*)&sobj->Down_Scin_Calib);
      R__insp.InspectMember("Scin", (void*)&sobj->Down_Scin_Calib, "Down_Scin_Calib.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Up_Scin", (void*)&sobj->Up_Scin);
      R__insp.InspectMember("Scin", (void*)&sobj->Up_Scin, "Up_Scin.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Down_Scin", (void*)&sobj->Down_Scin);
      R__insp.InspectMember("Scin", (void*)&sobj->Down_Scin, "Down_Scin.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EventQuality", &sobj->EventQuality);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_GenerateTimeCalib(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::GenerateTimeCalib : new ::GenerateTimeCalib;
   }
   static void *newArray_GenerateTimeCalib(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::GenerateTimeCalib[nElements] : new ::GenerateTimeCalib[nElements];
   }
   // Wrapper around operator delete
   static void delete_GenerateTimeCalib(void *p) {
      delete ((::GenerateTimeCalib*)p);
   }
   static void deleteArray_GenerateTimeCalib(void *p) {
      delete [] ((::GenerateTimeCalib*)p);
   }
   static void destruct_GenerateTimeCalib(void *p) {
      typedef ::GenerateTimeCalib current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::GenerateTimeCalib

//______________________________________________________________________________
namespace ROOTDict {
   void SimulateTimeCalib_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class SimulateTimeCalib.
      typedef ::ROOTShadow::Shadow::SimulateTimeCalib ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::SimulateTimeCalib*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "inPath", (void*)&sobj->inPath);
      R__insp.InspectMember("string", (void*)&sobj->inPath, "inPath.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "outPath", (void*)&sobj->outPath);
      R__insp.InspectMember("string", (void*)&sobj->outPath, "outPath.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*inFile", &sobj->inFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*inTree", &sobj->inTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*SinTree", &sobj->SinTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "inFileName", (void*)&sobj->inFileName);
      R__insp.InspectMember("string", (void*)&sobj->inFileName, "inFileName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*outFile", &sobj->outFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*outTree", &sobj->outTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "outFileName", (void*)&sobj->outFileName);
      R__insp.InspectMember("string", (void*)&sobj->outFileName, "outFileName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*DownCalibToDistance[6]", &sobj->DownCalibToDistance);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*DownCalinBin[6][62]", &sobj->DownCalinBin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*CalibToDistance[12]", &sobj->CalibToDistance);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*CalinBin[12][62]", &sobj->CalinBin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*DownFitParas", &sobj->DownFitParas);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*FitParas", &sobj->FitParas);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Up_Scin", (void*)&sobj->Up_Scin);
      R__insp.InspectMember("Scin", (void*)&sobj->Up_Scin, "Up_Scin.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Down_Scin", (void*)&sobj->Down_Scin);
      R__insp.InspectMember("Scin", (void*)&sobj->Down_Scin, "Down_Scin.", false);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_SimulateTimeCalib(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::SimulateTimeCalib : new ::SimulateTimeCalib;
   }
   static void *newArray_SimulateTimeCalib(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::SimulateTimeCalib[nElements] : new ::SimulateTimeCalib[nElements];
   }
   // Wrapper around operator delete
   static void delete_SimulateTimeCalib(void *p) {
      delete ((::SimulateTimeCalib*)p);
   }
   static void deleteArray_SimulateTimeCalib(void *p) {
      delete [] ((::SimulateTimeCalib*)p);
   }
   static void destruct_SimulateTimeCalib(void *p) {
      typedef ::SimulateTimeCalib current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::SimulateTimeCalib

//______________________________________________________________________________
namespace ROOTDict {
   void ReGenerateTimeCalib_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class ReGenerateTimeCalib.
      typedef ::ROOTShadow::Shadow::ReGenerateTimeCalib ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::ReGenerateTimeCalib*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "inPath", (void*)&sobj->inPath);
      R__insp.InspectMember("string", (void*)&sobj->inPath, "inPath.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "inFileName", (void*)&sobj->inFileName);
      R__insp.InspectMember("string", (void*)&sobj->inFileName, "inFileName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*inFile", &sobj->inFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*inTree", &sobj->inTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "outPath", (void*)&sobj->outPath);
      R__insp.InspectMember("string", (void*)&sobj->outPath, "outPath.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "outFileName", (void*)&sobj->outFileName);
      R__insp.InspectMember("string", (void*)&sobj->outFileName, "outFileName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*outFile", &sobj->outFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*outTree", &sobj->outTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TSCTXY", (void*)&sobj->TSCTXY);
      R__insp.InspectMember("vector<std::pair<float,float> >", (void*)&sobj->TSCTXY, "TSCTXY.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*FitParas", &sobj->FitParas);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*CalibBin[12][10][48]", &sobj->CalibBin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*CalibMean[12]", &sobj->CalibMean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Up_Scin", (void*)&sobj->Up_Scin);
      R__insp.InspectMember("Scin", (void*)&sobj->Up_Scin, "Up_Scin.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Down_Scin", (void*)&sobj->Down_Scin);
      R__insp.InspectMember("Scin", (void*)&sobj->Down_Scin, "Down_Scin.", false);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_ReGenerateTimeCalib(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ReGenerateTimeCalib : new ::ReGenerateTimeCalib;
   }
   static void *newArray_ReGenerateTimeCalib(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ReGenerateTimeCalib[nElements] : new ::ReGenerateTimeCalib[nElements];
   }
   // Wrapper around operator delete
   static void delete_ReGenerateTimeCalib(void *p) {
      delete ((::ReGenerateTimeCalib*)p);
   }
   static void deleteArray_ReGenerateTimeCalib(void *p) {
      delete [] ((::ReGenerateTimeCalib*)p);
   }
   static void destruct_ReGenerateTimeCalib(void *p) {
      typedef ::ReGenerateTimeCalib current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ReGenerateTimeCalib

//______________________________________________________________________________
namespace ROOTDict {
   void ComDiscriminator_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class ComDiscriminator.
      typedef ::ROOTShadow::Shadow::ComDiscriminator ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::ComDiscriminator*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*InPut_File", &sobj->InPut_File);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "InPut_File_Name", &sobj->InPut_File_Name);
      R__insp.InspectMember(sobj->InPut_File_Name, "InPut_File_Name.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*OutPut_File", &sobj->OutPut_File);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*OutPut_Tree", &sobj->OutPut_Tree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*InPut_Tree", &sobj->InPut_Tree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "OutPut_File_Name", &sobj->OutPut_File_Name);
      R__insp.InspectMember(sobj->OutPut_File_Name, "OutPut_File_Name.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Up_TGC_Strip_One[32]", sobj->Up_TGC_Strip_One);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Up_TGC_Wire_One[32]", sobj->Up_TGC_Wire_One);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Down_TGC_Strip_One[32]", sobj->Down_TGC_Strip_One);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Down_TGC_Wire_One[32]", sobj->Down_TGC_Wire_One);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ScinED_Time_Signal[16]", sobj->ScinED_Time_Signal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ED_Charge_Signal[16]", sobj->ED_Charge_Signal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Up_TGC_Strip_Number", &sobj->Up_TGC_Strip_Number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Up_TGC_Wire_Number", &sobj->Up_TGC_Wire_Number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Down_TGC_Strip_Number", &sobj->Down_TGC_Strip_Number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Down_TGC_Wire_Number", &sobj->Down_TGC_Wire_Number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "params[189]", sobj->params);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "calib_mean[8][10][48]", sobj->calib_mean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "calib_charge[8][55]", sobj->calib_charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "event_id", &sobj->event_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Up_TGC", (void*)&sobj->Up_TGC);
      R__insp.InspectMember("Point_CD", (void*)&sobj->Up_TGC, "Up_TGC.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Down_TGC", (void*)&sobj->Down_TGC);
      R__insp.InspectMember("Point_CD", (void*)&sobj->Down_TGC, "Down_TGC.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Up_Scin", (void*)&sobj->Up_Scin);
      R__insp.InspectMember("Scin_CD", (void*)&sobj->Up_Scin, "Up_Scin.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Down_Scin", (void*)&sobj->Down_Scin);
      R__insp.InspectMember("Scin_CD", (void*)&sobj->Down_Scin, "Down_Scin.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ElecDet5", (void*)&sobj->ElecDet5);
      R__insp.InspectMember("ED_CD", (void*)&sobj->ElecDet5, "ElecDet5.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Muon_TOF", (void*)&sobj->Muon_TOF);
      R__insp.InspectMember("TOF_CD", (void*)&sobj->Muon_TOF, "Muon_TOF.", false);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_ComDiscriminator(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ComDiscriminator : new ::ComDiscriminator;
   }
   static void *newArray_ComDiscriminator(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ComDiscriminator[nElements] : new ::ComDiscriminator[nElements];
   }
   // Wrapper around operator delete
   static void delete_ComDiscriminator(void *p) {
      delete ((::ComDiscriminator*)p);
   }
   static void deleteArray_ComDiscriminator(void *p) {
      delete [] ((::ComDiscriminator*)p);
   }
   static void destruct_ComDiscriminator(void *p) {
      typedef ::ComDiscriminator current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ComDiscriminator

//______________________________________________________________________________
void Cluster::Streamer(TBuffer &R__b)
{
   // Stream an object of class Cluster.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Cluster::Class(),this);
   } else {
      R__b.WriteClassBuffer(Cluster::Class(),this);
   }
}

//______________________________________________________________________________
void Cluster::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Cluster.
      TClass *R__cl = ::Cluster::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Number", (void*)&Number);
      R__insp.InspectMember("vector<int>", (void*)&Number, "Number.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Leading", (void*)&Leading);
      R__insp.InspectMember("vector<unsigned int>", (void*)&Leading, "Leading.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Trailing", (void*)&Trailing);
      R__insp.InspectMember("vector<unsigned int>", (void*)&Trailing, "Trailing.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SignalWidth", (void*)&SignalWidth);
      R__insp.InspectMember("vector<int>", (void*)&SignalWidth, "SignalWidth.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MaxSignal", &MaxSignal);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Cluster(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Cluster : new ::Cluster;
   }
   static void *newArray_Cluster(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Cluster[nElements] : new ::Cluster[nElements];
   }
   // Wrapper around operator delete
   static void delete_Cluster(void *p) {
      delete ((::Cluster*)p);
   }
   static void deleteArray_Cluster(void *p) {
      delete [] ((::Cluster*)p);
   }
   static void destruct_Cluster(void *p) {
      typedef ::Cluster current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Cluster

//______________________________________________________________________________
namespace ROOTDict {
   void CalcuTGCScin_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class CalcuTGCScin.
      typedef ::ROOTShadow::Shadow::CalcuTGCScin ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::CalcuTGCScin*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*conf", &sobj->conf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "inPath", (void*)&sobj->inPath);
      R__insp.InspectMember("string", (void*)&sobj->inPath, "inPath.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "inFileName", (void*)&sobj->inFileName);
      R__insp.InspectMember("string", (void*)&sobj->inFileName, "inFileName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*inFile", &sobj->inFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*inTree", &sobj->inTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "outPath", (void*)&sobj->outPath);
      R__insp.InspectMember("string", (void*)&sobj->outPath, "outPath.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "outFileName", (void*)&sobj->outFileName);
      R__insp.InspectMember("string", (void*)&sobj->outFileName, "outFileName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*outFile", &sobj->outFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*outTree", &sobj->outTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Up_TGC_Strip_Leading_One[32]", sobj->Up_TGC_Strip_Leading_One);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Up_TGC_Strip_Trailing_One[32]", sobj->Up_TGC_Strip_Trailing_One);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Up_TGC_Wire_Leading_One[32]", sobj->Up_TGC_Wire_Leading_One);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Up_TGC_Wire_Trailing_One[32]", sobj->Up_TGC_Wire_Trailing_One);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Down_TGC_Strip_Leading_One[32]", sobj->Down_TGC_Strip_Leading_One);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Down_TGC_Strip_Trailing_One[32]", sobj->Down_TGC_Strip_Trailing_One);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Down_TGC_Wire_Leading_One[32]", sobj->Down_TGC_Wire_Leading_One);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Down_TGC_Wire_Trailing_One[32]", sobj->Down_TGC_Wire_Trailing_One);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Up_TGC_Strip_Leading_Two[32]", sobj->Up_TGC_Strip_Leading_Two);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Up_TGC_Strip_Trailing_Two[32]", sobj->Up_TGC_Strip_Trailing_Two);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Up_TGC_Wire_Leading_Two[32]", sobj->Up_TGC_Wire_Leading_Two);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Up_TGC_Wire_Trailing_Two[32]", sobj->Up_TGC_Wire_Trailing_Two);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Down_TGC_Strip_Leading_Two[32]", sobj->Down_TGC_Strip_Leading_Two);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Down_TGC_Strip_Trailing_Two[32]", sobj->Down_TGC_Strip_Trailing_Two);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Down_TGC_Wire_Leading_Two[32]", sobj->Down_TGC_Wire_Leading_Two);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Down_TGC_Wire_Trailing_Two[32]", sobj->Down_TGC_Wire_Trailing_Two);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TSCTXY", (void*)&sobj->TSCTXY);
      R__insp.InspectMember("vector<std::pair<float,float> >", (void*)&sobj->TSCTXY, "TSCTXY.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "UpScinV1290NChannel", &sobj->UpScinV1290NChannel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DownScinV1290NChannel", &sobj->DownScinV1290NChannel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "KM2ACharge[16]", sobj->KM2ACharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "KM2ATime[16]", sobj->KM2ATime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NEDNoiseHit[8]", sobj->NEDNoiseHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Count_Up_Strip_One", &sobj->Count_Up_Strip_One);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Count_Up_Wire_One", &sobj->Count_Up_Wire_One);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Count_Down_Strip_One", &sobj->Count_Down_Strip_One);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Count_Down_Wire_One", &sobj->Count_Down_Wire_One);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Count_Up_Strip_Two", &sobj->Count_Up_Strip_Two);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Count_Up_Wire_Two", &sobj->Count_Up_Wire_Two);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Count_Down_Strip_Two", &sobj->Count_Down_Strip_Two);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Count_Down_Wire_Two", &sobj->Count_Down_Wire_Two);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "params[189]", sobj->params);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "event_id", &sobj->event_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "event_time", &sobj->event_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Up_TGC_One", (void*)&sobj->Up_TGC_One);
      R__insp.InspectMember("TGC", (void*)&sobj->Up_TGC_One, "Up_TGC_One.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Down_TGC_One", (void*)&sobj->Down_TGC_One);
      R__insp.InspectMember("TGC", (void*)&sobj->Down_TGC_One, "Down_TGC_One.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Up_TGC_Two", (void*)&sobj->Up_TGC_Two);
      R__insp.InspectMember("TGC", (void*)&sobj->Up_TGC_Two, "Up_TGC_Two.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Down_TGC_Two", (void*)&sobj->Down_TGC_Two);
      R__insp.InspectMember("TGC", (void*)&sobj->Down_TGC_Two, "Down_TGC_Two.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Up_TGC", (void*)&sobj->Up_TGC);
      R__insp.InspectMember("Point", (void*)&sobj->Up_TGC, "Up_TGC.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Down_TGC", (void*)&sobj->Down_TGC);
      R__insp.InspectMember("Point", (void*)&sobj->Down_TGC, "Down_TGC.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Up_Scin", (void*)&sobj->Up_Scin);
      R__insp.InspectMember("Scin", (void*)&sobj->Up_Scin, "Up_Scin.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Down_Scin", (void*)&sobj->Down_Scin);
      R__insp.InspectMember("Scin", (void*)&sobj->Down_Scin, "Down_Scin.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Up_TGC_Strip_One_Cluster", (void*)&sobj->Up_TGC_Strip_One_Cluster);
      R__insp.InspectMember("vector<Cluster>", (void*)&sobj->Up_TGC_Strip_One_Cluster, "Up_TGC_Strip_One_Cluster.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Up_TGC_Wire_One_Cluster", (void*)&sobj->Up_TGC_Wire_One_Cluster);
      R__insp.InspectMember("vector<Cluster>", (void*)&sobj->Up_TGC_Wire_One_Cluster, "Up_TGC_Wire_One_Cluster.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Down_TGC_Strip_One_Cluster", (void*)&sobj->Down_TGC_Strip_One_Cluster);
      R__insp.InspectMember("vector<Cluster>", (void*)&sobj->Down_TGC_Strip_One_Cluster, "Down_TGC_Strip_One_Cluster.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Down_TGC_Wire_One_Cluster", (void*)&sobj->Down_TGC_Wire_One_Cluster);
      R__insp.InspectMember("vector<Cluster>", (void*)&sobj->Down_TGC_Wire_One_Cluster, "Down_TGC_Wire_One_Cluster.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Up_TGC_Strip_Two_Cluster", (void*)&sobj->Up_TGC_Strip_Two_Cluster);
      R__insp.InspectMember("vector<Cluster>", (void*)&sobj->Up_TGC_Strip_Two_Cluster, "Up_TGC_Strip_Two_Cluster.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Up_TGC_Wire_Two_Cluster", (void*)&sobj->Up_TGC_Wire_Two_Cluster);
      R__insp.InspectMember("vector<Cluster>", (void*)&sobj->Up_TGC_Wire_Two_Cluster, "Up_TGC_Wire_Two_Cluster.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Down_TGC_Strip_Two_Cluster", (void*)&sobj->Down_TGC_Strip_Two_Cluster);
      R__insp.InspectMember("vector<Cluster>", (void*)&sobj->Down_TGC_Strip_Two_Cluster, "Down_TGC_Strip_Two_Cluster.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Down_TGC_Wire_Two_Cluster", (void*)&sobj->Down_TGC_Wire_Two_Cluster);
      R__insp.InspectMember("vector<Cluster>", (void*)&sobj->Down_TGC_Wire_Two_Cluster, "Down_TGC_Wire_Two_Cluster.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "up_one_strip_cluster_size", (void*)&sobj->up_one_strip_cluster_size);
      R__insp.InspectMember("vector<int>", (void*)&sobj->up_one_strip_cluster_size, "up_one_strip_cluster_size.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "up_one_wire_cluster_size", (void*)&sobj->up_one_wire_cluster_size);
      R__insp.InspectMember("vector<int>", (void*)&sobj->up_one_wire_cluster_size, "up_one_wire_cluster_size.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "up_two_strip_cluster_size", (void*)&sobj->up_two_strip_cluster_size);
      R__insp.InspectMember("vector<int>", (void*)&sobj->up_two_strip_cluster_size, "up_two_strip_cluster_size.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "up_two_wire_cluster_size", (void*)&sobj->up_two_wire_cluster_size);
      R__insp.InspectMember("vector<int>", (void*)&sobj->up_two_wire_cluster_size, "up_two_wire_cluster_size.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "down_one_strip_cluster_size", (void*)&sobj->down_one_strip_cluster_size);
      R__insp.InspectMember("vector<int>", (void*)&sobj->down_one_strip_cluster_size, "down_one_strip_cluster_size.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "down_one_wire_cluster_size", (void*)&sobj->down_one_wire_cluster_size);
      R__insp.InspectMember("vector<int>", (void*)&sobj->down_one_wire_cluster_size, "down_one_wire_cluster_size.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "down_two_strip_cluster_size", (void*)&sobj->down_two_strip_cluster_size);
      R__insp.InspectMember("vector<int>", (void*)&sobj->down_two_strip_cluster_size, "down_two_strip_cluster_size.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "down_two_wire_cluster_size", (void*)&sobj->down_two_wire_cluster_size);
      R__insp.InspectMember("vector<int>", (void*)&sobj->down_two_wire_cluster_size, "down_two_wire_cluster_size.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "up_one_strip_cluster_validnumber", (void*)&sobj->up_one_strip_cluster_validnumber);
      R__insp.InspectMember("vector<int>", (void*)&sobj->up_one_strip_cluster_validnumber, "up_one_strip_cluster_validnumber.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "up_one_wire_cluster_validnumber", (void*)&sobj->up_one_wire_cluster_validnumber);
      R__insp.InspectMember("vector<int>", (void*)&sobj->up_one_wire_cluster_validnumber, "up_one_wire_cluster_validnumber.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "up_two_strip_cluster_validnumber", (void*)&sobj->up_two_strip_cluster_validnumber);
      R__insp.InspectMember("vector<int>", (void*)&sobj->up_two_strip_cluster_validnumber, "up_two_strip_cluster_validnumber.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "up_two_wire_cluster_validnumber", (void*)&sobj->up_two_wire_cluster_validnumber);
      R__insp.InspectMember("vector<int>", (void*)&sobj->up_two_wire_cluster_validnumber, "up_two_wire_cluster_validnumber.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "down_one_strip_cluster_validnumber", (void*)&sobj->down_one_strip_cluster_validnumber);
      R__insp.InspectMember("vector<int>", (void*)&sobj->down_one_strip_cluster_validnumber, "down_one_strip_cluster_validnumber.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "down_one_wire_cluster_validnumber", (void*)&sobj->down_one_wire_cluster_validnumber);
      R__insp.InspectMember("vector<int>", (void*)&sobj->down_one_wire_cluster_validnumber, "down_one_wire_cluster_validnumber.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "down_two_strip_cluster_validnumber", (void*)&sobj->down_two_strip_cluster_validnumber);
      R__insp.InspectMember("vector<int>", (void*)&sobj->down_two_strip_cluster_validnumber, "down_two_strip_cluster_validnumber.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "down_two_wire_cluster_validnumber", (void*)&sobj->down_two_wire_cluster_validnumber);
      R__insp.InspectMember("vector<int>", (void*)&sobj->down_two_wire_cluster_validnumber, "down_two_wire_cluster_validnumber.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "up_one_strip_cluster_maxsignal", (void*)&sobj->up_one_strip_cluster_maxsignal);
      R__insp.InspectMember("vector<int>", (void*)&sobj->up_one_strip_cluster_maxsignal, "up_one_strip_cluster_maxsignal.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "up_one_wire_cluster_maxsignal", (void*)&sobj->up_one_wire_cluster_maxsignal);
      R__insp.InspectMember("vector<int>", (void*)&sobj->up_one_wire_cluster_maxsignal, "up_one_wire_cluster_maxsignal.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "up_two_strip_cluster_maxsignal", (void*)&sobj->up_two_strip_cluster_maxsignal);
      R__insp.InspectMember("vector<int>", (void*)&sobj->up_two_strip_cluster_maxsignal, "up_two_strip_cluster_maxsignal.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "up_two_wire_cluster_maxsignal", (void*)&sobj->up_two_wire_cluster_maxsignal);
      R__insp.InspectMember("vector<int>", (void*)&sobj->up_two_wire_cluster_maxsignal, "up_two_wire_cluster_maxsignal.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "down_one_strip_cluster_maxsignal", (void*)&sobj->down_one_strip_cluster_maxsignal);
      R__insp.InspectMember("vector<int>", (void*)&sobj->down_one_strip_cluster_maxsignal, "down_one_strip_cluster_maxsignal.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "down_one_wire_cluster_maxsignal", (void*)&sobj->down_one_wire_cluster_maxsignal);
      R__insp.InspectMember("vector<int>", (void*)&sobj->down_one_wire_cluster_maxsignal, "down_one_wire_cluster_maxsignal.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "down_two_strip_cluster_maxsignal", (void*)&sobj->down_two_strip_cluster_maxsignal);
      R__insp.InspectMember("vector<int>", (void*)&sobj->down_two_strip_cluster_maxsignal, "down_two_strip_cluster_maxsignal.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "down_two_wire_cluster_maxsignal", (void*)&sobj->down_two_wire_cluster_maxsignal);
      R__insp.InspectMember("vector<int>", (void*)&sobj->down_two_wire_cluster_maxsignal, "down_two_wire_cluster_maxsignal.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Delta_Up_Strip_ValidNumber", &sobj->Delta_Up_Strip_ValidNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Delta_Up_Wire_ValidNumber", &sobj->Delta_Up_Wire_ValidNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Delta_Down_Strip_ValidNumber", &sobj->Delta_Down_Strip_ValidNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Delta_Down_Wire_ValidNumber", &sobj->Delta_Down_Wire_ValidNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EventQuality", &sobj->EventQuality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nosignal", &sobj->nosignal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EventQualityDis", &sobj->EventQualityDis);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*UpTGCOneStripSignalWidth", &sobj->UpTGCOneStripSignalWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*UpTGCOneWireSignalWidth", &sobj->UpTGCOneWireSignalWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*UpTGCTwoStripSignalWidth", &sobj->UpTGCTwoStripSignalWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*UpTGCTwoWireSignalWidth", &sobj->UpTGCTwoWireSignalWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*DownTGCOneStripSignalWidth", &sobj->DownTGCOneStripSignalWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*DownTGCOneWireSignalWidth", &sobj->DownTGCOneWireSignalWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*DownTGCTwoStripSignalWidth", &sobj->DownTGCTwoStripSignalWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*DownTGCTwoWireSignalWidth", &sobj->DownTGCTwoWireSignalWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*UpScinHitsGraph", &sobj->UpScinHitsGraph);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*DownScinHitsGraph", &sobj->DownScinHitsGraph);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*UpScinX", &sobj->UpScinX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*DownScinX", &sobj->DownScinX);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_CalcuTGCScin(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::CalcuTGCScin : new ::CalcuTGCScin;
   }
   static void *newArray_CalcuTGCScin(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::CalcuTGCScin[nElements] : new ::CalcuTGCScin[nElements];
   }
   // Wrapper around operator delete
   static void delete_CalcuTGCScin(void *p) {
      delete ((::CalcuTGCScin*)p);
   }
   static void deleteArray_CalcuTGCScin(void *p) {
      delete [] ((::CalcuTGCScin*)p);
   }
   static void destruct_CalcuTGCScin(void *p) {
      typedef ::CalcuTGCScin current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::CalcuTGCScin

//______________________________________________________________________________
namespace ROOTDict {
   void LocateED_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class LocateED.
      typedef ::ROOTShadow::Shadow::LocateED ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::LocateED*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*conf", &sobj->conf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "inPath", (void*)&sobj->inPath);
      R__insp.InspectMember("string", (void*)&sobj->inPath, "inPath.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "inFileName", (void*)&sobj->inFileName);
      R__insp.InspectMember("string", (void*)&sobj->inFileName, "inFileName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*inFile", &sobj->inFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*inTree", &sobj->inTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "outPath", (void*)&sobj->outPath);
      R__insp.InspectMember("string", (void*)&sobj->outPath, "outPath.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "outFileName", (void*)&sobj->outFileName);
      R__insp.InspectMember("string", (void*)&sobj->outFileName, "outFileName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*outFile", &sobj->outFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NEDs", &sobj->NEDs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDName[8]", sobj->EDName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDSCT1Name[8]", sobj->EDSCT1Name);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDSCT2Name[8]", sobj->EDSCT2Name);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDSCT3Name[8]", sobj->EDSCT3Name);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDSCT4Name[8]", sobj->EDSCT4Name);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDHitsGraphs[8]", &sobj->EDHitsGraphs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*RotatedEDHitsGraphs[8]", &sobj->RotatedEDHitsGraphs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EDNoisesGraphs[8]", &sobj->EDNoisesGraphs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*RotatedEDNoisesGraphs[8]", &sobj->RotatedEDNoisesGraphs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Inner1BLine[8]", &sobj->Inner1BLine);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Inner1TLine[8]", &sobj->Inner1TLine);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Inner1LLine[8]", &sobj->Inner1LLine);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Inner1RLine[8]", &sobj->Inner1RLine);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Outer1BLine[8]", &sobj->Outer1BLine);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Outer1TLine[8]", &sobj->Outer1TLine);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Outer1LLine[8]", &sobj->Outer1LLine);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Outer1RLine[8]", &sobj->Outer1RLine);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Inner2BLine[8]", &sobj->Inner2BLine);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Inner2TLine[8]", &sobj->Inner2TLine);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Inner2LLine[8]", &sobj->Inner2LLine);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Inner2RLine[8]", &sobj->Inner2RLine);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Outer2BLine[8]", &sobj->Outer2BLine);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Outer2TLine[8]", &sobj->Outer2TLine);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Outer2LLine[8]", &sobj->Outer2LLine);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Outer2RLine[8]", &sobj->Outer2RLine);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Inner3BLine[8]", &sobj->Inner3BLine);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Inner3TLine[8]", &sobj->Inner3TLine);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Inner3LLine[8]", &sobj->Inner3LLine);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Inner3RLine[8]", &sobj->Inner3RLine);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Outer3BLine[8]", &sobj->Outer3BLine);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Outer3TLine[8]", &sobj->Outer3TLine);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Outer3LLine[8]", &sobj->Outer3LLine);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Outer3RLine[8]", &sobj->Outer3RLine);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Inner4BLine[8]", &sobj->Inner4BLine);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Inner4TLine[8]", &sobj->Inner4TLine);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Inner4LLine[8]", &sobj->Inner4LLine);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Inner4RLine[8]", &sobj->Inner4RLine);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Outer4BLine[8]", &sobj->Outer4BLine);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Outer4TLine[8]", &sobj->Outer4TLine);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Outer4LLine[8]", &sobj->Outer4LLine);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Outer4RLine[8]", &sobj->Outer4RLine);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*FuncSlope", &sobj->FuncSlope);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*XTruncation", &sobj->XTruncation);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*YTruncation", &sobj->YTruncation);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*SCT1BLPoint", &sobj->SCT1BLPoint);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*SCT2BLPoint", &sobj->SCT2BLPoint);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*SCT3BLPoint", &sobj->SCT3BLPoint);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*SCT4BLPoint", &sobj->SCT4BLPoint);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*SCT1BLRotatedPoint", &sobj->SCT1BLRotatedPoint);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*SCT2BLRotatedPoint", &sobj->SCT2BLRotatedPoint);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*SCT3BLRotatedPoint", &sobj->SCT3BLRotatedPoint);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*SCT4BLRotatedPoint", &sobj->SCT4BLRotatedPoint);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_LocateED(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::LocateED : new ::LocateED;
   }
   static void *newArray_LocateED(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::LocateED[nElements] : new ::LocateED[nElements];
   }
   // Wrapper around operator delete
   static void delete_LocateED(void *p) {
      delete ((::LocateED*)p);
   }
   static void deleteArray_LocateED(void *p) {
      delete [] ((::LocateED*)p);
   }
   static void destruct_LocateED(void *p) {
      typedef ::LocateED current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::LocateED

//______________________________________________________________________________
namespace ROOTDict {
   void ReCalcuVariables_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class ReCalcuVariables.
      typedef ::ROOTShadow::Shadow::ReCalcuVariables ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::ReCalcuVariables*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*conf", &sobj->conf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "inPath", (void*)&sobj->inPath);
      R__insp.InspectMember("string", (void*)&sobj->inPath, "inPath.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "inFileName", (void*)&sobj->inFileName);
      R__insp.InspectMember("string", (void*)&sobj->inFileName, "inFileName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*inFile", &sobj->inFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*inTree", &sobj->inTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "outPath", (void*)&sobj->outPath);
      R__insp.InspectMember("string", (void*)&sobj->outPath, "outPath.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "outFileName", (void*)&sobj->outFileName);
      R__insp.InspectMember("string", (void*)&sobj->outFileName, "outFileName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*outFile", &sobj->outFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*outTree", &sobj->outTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NEDs", &sobj->NEDs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDName[8]", sobj->EDName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NEDNoiseHit[8]", sobj->NEDNoiseHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ElecDet[8]", sobj->ElecDet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EventQuality", &sobj->EventQuality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Muon_TOF", (void*)&sobj->Muon_TOF);
      R__insp.InspectMember("TOF", (void*)&sobj->Muon_TOF, "Muon_TOF.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrackLength", &sobj->TrackLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*FuncSlope", &sobj->FuncSlope);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ChargeDeltaTime[8]", &sobj->ChargeDeltaTime);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_ReCalcuVariables(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ReCalcuVariables : new ::ReCalcuVariables;
   }
   static void *newArray_ReCalcuVariables(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ReCalcuVariables[nElements] : new ::ReCalcuVariables[nElements];
   }
   // Wrapper around operator delete
   static void delete_ReCalcuVariables(void *p) {
      delete ((::ReCalcuVariables*)p);
   }
   static void deleteArray_ReCalcuVariables(void *p) {
      delete [] ((::ReCalcuVariables*)p);
   }
   static void destruct_ReCalcuVariables(void *p) {
      typedef ::ReCalcuVariables current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ReCalcuVariables

//______________________________________________________________________________
namespace ROOTDict {
   void ConfigureClass_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class ConfigureClass.
      typedef ::ROOTShadow::Shadow::ConfigureClass ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::ConfigureClass*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Temperature", (void*)&sobj->Temperature);
      R__insp.InspectMember("string", (void*)&sobj->Temperature, "Temperature.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ProcessAllStages", &sobj->ProcessAllStages);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "process_stages", (void*)&sobj->process_stages);
      R__insp.InspectMember("string", (void*)&sobj->process_stages, "process_stages.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "process_stage", &sobj->process_stage);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "inPath", (void*)&sobj->inPath);
      R__insp.InspectMember("string", (void*)&sobj->inPath, "inPath.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "outPath", (void*)&sobj->outPath);
      R__insp.InspectMember("string", (void*)&sobj->outPath, "outPath.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "doTimeCalib", &sobj->doTimeCalib);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CalibrationConfFile", (void*)&sobj->CalibrationConfFile);
      R__insp.InspectMember("string", (void*)&sobj->CalibrationConfFile, "CalibrationConfFile.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TimeCalibrationFile", (void*)&sobj->TimeCalibrationFile);
      R__insp.InspectMember("string", (void*)&sobj->TimeCalibrationFile, "TimeCalibrationFile.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "doLocateED", &sobj->doLocateED);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "useNormalizedCharge", &sobj->useNormalizedCharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FuncSlope[8]", sobj->FuncSlope);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "XTruncation[8]", sobj->XTruncation);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "YTruncation[8]", sobj->YTruncation);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CORARSCollectionTime", (void*)&sobj->CORARSCollectionTime);
      R__insp.InspectMember("string", (void*)&sobj->CORARSCollectionTime, "CORARSCollectionTime.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "WRCollectionTime", (void*)&sobj->WRCollectionTime);
      R__insp.InspectMember("string", (void*)&sobj->WRCollectionTime, "WRCollectionTime.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TSCTFile", (void*)&sobj->TSCTFile);
      R__insp.InspectMember("string", (void*)&sobj->TSCTFile, "TSCTFile.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TSCTXY", (void*)&sobj->TSCTXY);
      R__insp.InspectMember("vector<std::pair<float,float> >", (void*)&sobj->TSCTXY, "TSCTXY.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NEDs", &sobj->NEDs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDName[8]", sobj->EDName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDSCT1Name[8]", sobj->EDSCT1Name);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDSCT2Name[8]", sobj->EDSCT2Name);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDSCT3Name[8]", sobj->EDSCT3Name);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDSCT4Name[8]", sobj->EDSCT4Name);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDZ[8]", sobj->EDZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDV1290NChannel[8]", sobj->EDV1290NChannel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDV792NChannel[8]", sobj->EDV792NChannel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "UpScinV1290NChannel", &sobj->UpScinV1290NChannel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DownScinV1290NChannel", &sobj->DownScinV1290NChannel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TriggerID", &sobj->TriggerID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "UpScinID", &sobj->UpScinID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DownScinID", &sobj->DownScinID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDID[8]", sobj->EDID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NormalEventQualityFileName", (void*)&sobj->NormalEventQualityFileName);
      R__insp.InspectMember("string", (void*)&sobj->NormalEventQualityFileName, "NormalEventQualityFileName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*NormalEventQualityFile", &sobj->NormalEventQualityFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*NormalEventQuality", &sobj->NormalEventQuality);
   }

}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_ConfigureClass(void *p) {
      delete ((::ConfigureClass*)p);
   }
   static void deleteArray_ConfigureClass(void *p) {
      delete [] ((::ConfigureClass*)p);
   }
   static void destruct_ConfigureClass(void *p) {
      typedef ::ConfigureClass current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::ConfigureClass

//______________________________________________________________________________
namespace ROOTDict {
   void Alignment_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Alignment.
      typedef ::ROOTShadow::Shadow::Alignment ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::Alignment*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*conf", &sobj->conf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "inPath", (void*)&sobj->inPath);
      R__insp.InspectMember("string", (void*)&sobj->inPath, "inPath.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "inrawfilename", (void*)&sobj->inrawfilename);
      R__insp.InspectMember("string", (void*)&sobj->inrawfilename, "inrawfilename.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "indaqfilename", (void*)&sobj->indaqfilename);
      R__insp.InspectMember("string", (void*)&sobj->indaqfilename, "indaqfilename.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*inRawFile", &sobj->inRawFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*inRawTree", &sobj->inRawTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*inDAQChain", &sobj->inDAQChain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "outPath", (void*)&sobj->outPath);
      R__insp.InspectMember("string", (void*)&sobj->outPath, "outPath.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "outfilename", (void*)&sobj->outfilename);
      R__insp.InspectMember("string", (void*)&sobj->outfilename, "outfilename.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*outFile", &sobj->outFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*outTree", &sobj->outTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "event_id", &sobj->event_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "event_time", &sobj->event_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "V1190A_1_LeadingMeasure[512]", sobj->V1190A_1_LeadingMeasure);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "V1190A_1_TrailingMeasure[512]", sobj->V1190A_1_TrailingMeasure);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "V1190A_2_LeadingMeasure[512]", sobj->V1190A_2_LeadingMeasure);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "V1190A_2_TrailingMeasure[512]", sobj->V1190A_2_TrailingMeasure);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "V1290N_measure[16]", sobj->V1290N_measure);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "V792N_measure[16]", sobj->V792N_measure);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "KM2ACharge[16]", sobj->KM2ACharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "KM2ATime[16]", sobj->KM2ATime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pevent", &sobj->pevent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "UpScinV1290NChannel", &sobj->UpScinV1290NChannel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DownScinV1290NChannel", &sobj->DownScinV1290NChannel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDV1290NChannel[8]", sobj->EDV1290NChannel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDV792NChannel[8]", sobj->EDV792NChannel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NEDs", &sobj->NEDs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TriggerID", &sobj->TriggerID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "UpScinID", &sobj->UpScinID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "UpScinHitIndex", &sobj->UpScinHitIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DownScinID", &sobj->DownScinID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DownScinHitIndex", &sobj->DownScinHitIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDID[8]", sobj->EDID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NEDNoiseHit[8]", sobj->NEDNoiseHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EDHitIndex[8]", sobj->EDHitIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isCORARSAhead", &sobj->isCORARSAhead);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NMisalignment", &sobj->NMisalignment);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DeltaTOFMean", &sobj->DeltaTOFMean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DeltaTOFSigma", &sobj->DeltaTOFSigma);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Alignment(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Alignment : new ::Alignment;
   }
   static void *newArray_Alignment(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Alignment[nElements] : new ::Alignment[nElements];
   }
   // Wrapper around operator delete
   static void delete_Alignment(void *p) {
      delete ((::Alignment*)p);
   }
   static void deleteArray_Alignment(void *p) {
      delete [] ((::Alignment*)p);
   }
   static void destruct_Alignment(void *p) {
      typedef ::Alignment current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Alignment

//______________________________________________________________________________
void KM2AEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class KM2AEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KM2AEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(KM2AEvent::Class(),this);
   }
}

//______________________________________________________________________________
void KM2AEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KM2AEvent.
      TClass *R__cl = ::KM2AEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ev_n", &ev_n);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mjd", &mjd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dt", &dt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fs", &fs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nhit", &nhit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nmd", &nmd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi[3]", phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "theta[3]", theta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nfit", &nfit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "core_x", &core_x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "core_y", &core_y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "c0", &c0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a", &a);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "b", &b);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "r", &r);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x2", &x2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hits", &hits);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KM2AEvent(void *p) {
      return  p ? new(p) ::KM2AEvent : new ::KM2AEvent;
   }
   static void *newArray_KM2AEvent(Long_t nElements, void *p) {
      return p ? new(p) ::KM2AEvent[nElements] : new ::KM2AEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_KM2AEvent(void *p) {
      delete ((::KM2AEvent*)p);
   }
   static void deleteArray_KM2AEvent(void *p) {
      delete [] ((::KM2AEvent*)p);
   }
   static void destruct_KM2AEvent(void *p) {
      typedef ::KM2AEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KM2AEvent

//______________________________________________________________________________
void KM2AHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class KM2AHit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KM2AHit::Class(),this);
   } else {
      R__b.WriteClassBuffer(KM2AHit::Class(),this);
   }
}

//______________________________________________________________________________
void KM2AHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KM2AHit.
      TClass *R__cl = ::KM2AHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id", &id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mode", &mode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ns", &ns);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "qa", &qa);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "qd", &qd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "peakTimeAnode", &peakTimeAnode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "peakTimeDynode", &peakTimeDynode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "peda", &peda);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pedd", &pedd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tag", &tag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "oe", &oe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x", &x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "y", &y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z", &z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "t0", &t0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "t", &t);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KM2AHit(void *p) {
      return  p ? new(p) ::KM2AHit : new ::KM2AHit;
   }
   static void *newArray_KM2AHit(Long_t nElements, void *p) {
      return p ? new(p) ::KM2AHit[nElements] : new ::KM2AHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_KM2AHit(void *p) {
      delete ((::KM2AHit*)p);
   }
   static void deleteArray_KM2AHit(void *p) {
      delete [] ((::KM2AHit*)p);
   }
   static void destruct_KM2AHit(void *p) {
      typedef ::KM2AHit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KM2AHit

namespace ROOTDict {
   void vectorlEClustergR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEClustergR_Dictionary();
   static void *new_vectorlEClustergR(void *p = 0);
   static void *newArray_vectorlEClustergR(Long_t size, void *p);
   static void delete_vectorlEClustergR(void *p);
   static void deleteArray_vectorlEClustergR(void *p);
   static void destruct_vectorlEClustergR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<Cluster>*)
   {
      vector<Cluster> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<Cluster>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<Cluster>", -2, "/home/zhangdf/Public/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<Cluster>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEClustergR_Dictionary, isa_proxy, 0,
                  sizeof(vector<Cluster>) );
      instance.SetNew(&new_vectorlEClustergR);
      instance.SetNewArray(&newArray_vectorlEClustergR);
      instance.SetDelete(&delete_vectorlEClustergR);
      instance.SetDeleteArray(&deleteArray_vectorlEClustergR);
      instance.SetDestructor(&destruct_vectorlEClustergR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<Cluster> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<Cluster>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEClustergR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<Cluster>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEClustergR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Cluster> : new vector<Cluster>;
   }
   static void *newArray_vectorlEClustergR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Cluster>[nElements] : new vector<Cluster>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEClustergR(void *p) {
      delete ((vector<Cluster>*)p);
   }
   static void deleteArray_vectorlEClustergR(void *p) {
      delete [] ((vector<Cluster>*)p);
   }
   static void destruct_vectorlEClustergR(void *p) {
      typedef vector<Cluster> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<Cluster>

namespace ROOTDict {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "/home/zhangdf/Public/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<int>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<int>

namespace ROOTDict {
   void vectorlEpairlEfloatcOfloatgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEpairlEfloatcOfloatgRsPgR_Dictionary();
   static void *new_vectorlEpairlEfloatcOfloatgRsPgR(void *p = 0);
   static void *newArray_vectorlEpairlEfloatcOfloatgRsPgR(Long_t size, void *p);
   static void delete_vectorlEpairlEfloatcOfloatgRsPgR(void *p);
   static void deleteArray_vectorlEpairlEfloatcOfloatgRsPgR(void *p);
   static void destruct_vectorlEpairlEfloatcOfloatgRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<pair<float,float> >*)
   {
      vector<pair<float,float> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<pair<float,float> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<pair<float,float> >", -2, "/home/zhangdf/Public/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<pair<float,float> >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEpairlEfloatcOfloatgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<pair<float,float> >) );
      instance.SetNew(&new_vectorlEpairlEfloatcOfloatgRsPgR);
      instance.SetNewArray(&newArray_vectorlEpairlEfloatcOfloatgRsPgR);
      instance.SetDelete(&delete_vectorlEpairlEfloatcOfloatgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEpairlEfloatcOfloatgRsPgR);
      instance.SetDestructor(&destruct_vectorlEpairlEfloatcOfloatgRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<pair<float,float> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<pair<float,float> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEpairlEfloatcOfloatgRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<pair<float,float> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEpairlEfloatcOfloatgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<pair<float,float> > : new vector<pair<float,float> >;
   }
   static void *newArray_vectorlEpairlEfloatcOfloatgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<pair<float,float> >[nElements] : new vector<pair<float,float> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEpairlEfloatcOfloatgRsPgR(void *p) {
      delete ((vector<pair<float,float> >*)p);
   }
   static void deleteArray_vectorlEpairlEfloatcOfloatgRsPgR(void *p) {
      delete [] ((vector<pair<float,float> >*)p);
   }
   static void destruct_vectorlEpairlEfloatcOfloatgRsPgR(void *p) {
      typedef vector<pair<float,float> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<pair<float,float> >

namespace ROOTDict {
   void vectorlEunsignedsPintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEunsignedsPintgR_Dictionary();
   static void *new_vectorlEunsignedsPintgR(void *p = 0);
   static void *newArray_vectorlEunsignedsPintgR(Long_t size, void *p);
   static void delete_vectorlEunsignedsPintgR(void *p);
   static void deleteArray_vectorlEunsignedsPintgR(void *p);
   static void destruct_vectorlEunsignedsPintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<unsigned int>*)
   {
      vector<unsigned int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<unsigned int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<unsigned int>", -2, "vector.dll", 0,
                  typeid(vector<unsigned int>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEunsignedsPintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<unsigned int>) );
      instance.SetNew(&new_vectorlEunsignedsPintgR);
      instance.SetNewArray(&newArray_vectorlEunsignedsPintgR);
      instance.SetDelete(&delete_vectorlEunsignedsPintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEunsignedsPintgR);
      instance.SetDestructor(&destruct_vectorlEunsignedsPintgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<unsigned int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<unsigned int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEunsignedsPintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<unsigned int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEunsignedsPintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned int> : new vector<unsigned int>;
   }
   static void *newArray_vectorlEunsignedsPintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned int>[nElements] : new vector<unsigned int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEunsignedsPintgR(void *p) {
      delete ((vector<unsigned int>*)p);
   }
   static void deleteArray_vectorlEunsignedsPintgR(void *p) {
      delete [] ((vector<unsigned int>*)p);
   }
   static void destruct_vectorlEunsignedsPintgR(void *p) {
      typedef vector<unsigned int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<unsigned int>

/********************************************************
* ../obj/ProcessCORARS_Dict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableProcessCORARS_Dict();

extern "C" void G__set_cpp_environmentProcessCORARS_Dict() {
  G__cpp_reset_tagtableProcessCORARS_Dict();
}
#include <new>
extern "C" int G__cpp_dllrevProcessCORARS_Dict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* ConfigureClass */
static int G__ProcessCORARS_Dict_304_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ConfigureClass::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_304_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ConfigureClass*) G__getstructoffset())->SetProcessStage((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_304_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((ConfigureClass*) G__getstructoffset())->GetinPath();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_304_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((ConfigureClass*) G__getstructoffset())->GetoutPath();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_304_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((ConfigureClass*) G__getstructoffset())->GetCORARSCollectionTime();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_304_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((ConfigureClass*) G__getstructoffset())->GetWRCollectionTime();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_304_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ConfigureClass*) G__getstructoffset())->SetTSCTXY();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_304_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<std::pair<float,float> >* pobj;
         vector<std::pair<float,float> > xobj = ((ConfigureClass*) G__getstructoffset())->GetTSCTXY();
         pobj = new vector<std::pair<float,float> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_304_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ConfigureClass*) G__getstructoffset())->GetNEDs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_304_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((ConfigureClass*) G__getstructoffset())->GetEDName((int) G__int(libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_304_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((ConfigureClass*) G__getstructoffset())->GetEDSCT1Name((int) G__int(libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_304_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((ConfigureClass*) G__getstructoffset())->GetEDSCT2Name((int) G__int(libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_304_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((ConfigureClass*) G__getstructoffset())->GetEDSCT3Name((int) G__int(libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_304_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((ConfigureClass*) G__getstructoffset())->GetEDSCT4Name((int) G__int(libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_304_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((ConfigureClass*) G__getstructoffset())->GetEDZ((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_304_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ConfigureClass*) G__getstructoffset())->GetEDV1290NChannel((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_304_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ConfigureClass*) G__getstructoffset())->GetEDV792NChannel((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_304_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ConfigureClass*) G__getstructoffset())->GetUpScinV1290NChannel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_304_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ConfigureClass*) G__getstructoffset())->GetDownScinV1290NChannel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_304_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ConfigureClass*) G__getstructoffset())->GetTriggerID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_304_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ConfigureClass*) G__getstructoffset())->GetUpScinID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_304_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ConfigureClass*) G__getstructoffset())->GetDownScinID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_304_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ConfigureClass*) G__getstructoffset())->GetEDID((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ProcessCORARS_Dict_304_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ConfigureClass* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ConfigureClass(*(ConfigureClass*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_ConfigureClass));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ConfigureClass G__TConfigureClass;
static int G__ProcessCORARS_Dict_304_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ConfigureClass*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ConfigureClass*) (soff+(sizeof(ConfigureClass)*i)))->~G__TConfigureClass();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ConfigureClass*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ConfigureClass*) (soff))->~G__TConfigureClass();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ProcessCORARS_Dict_304_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ConfigureClass* dest = (ConfigureClass*) G__getstructoffset();
   *dest = *(ConfigureClass*) libp->para[0].ref;
   const ConfigureClass& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KM2AEvent */
static int G__ProcessCORARS_Dict_687_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KM2AEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KM2AEvent[n];
     } else {
       p = new((void*) gvp) KM2AEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KM2AEvent;
     } else {
       p = new((void*) gvp) KM2AEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_KM2AEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_687_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KM2AEvent*) G__getstructoffset())->SetEvN((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_687_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KM2AEvent*) G__getstructoffset())->SetMjd((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_687_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KM2AEvent*) G__getstructoffset())->SetFs((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_687_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KM2AEvent*) G__getstructoffset())->SetDt((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_687_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KM2AEvent*) G__getstructoffset())->SetNhit((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_687_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KM2AEvent*) G__getstructoffset())->EvN());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_687_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KM2AEvent*) G__getstructoffset())->NHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_687_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KM2AEvent*) G__getstructoffset())->Nmd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_687_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const KM2AEvent*) G__getstructoffset())->Mjd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_687_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const KM2AEvent*) G__getstructoffset())->Fs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_687_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const KM2AEvent*) G__getstructoffset())->Dt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_687_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const KM2AEvent*) G__getstructoffset())->Phi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_687_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const KM2AEvent*) G__getstructoffset())->Phiz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_687_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const KM2AEvent*) G__getstructoffset())->Phio());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_687_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const KM2AEvent*) G__getstructoffset())->Theta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_687_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const KM2AEvent*) G__getstructoffset())->Thetaz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_687_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const KM2AEvent*) G__getstructoffset())->Thetao());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_687_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const KM2AEvent*) G__getstructoffset())->Corex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_687_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const KM2AEvent*) G__getstructoffset())->Corey());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_687_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const KM2AEvent*) G__getstructoffset())->C0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_687_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const KM2AEvent*) G__getstructoffset())->A());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_687_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const KM2AEvent*) G__getstructoffset())->B());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_687_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const KM2AEvent*) G__getstructoffset())->Hitlist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_687_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KM2AEvent*) G__getstructoffset())->AddHit(
(UInt_t) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (int) G__int(libp->para[5])
, (UChar_t) G__int(libp->para[6]), (UInt_t) G__int(libp->para[7])
, (UInt_t) G__int(libp->para[8]), (UInt_t) G__int(libp->para[9])
, (UChar_t) G__int(libp->para[10]), (UChar_t) G__int(libp->para[11])
, (UInt_t) G__int(libp->para[12]), (UInt_t) G__int(libp->para[13])
, (UChar_t) G__int(libp->para[14]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_687_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KM2AEvent*) G__getstructoffset())->Init();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_687_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KM2AEvent*) G__getstructoffset())->Fit((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_687_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KM2AEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_687_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KM2AEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_687_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KM2AEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_687_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KM2AEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_687_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KM2AEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_687_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KM2AEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_687_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KM2AEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_687_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KM2AEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_687_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KM2AEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ProcessCORARS_Dict_687_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KM2AEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KM2AEvent(*(KM2AEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_KM2AEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KM2AEvent G__TKM2AEvent;
static int G__ProcessCORARS_Dict_687_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KM2AEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KM2AEvent*) (soff+(sizeof(KM2AEvent)*i)))->~G__TKM2AEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KM2AEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KM2AEvent*) (soff))->~G__TKM2AEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ProcessCORARS_Dict_687_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KM2AEvent* dest = (KM2AEvent*) G__getstructoffset();
   *dest = *(KM2AEvent*) libp->para[0].ref;
   const KM2AEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KM2AHit */
static int G__ProcessCORARS_Dict_688_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KM2AHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KM2AHit[n];
     } else {
       p = new((void*) gvp) KM2AHit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KM2AHit;
     } else {
       p = new((void*) gvp) KM2AHit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_KM2AHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_688_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KM2AHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 15
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new KM2AHit(
(UInt_t) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (int) G__int(libp->para[5])
, (UChar_t) G__int(libp->para[6]), (UInt_t) G__int(libp->para[7])
, (UInt_t) G__int(libp->para[8]), (UInt_t) G__int(libp->para[9])
, (UChar_t) G__int(libp->para[10]), (UChar_t) G__int(libp->para[11])
, (UInt_t) G__int(libp->para[12]), (UInt_t) G__int(libp->para[13])
, (UChar_t) G__int(libp->para[14]));
   } else {
     p = new((void*) gvp) KM2AHit(
(UInt_t) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (int) G__int(libp->para[5])
, (UChar_t) G__int(libp->para[6]), (UInt_t) G__int(libp->para[7])
, (UInt_t) G__int(libp->para[8]), (UInt_t) G__int(libp->para[9])
, (UChar_t) G__int(libp->para[10]), (UChar_t) G__int(libp->para[11])
, (UInt_t) G__int(libp->para[12]), (UInt_t) G__int(libp->para[13])
, (UChar_t) G__int(libp->para[14]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_KM2AHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_688_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((KM2AHit*) G__getstructoffset())->ID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_688_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((KM2AHit*) G__getstructoffset())->Time());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_688_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((KM2AHit*) G__getstructoffset())->Charge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_688_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const KM2AHit*) G__getstructoffset())->X());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_688_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const KM2AHit*) G__getstructoffset())->Y());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_688_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const KM2AHit*) G__getstructoffset())->Z());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_688_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const KM2AHit*) G__getstructoffset())->T());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_688_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KM2AHit*) G__getstructoffset())->OE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_688_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 98, (long) ((const KM2AHit*) G__getstructoffset())->Id());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_688_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const KM2AHit*) G__getstructoffset())->Peda());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_688_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const KM2AHit*) G__getstructoffset())->Pedd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_688_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 98, (long) ((const KM2AHit*) G__getstructoffset())->PeakTimeAnode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_688_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 98, (long) ((const KM2AHit*) G__getstructoffset())->PeakTimeDynode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_688_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const KM2AHit*) G__getstructoffset())->Qa());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_688_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const KM2AHit*) G__getstructoffset())->Qd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_688_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KM2AHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_688_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KM2AHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_688_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KM2AHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_688_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KM2AHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_688_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KM2AHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_688_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KM2AHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_688_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KM2AHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_688_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KM2AHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_688_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KM2AHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ProcessCORARS_Dict_688_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KM2AHit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KM2AHit(*(KM2AHit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_KM2AHit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KM2AHit G__TKM2AHit;
static int G__ProcessCORARS_Dict_688_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KM2AHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KM2AHit*) (soff+(sizeof(KM2AHit)*i)))->~G__TKM2AHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KM2AHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KM2AHit*) (soff))->~G__TKM2AHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ProcessCORARS_Dict_688_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KM2AHit* dest = (KM2AHit*) G__getstructoffset();
   *dest = *(KM2AHit*) libp->para[0].ref;
   const KM2AHit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Alignment */
static int G__ProcessCORARS_Dict_689_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Alignment* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Alignment[n];
     } else {
       p = new((void*) gvp) Alignment[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Alignment;
     } else {
       p = new((void*) gvp) Alignment;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_Alignment));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_689_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Alignment*) G__getstructoffset())->Initialize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_689_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Alignment*) G__getstructoffset())->GetNMisalignment((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (bool) G__int(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_689_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Alignment*) G__getstructoffset())->GetHitIndex((KM2AEvent*) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_689_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Alignment*) G__getstructoffset())->GetNHits((KM2AEvent*) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_689_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Alignment*) G__getstructoffset())->GetEDNNoise((KM2AEvent*) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_689_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Alignment*) G__getstructoffset())->Align());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ProcessCORARS_Dict_689_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Alignment* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Alignment(*(Alignment*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_Alignment));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Alignment G__TAlignment;
static int G__ProcessCORARS_Dict_689_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Alignment*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Alignment*) (soff+(sizeof(Alignment)*i)))->~G__TAlignment();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Alignment*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Alignment*) (soff))->~G__TAlignment();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ProcessCORARS_Dict_689_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Alignment* dest = (Alignment*) G__getstructoffset();
   *dest = *(Alignment*) libp->para[0].ref;
   const Alignment& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SelectBranch */
static int G__ProcessCORARS_Dict_752_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SelectBranch* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SelectBranch[n];
     } else {
       p = new((void*) gvp) SelectBranch[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SelectBranch;
     } else {
       p = new((void*) gvp) SelectBranch;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_SelectBranch));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_752_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SelectBranch*) G__getstructoffset())->Initialize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_752_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SelectBranch*) G__getstructoffset())->Count();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_752_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SelectBranch*) G__getstructoffset())->Select();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ProcessCORARS_Dict_752_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   SelectBranch* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new SelectBranch(*(SelectBranch*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_SelectBranch));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SelectBranch G__TSelectBranch;
static int G__ProcessCORARS_Dict_752_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SelectBranch*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SelectBranch*) (soff+(sizeof(SelectBranch)*i)))->~G__TSelectBranch();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SelectBranch*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SelectBranch*) (soff))->~G__TSelectBranch();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ProcessCORARS_Dict_752_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SelectBranch* dest = (SelectBranch*) G__getstructoffset();
   *dest = *(SelectBranch*) libp->para[0].ref;
   const SelectBranch& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CalcuVariables */
static int G__ProcessCORARS_Dict_769_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CalcuVariables* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CalcuVariables[n];
     } else {
       p = new((void*) gvp) CalcuVariables[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CalcuVariables;
     } else {
       p = new((void*) gvp) CalcuVariables;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_CalcuVariables));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_769_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalcuVariables*) G__getstructoffset())->Initialize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_769_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((CalcuVariables*) G__getstructoffset())->Calcu_Scin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_769_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalcuVariables*) G__getstructoffset())->Calcu_ED();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_769_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalcuVariables*) G__getstructoffset())->Calcu();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ProcessCORARS_Dict_769_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CalcuVariables* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CalcuVariables(*(CalcuVariables*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_CalcuVariables));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CalcuVariables G__TCalcuVariables;
static int G__ProcessCORARS_Dict_769_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CalcuVariables*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CalcuVariables*) (soff+(sizeof(CalcuVariables)*i)))->~G__TCalcuVariables();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CalcuVariables*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CalcuVariables*) (soff))->~G__TCalcuVariables();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ProcessCORARS_Dict_769_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CalcuVariables* dest = (CalcuVariables*) G__getstructoffset();
   *dest = *(CalcuVariables*) libp->para[0].ref;
   const CalcuVariables& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* AnalyseED */
static int G__ProcessCORARS_Dict_1252_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AnalyseED* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AnalyseED[n];
     } else {
       p = new((void*) gvp) AnalyseED[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AnalyseED;
     } else {
       p = new((void*) gvp) AnalyseED;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_AnalyseED));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1252_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AnalyseED*) G__getstructoffset())->Initialize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1252_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AnalyseED*) G__getstructoffset())->NewHist();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1252_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AnalyseED*) G__getstructoffset())->FillHitPoint((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1252_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AnalyseED*) G__getstructoffset())->FillDeltaTOF();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1252_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AnalyseED*) G__getstructoffset())->FillDeltaTime((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1252_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AnalyseED*) G__getstructoffset())->FillCharge((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1252_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AnalyseED*) G__getstructoffset())->GetDetEffi((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1252_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AnalyseED*) G__getstructoffset())->GetSysTimeRes();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1252_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         pair<float,float>* pobj;
         pair<float,float> xobj = ((AnalyseED*) G__getstructoffset())->GetTimeRes((TH1F*) G__int(libp->para[0]));
         pobj = new pair<float,float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1252_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AnalyseED*) G__getstructoffset())->GetTimeRes((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1252_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AnalyseED*) G__getstructoffset())->GetTimeOffset((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1252_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AnalyseED*) G__getstructoffset())->Convolution(
(TH1F*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float*) G__int(libp->para[3])
, (float*) G__int(libp->para[4]), (float*) G__int(libp->para[5])
, (float*) G__int(libp->para[6]), *((string*) G__int(libp->para[7])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1252_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AnalyseED*) G__getstructoffset())->GetEnergyRes((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1252_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((AnalyseED*) G__getstructoffset())->CloneTH2F((TMatrixF*) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])), *((string*) G__int(libp->para[3]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1252_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AnalyseED*) G__getstructoffset())->ScanED((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1252_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AnalyseED*) G__getstructoffset())->Analyse();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ProcessCORARS_Dict_1252_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   AnalyseED* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new AnalyseED(*(AnalyseED*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_AnalyseED));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef AnalyseED G__TAnalyseED;
static int G__ProcessCORARS_Dict_1252_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (AnalyseED*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((AnalyseED*) (soff+(sizeof(AnalyseED)*i)))->~G__TAnalyseED();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (AnalyseED*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((AnalyseED*) (soff))->~G__TAnalyseED();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ProcessCORARS_Dict_1252_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AnalyseED* dest = (AnalyseED*) G__getstructoffset();
   *dest = *(AnalyseED*) libp->para[0].ref;
   const AnalyseED& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ChargeCorrectTime */
static int G__ProcessCORARS_Dict_1253_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ChargeCorrectTime* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ChargeCorrectTime[n];
     } else {
       p = new((void*) gvp) ChargeCorrectTime[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ChargeCorrectTime;
     } else {
       p = new((void*) gvp) ChargeCorrectTime;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_ChargeCorrectTime));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1253_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ChargeCorrectTime*) G__getstructoffset())->Initialize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1253_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ChargeCorrectTime*) G__getstructoffset())->Correct();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ProcessCORARS_Dict_1253_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ChargeCorrectTime* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ChargeCorrectTime(*(ChargeCorrectTime*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_ChargeCorrectTime));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ChargeCorrectTime G__TChargeCorrectTime;
static int G__ProcessCORARS_Dict_1253_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ChargeCorrectTime*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ChargeCorrectTime*) (soff+(sizeof(ChargeCorrectTime)*i)))->~G__TChargeCorrectTime();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ChargeCorrectTime*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ChargeCorrectTime*) (soff))->~G__TChargeCorrectTime();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ProcessCORARS_Dict_1253_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ChargeCorrectTime* dest = (ChargeCorrectTime*) G__getstructoffset();
   *dest = *(ChargeCorrectTime*) libp->para[0].ref;
   const ChargeCorrectTime& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* GenerateTimeCalib */
static int G__ProcessCORARS_Dict_1254_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GenerateTimeCalib* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GenerateTimeCalib[n];
     } else {
       p = new((void*) gvp) GenerateTimeCalib[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GenerateTimeCalib;
     } else {
       p = new((void*) gvp) GenerateTimeCalib;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_GenerateTimeCalib));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1254_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GenerateTimeCalib*) G__getstructoffset())->Initialize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1254_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((GenerateTimeCalib*) G__getstructoffset())->GetDownCalib());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1254_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GenerateTimeCalib*) G__getstructoffset())->Generate();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ProcessCORARS_Dict_1254_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   GenerateTimeCalib* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new GenerateTimeCalib(*(GenerateTimeCalib*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_GenerateTimeCalib));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef GenerateTimeCalib G__TGenerateTimeCalib;
static int G__ProcessCORARS_Dict_1254_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (GenerateTimeCalib*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((GenerateTimeCalib*) (soff+(sizeof(GenerateTimeCalib)*i)))->~G__TGenerateTimeCalib();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (GenerateTimeCalib*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((GenerateTimeCalib*) (soff))->~G__TGenerateTimeCalib();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ProcessCORARS_Dict_1254_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GenerateTimeCalib* dest = (GenerateTimeCalib*) G__getstructoffset();
   *dest = *(GenerateTimeCalib*) libp->para[0].ref;
   const GenerateTimeCalib& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SimulateTimeCalib */
static int G__ProcessCORARS_Dict_1255_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SimulateTimeCalib* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SimulateTimeCalib[n];
     } else {
       p = new((void*) gvp) SimulateTimeCalib[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SimulateTimeCalib;
     } else {
       p = new((void*) gvp) SimulateTimeCalib;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_SimulateTimeCalib));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1255_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SimulateTimeCalib*) G__getstructoffset())->Initialize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1255_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SimulateTimeCalib*) G__getstructoffset())->GetDownFitParas();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1255_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SimulateTimeCalib*) G__getstructoffset())->GetCalib();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1255_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SimulateTimeCalib*) G__getstructoffset())->Simulate();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ProcessCORARS_Dict_1255_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   SimulateTimeCalib* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new SimulateTimeCalib(*(SimulateTimeCalib*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_SimulateTimeCalib));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SimulateTimeCalib G__TSimulateTimeCalib;
static int G__ProcessCORARS_Dict_1255_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SimulateTimeCalib*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SimulateTimeCalib*) (soff+(sizeof(SimulateTimeCalib)*i)))->~G__TSimulateTimeCalib();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SimulateTimeCalib*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SimulateTimeCalib*) (soff))->~G__TSimulateTimeCalib();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ProcessCORARS_Dict_1255_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SimulateTimeCalib* dest = (SimulateTimeCalib*) G__getstructoffset();
   *dest = *(SimulateTimeCalib*) libp->para[0].ref;
   const SimulateTimeCalib& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ReGenerateTimeCalib */
static int G__ProcessCORARS_Dict_1256_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ReGenerateTimeCalib* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ReGenerateTimeCalib[n];
     } else {
       p = new((void*) gvp) ReGenerateTimeCalib[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ReGenerateTimeCalib;
     } else {
       p = new((void*) gvp) ReGenerateTimeCalib;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_ReGenerateTimeCalib));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1256_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ReGenerateTimeCalib*) G__getstructoffset())->Initialize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1256_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ReGenerateTimeCalib*) G__getstructoffset())->CalcuScinCalib();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1256_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ReGenerateTimeCalib*) G__getstructoffset())->ReGenerate();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ProcessCORARS_Dict_1256_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ReGenerateTimeCalib* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ReGenerateTimeCalib(*(ReGenerateTimeCalib*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_ReGenerateTimeCalib));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ReGenerateTimeCalib G__TReGenerateTimeCalib;
static int G__ProcessCORARS_Dict_1256_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ReGenerateTimeCalib*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ReGenerateTimeCalib*) (soff+(sizeof(ReGenerateTimeCalib)*i)))->~G__TReGenerateTimeCalib();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ReGenerateTimeCalib*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ReGenerateTimeCalib*) (soff))->~G__TReGenerateTimeCalib();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ProcessCORARS_Dict_1256_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ReGenerateTimeCalib* dest = (ReGenerateTimeCalib*) G__getstructoffset();
   *dest = *(ReGenerateTimeCalib*) libp->para[0].ref;
   const ReGenerateTimeCalib& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ComDiscriminator */
static int G__ProcessCORARS_Dict_1261_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ComDiscriminator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ComDiscriminator[n];
     } else {
       p = new((void*) gvp) ComDiscriminator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ComDiscriminator;
     } else {
       p = new((void*) gvp) ComDiscriminator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_ComDiscriminator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1261_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ComDiscriminator*) G__getstructoffset())->Initialize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1261_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ComDiscriminator*) G__getstructoffset())->Get_Number((UInt_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1261_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ComDiscriminator*) G__getstructoffset())->Get_Valid_Strip_Wire_Number());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1261_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ComDiscriminator*) G__getstructoffset())->Calcu_TGC_Coor();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1261_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ComDiscriminator*) G__getstructoffset())->Calcu_Scin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1261_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ComDiscriminator*) G__getstructoffset())->Calcu_ED5();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1261_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ComDiscriminator*) G__getstructoffset())->Calcu();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ProcessCORARS_Dict_1261_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ComDiscriminator* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ComDiscriminator(*(ComDiscriminator*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_ComDiscriminator));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ComDiscriminator G__TComDiscriminator;
static int G__ProcessCORARS_Dict_1261_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ComDiscriminator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ComDiscriminator*) (soff+(sizeof(ComDiscriminator)*i)))->~G__TComDiscriminator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ComDiscriminator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ComDiscriminator*) (soff))->~G__TComDiscriminator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ProcessCORARS_Dict_1261_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ComDiscriminator* dest = (ComDiscriminator*) G__getstructoffset();
   *dest = *(ComDiscriminator*) libp->para[0].ref;
   const ComDiscriminator& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Cluster */
static int G__ProcessCORARS_Dict_1262_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Cluster* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Cluster[n];
     } else {
       p = new((void*) gvp) Cluster[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Cluster;
     } else {
       p = new((void*) gvp) Cluster;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_Cluster));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1262_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Cluster*) G__getstructoffset())->GetMiddleNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1262_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Cluster*) G__getstructoffset())->GetMiddleNumberM3());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1262_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Cluster*) G__getstructoffset())->GetMaxSignalWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1262_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Cluster::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1262_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Cluster::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1262_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Cluster::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1262_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Cluster::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1262_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const Cluster*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1262_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Cluster*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1262_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Cluster*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1262_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Cluster*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1262_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Cluster::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1262_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Cluster::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1262_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Cluster::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1262_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Cluster::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ProcessCORARS_Dict_1262_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Cluster* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Cluster(*(Cluster*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_Cluster));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Cluster G__TCluster;
static int G__ProcessCORARS_Dict_1262_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Cluster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Cluster*) (soff+(sizeof(Cluster)*i)))->~G__TCluster();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Cluster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Cluster*) (soff))->~G__TCluster();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ProcessCORARS_Dict_1262_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Cluster* dest = (Cluster*) G__getstructoffset();
   *dest = *(Cluster*) libp->para[0].ref;
   const Cluster& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CalcuTGCScin */
static int G__ProcessCORARS_Dict_1265_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CalcuTGCScin* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CalcuTGCScin[n];
     } else {
       p = new((void*) gvp) CalcuTGCScin[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new CalcuTGCScin;
     } else {
       p = new((void*) gvp) CalcuTGCScin;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_CalcuTGCScin));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1265_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalcuTGCScin*) G__getstructoffset())->Initialize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1265_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalcuTGCScin*) G__getstructoffset())->GetClusters((UInt_t*) G__int(libp->para[0]), (UInt_t*) G__int(libp->para[1])
, (vector<Cluster>*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1265_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalcuTGCScin*) G__getstructoffset())->GetAllClusters();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1265_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalcuTGCScin*) G__getstructoffset())->GetClusterValidNumbers(*((vector<Cluster>*) G__int(libp->para[0])), (vector<int>*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1265_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((CalcuTGCScin*) G__getstructoffset())->GetValidNumber(*((vector<Cluster>*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1265_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((CalcuTGCScin*) G__getstructoffset())->GetValidNumbers());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1265_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalcuTGCScin*) G__getstructoffset())->Calcu_TGC();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1265_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((CalcuTGCScin*) G__getstructoffset())->Calcu_Scin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1265_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalcuTGCScin*) G__getstructoffset())->Calcu();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1265_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalcuTGCScin*) G__getstructoffset())->recalculate();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1265_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalcuTGCScin*) G__getstructoffset())->recalculate1();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1265_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalcuTGCScin*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1265_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((CalcuTGCScin*) G__getstructoffset())->getValidLineNumber(*((vector<int>*) G__int(libp->para[0])), *((vector<int>*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1265_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CalcuTGCScin*) G__getstructoffset())->eventAnalysis();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ProcessCORARS_Dict_1265_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CalcuTGCScin* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CalcuTGCScin(*(CalcuTGCScin*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_CalcuTGCScin));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CalcuTGCScin G__TCalcuTGCScin;
static int G__ProcessCORARS_Dict_1265_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CalcuTGCScin*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CalcuTGCScin*) (soff+(sizeof(CalcuTGCScin)*i)))->~G__TCalcuTGCScin();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CalcuTGCScin*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CalcuTGCScin*) (soff))->~G__TCalcuTGCScin();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ProcessCORARS_Dict_1265_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CalcuTGCScin* dest = (CalcuTGCScin*) G__getstructoffset();
   *dest = *(CalcuTGCScin*) libp->para[0].ref;
   const CalcuTGCScin& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<Cluster,allocator<Cluster> > */
static int G__ProcessCORARS_Dict_1267_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Cluster,allocator<Cluster> >::reference obj = ((vector<Cluster,allocator<Cluster> >*) G__getstructoffset())->at((vector<Cluster,allocator<Cluster> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1267_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Cluster,allocator<Cluster> >::const_reference obj = ((const vector<Cluster,allocator<Cluster> >*) G__getstructoffset())->at((vector<Cluster,allocator<Cluster> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1267_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Cluster,allocator<Cluster> >::iterator* pobj;
         vector<Cluster,allocator<Cluster> >::iterator xobj = ((vector<Cluster,allocator<Cluster> >*) G__getstructoffset())->begin();
         pobj = new vector<Cluster,allocator<Cluster> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1267_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Cluster,allocator<Cluster> >::iterator* pobj;
         vector<Cluster,allocator<Cluster> >::iterator xobj = ((vector<Cluster,allocator<Cluster> >*) G__getstructoffset())->end();
         pobj = new vector<Cluster,allocator<Cluster> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1267_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Cluster,allocator<Cluster> >::reverse_iterator* pobj;
         vector<Cluster,allocator<Cluster> >::reverse_iterator xobj = ((vector<Cluster,allocator<Cluster> >*) G__getstructoffset())->rbegin();
         pobj = new vector<Cluster,allocator<Cluster> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1267_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Cluster,allocator<Cluster> >::reverse_iterator* pobj;
         vector<Cluster,allocator<Cluster> >::reverse_iterator xobj = ((vector<Cluster,allocator<Cluster> >*) G__getstructoffset())->rend();
         pobj = new vector<Cluster,allocator<Cluster> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1267_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<Cluster,allocator<Cluster> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1267_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<Cluster,allocator<Cluster> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1267_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Cluster,allocator<Cluster> >*) G__getstructoffset())->resize((vector<Cluster,allocator<Cluster> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1267_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Cluster,allocator<Cluster> >*) G__getstructoffset())->resize((vector<Cluster,allocator<Cluster> >::size_type) G__int(libp->para[0]), *((Cluster*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1267_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<Cluster,allocator<Cluster> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1267_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<Cluster,allocator<Cluster> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1267_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Cluster,allocator<Cluster> >::reference obj = ((vector<Cluster,allocator<Cluster> >*) G__getstructoffset())->operator[]((vector<Cluster,allocator<Cluster> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1267_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Cluster,allocator<Cluster> >::const_reference obj = ((const vector<Cluster,allocator<Cluster> >*) G__getstructoffset())->operator[]((vector<Cluster,allocator<Cluster> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1267_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<Cluster,allocator<Cluster> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<Cluster,allocator<Cluster> >[n];
     } else {
       p = new((void*) gvp) vector<Cluster,allocator<Cluster> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<Cluster,allocator<Cluster> >;
     } else {
       p = new((void*) gvp) vector<Cluster,allocator<Cluster> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEClustercOallocatorlEClustergRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1267_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<Cluster,allocator<Cluster> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<Cluster,allocator<Cluster> >((vector<Cluster,allocator<Cluster> >::size_type) G__int(libp->para[0]), *(Cluster*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<Cluster,allocator<Cluster> >((vector<Cluster,allocator<Cluster> >::size_type) G__int(libp->para[0]), *(Cluster*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<Cluster,allocator<Cluster> >((vector<Cluster,allocator<Cluster> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<Cluster,allocator<Cluster> >((vector<Cluster,allocator<Cluster> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEClustercOallocatorlEClustergRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1267_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<Cluster,allocator<Cluster> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<Cluster,allocator<Cluster> >(*(vector<Cluster,allocator<Cluster> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<Cluster,allocator<Cluster> >(*(vector<Cluster,allocator<Cluster> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEClustercOallocatorlEClustergRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1267_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<Cluster,allocator<Cluster> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<Cluster,allocator<Cluster> >(*((vector<Cluster,allocator<Cluster> >::const_iterator*) G__int(libp->para[0])), *((vector<Cluster,allocator<Cluster> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<Cluster,allocator<Cluster> >(*((vector<Cluster,allocator<Cluster> >::const_iterator*) G__int(libp->para[0])), *((vector<Cluster,allocator<Cluster> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEClustercOallocatorlEClustergRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1267_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Cluster,allocator<Cluster> >& obj = ((vector<Cluster,allocator<Cluster> >*) G__getstructoffset())->operator=(*(vector<Cluster,allocator<Cluster> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1267_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Cluster,allocator<Cluster> >*) G__getstructoffset())->reserve((vector<Cluster,allocator<Cluster> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1267_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Cluster& obj = ((vector<Cluster,allocator<Cluster> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1267_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Cluster& obj = ((vector<Cluster,allocator<Cluster> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1267_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Cluster,allocator<Cluster> >*) G__getstructoffset())->push_back(*(Cluster*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1267_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Cluster,allocator<Cluster> >*) G__getstructoffset())->swap(*(vector<Cluster,allocator<Cluster> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1267_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Cluster,allocator<Cluster> >::iterator* pobj;
         vector<Cluster,allocator<Cluster> >::iterator xobj = ((vector<Cluster,allocator<Cluster> >*) G__getstructoffset())->insert(*((vector<Cluster,allocator<Cluster> >::iterator*) G__int(libp->para[0])), *(Cluster*) libp->para[1].ref);
         pobj = new vector<Cluster,allocator<Cluster> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1267_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Cluster,allocator<Cluster> >*) G__getstructoffset())->insert(*((vector<Cluster,allocator<Cluster> >::iterator*) G__int(libp->para[0])), *((vector<Cluster,allocator<Cluster> >::const_iterator*) G__int(libp->para[1]))
, *((vector<Cluster,allocator<Cluster> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1267_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Cluster,allocator<Cluster> >*) G__getstructoffset())->insert(*((vector<Cluster,allocator<Cluster> >::iterator*) G__int(libp->para[0])), (vector<Cluster,allocator<Cluster> >::size_type) G__int(libp->para[1])
, *(Cluster*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1267_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Cluster,allocator<Cluster> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1267_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Cluster,allocator<Cluster> >*) G__getstructoffset())->erase(*((vector<Cluster,allocator<Cluster> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1267_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Cluster,allocator<Cluster> >*) G__getstructoffset())->erase(*((vector<Cluster,allocator<Cluster> >::iterator*) G__int(libp->para[0])), *((vector<Cluster,allocator<Cluster> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1267_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<Cluster,allocator<Cluster> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<Cluster,allocator<Cluster> > G__TvectorlEClustercOallocatorlEClustergRsPgR;
static int G__ProcessCORARS_Dict_1267_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<Cluster,allocator<Cluster> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<Cluster,allocator<Cluster> >*) (soff+(sizeof(vector<Cluster,allocator<Cluster> >)*i)))->~G__TvectorlEClustercOallocatorlEClustergRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<Cluster,allocator<Cluster> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<Cluster,allocator<Cluster> >*) (soff))->~G__TvectorlEClustercOallocatorlEClustergRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* LocateED */
static int G__ProcessCORARS_Dict_1270_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LocateED* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new LocateED[n];
     } else {
       p = new((void*) gvp) LocateED[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new LocateED;
     } else {
       p = new((void*) gvp) LocateED;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_LocateED));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1270_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LocateED*) G__getstructoffset())->Initialize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1270_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LocateED*) G__getstructoffset())->GetGraphs();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1270_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LocateED*) G__getstructoffset())->GetRotatedGraphs();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1270_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LocateED*) G__getstructoffset())->GetSlope(
(int) G__int(libp->para[0]), (TGraph*) G__int(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])
, (float) G__double(libp->para[4]), (float) G__double(libp->para[5])
, (float) G__double(libp->para[6]), (float) G__double(libp->para[7])
, (float) G__double(libp->para[8]), (float) G__double(libp->para[9])
, (float*) G__int(libp->para[10]), (float*) G__int(libp->para[11])
, (float*) G__int(libp->para[12]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1270_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LocateED*) G__getstructoffset())->GetSlopes();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1270_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LocateED*) G__getstructoffset())->GetIntersectionPoints();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1270_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LocateED*) G__getstructoffset())->GetIntersectionPoint((TF1*) G__int(libp->para[0]), (TF1*) G__int(libp->para[1])
, (float*) G__int(libp->para[2]), (float*) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1270_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LocateED*) G__getstructoffset())->Tuning();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1270_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LocateED*) G__getstructoffset())->GetLines();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1270_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LocateED*) G__getstructoffset())->Write();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1270_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LocateED*) G__getstructoffset())->FindED();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ProcessCORARS_Dict_1270_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   LocateED* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new LocateED(*(LocateED*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_LocateED));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef LocateED G__TLocateED;
static int G__ProcessCORARS_Dict_1270_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (LocateED*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((LocateED*) (soff+(sizeof(LocateED)*i)))->~G__TLocateED();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (LocateED*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((LocateED*) (soff))->~G__TLocateED();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ProcessCORARS_Dict_1270_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LocateED* dest = (LocateED*) G__getstructoffset();
   *dest = *(LocateED*) libp->para[0].ref;
   const LocateED& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ReCalcuVariables */
static int G__ProcessCORARS_Dict_1271_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ReCalcuVariables* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ReCalcuVariables[n];
     } else {
       p = new((void*) gvp) ReCalcuVariables[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ReCalcuVariables;
     } else {
       p = new((void*) gvp) ReCalcuVariables;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_ReCalcuVariables));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1271_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ReCalcuVariables*) G__getstructoffset())->Initialize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ProcessCORARS_Dict_1271_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ReCalcuVariables*) G__getstructoffset())->ReCalcu();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ProcessCORARS_Dict_1271_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ReCalcuVariables* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ReCalcuVariables(*(ReCalcuVariables*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_ReCalcuVariables));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ReCalcuVariables G__TReCalcuVariables;
static int G__ProcessCORARS_Dict_1271_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ReCalcuVariables*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ReCalcuVariables*) (soff+(sizeof(ReCalcuVariables)*i)))->~G__TReCalcuVariables();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ReCalcuVariables*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ReCalcuVariables*) (soff))->~G__TReCalcuVariables();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ProcessCORARS_Dict_1271_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ReCalcuVariables* dest = (ReCalcuVariables*) G__getstructoffset();
   *dest = *(ReCalcuVariables*) libp->para[0].ref;
   const ReCalcuVariables& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* ConfigureClass */

/* KM2AEvent */

/* KM2AHit */

/* Alignment */

/* SelectBranch */

/* CalcuVariables */

/* AnalyseED */

/* ChargeCorrectTime */

/* GenerateTimeCalib */

/* SimulateTimeCalib */

/* ReGenerateTimeCalib */

/* ComDiscriminator */

/* Cluster */

/* CalcuTGCScin */

/* vector<Cluster,allocator<Cluster> > */

/* LocateED */

/* ReCalcuVariables */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncProcessCORARS_Dict {
 public:
  G__Sizep2memfuncProcessCORARS_Dict(): p(&G__Sizep2memfuncProcessCORARS_Dict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncProcessCORARS_Dict::*p)();
};

size_t G__get_sizep2memfuncProcessCORARS_Dict()
{
  G__Sizep2memfuncProcessCORARS_Dict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceProcessCORARS_Dict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ProcessCORARS_DictLN_KM2AEvent))) {
     KM2AEvent *G__Lderived;
     G__Lderived=(KM2AEvent*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ProcessCORARS_DictLN_KM2AEvent),G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ProcessCORARS_DictLN_KM2AHit))) {
     KM2AHit *G__Lderived;
     G__Lderived=(KM2AHit*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ProcessCORARS_DictLN_KM2AHit),G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableProcessCORARS_Dict() {

   /* Setting up typedef entry */
   G__search_typename2("UChar_t",98,-1,0,-1);
   G__setnewtype(-1,"Unsigned Character 1 byte (unsigned char)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<float,float> >",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<float,float> >",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<float,float> >",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<UInt_t,Int_t>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_pairlEunsignedsPintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<unsigned int,int> >",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Double_t>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Double_t>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Double_t>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTColumn_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Double_t>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Double_t>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTFlat_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Double_t>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTSub_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Double_t>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTSparseRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Double_t>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTSparseDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Double_t>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Double_t>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTColumnlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Double_t>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Double_t>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTFlatlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Double_t>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTSublEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Double_t>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTSparseRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Double_t>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTSparseDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Double_t>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TElementActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Double_t>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TElementPosActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSym<Double_t>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTSymlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparse<Double_t>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTSparselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixF",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TH1*>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_maplEstringcOTH1mUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1mUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TH1*>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_maplEstringcOTH1mUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1mUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TH1*>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_maplEstringcOTH1mUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1mUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TH1*,less<string> >",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_maplEstringcOTH1mUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1mUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,RooDataHist*>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_maplEstringcORooDataHistmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataHistmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,RooDataHist*>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_maplEstringcORooDataHistmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataHistmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,RooDataHist*>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_maplEstringcORooDataHistmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataHistmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,RooDataHist*,less<string> >",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_maplEstringcORooDataHistmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataHistmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,RooDataSet*>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_maplEstringcORooDataSetmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataSetmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,RooDataSet*>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_maplEstringcORooDataSetmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataSetmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,RooDataSet*>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_maplEstringcORooDataSetmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataSetmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,RooDataSet*,less<string> >",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_maplEstringcORooDataSetmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataSetmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,RooAbsData*>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_maplEstringcORooAbsDatamUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooAbsDatamUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,RooAbsData*>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_maplEstringcORooAbsDatamUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooAbsDatamUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,RooAbsData*>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_maplEstringcORooAbsDatamUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooAbsDatamUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,RooAbsData*,less<string> >",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_maplEstringcORooAbsDatamUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooAbsDatamUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<std::string>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<string>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,std::string>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,std::string>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,string>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,string,less<string> >",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<std::pair<RooAbsArg*,RooAbsArg*> >",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_setlEpairlERooAbsArgmUcORooAbsArgmUgRcOlesslEpairlERooAbsArgmUcORooAbsArgmUgRsPgRcOallocatorlEpairlERooAbsArgmUcORooAbsArgmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<pair<RooAbsArg*,RooAbsArg*> >",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_setlEpairlERooAbsArgmUcORooAbsArgmUgRcOlesslEpairlERooAbsArgmUcORooAbsArgmUgRsPgRcOallocatorlEpairlERooAbsArgmUcORooAbsArgmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<pair<RooAbsArg*,RooAbsArg*> >",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_setlEpairlERooAbsArgmUcORooAbsArgmUgRcOlesslEpairlERooAbsArgmUcORooAbsArgmUgRsPgRcOallocatorlEpairlERooAbsArgmUcORooAbsArgmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<pair<RooAbsArg*,RooAbsArg*>,less<pair<RooAbsArg*,RooAbsArg*> > >",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_setlEpairlERooAbsArgmUcORooAbsArgmUgRcOlesslEpairlERooAbsArgmUcORooAbsArgmUgRsPgRcOallocatorlEpairlERooAbsArgmUcORooAbsArgmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<RooAbsCache*>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_dequelERooAbsCachemUcOallocatorlERooAbsCachemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<RooAbsArg*,TRefArray*>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_maplERooAbsArgmUcOTRefArraymUcOlesslERooAbsArgmUgRcOallocatorlEpairlERooAbsArgmUsPconstcOTRefArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<RooAbsArg*,TRefArray*,less<RooAbsArg*> >",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_maplERooAbsArgmUcOTRefArraymUcOlesslERooAbsArgmUgRcOallocatorlEpairlERooAbsArgmUsPconstcOTRefArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<RooAbsArg*>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_dequelERooAbsArgmUcOallocatorlERooAbsArgmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("stack<RooAbsArg*>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_stacklERooAbsArgmUcOdequelERooAbsArgmUcOallocatorlERooAbsArgmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RooCurve*>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlERooCurvemUcOallocatorlERooCurvemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlERooCurvemUcOallocatorlERooCurvemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlERooCurvemUcOallocatorlERooCurvemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlERooCurvemUcOallocatorlERooCurvemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlERooCurvemUcOallocatorlERooCurvemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<Double_t>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_listlEdoublecOallocatorlEdoublegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<EvalError>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_listlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<RooAbsReal::EvalError>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_listlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<std::string,std::list<EvalError> >",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_pairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<string,std::list<EvalError> >",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_pairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<const RooAbsArg*,std::pair<std::string,std::list<EvalError> > >",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_maplEconstsPRooAbsArgmUcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRcOlesslEconstsPRooAbsArgmUgRcOallocatorlEpairlEconstsPRooAbsArgmUsPconstcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<const RooAbsArg*,std::pair<string,std::list<EvalError> > >",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_maplEconstsPRooAbsArgmUcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRcOlesslEconstsPRooAbsArgmUgRcOallocatorlEpairlEconstsPRooAbsArgmUsPconstcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<const RooAbsArg*,pair<string,list<RooAbsReal::EvalError,allocator<RooAbsReal::EvalError> > > >",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_maplEconstsPRooAbsArgmUcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRcOlesslEconstsPRooAbsArgmUgRcOallocatorlEpairlEconstsPRooAbsArgmUsPconstcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<const RooAbsArg*,pair<string,list<RooAbsReal::EvalError,allocator<RooAbsReal::EvalError> > >,less<const RooAbsArg*> >",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_maplEconstsPRooAbsArgmUcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRcOlesslEconstsPRooAbsArgmUgRcOallocatorlEpairlEconstsPRooAbsArgmUsPconstcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<std::string>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_listlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<string>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_listlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,RooSharedProperties*>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_maplEstringcORooSharedPropertiesmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooSharedPropertiesmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,RooSharedProperties*>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_maplEstringcORooSharedPropertiesmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooSharedPropertiesmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,RooSharedProperties*>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_maplEstringcORooSharedPropertiesmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooSharedPropertiesmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,RooSharedProperties*,less<string> >",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_maplEstringcORooSharedPropertiesmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooSharedPropertiesmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Bool_t>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEboolcOallocatorlEboolgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TClass*,int>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_maplETClassmUcOintcOlesslETClassmUgRcOallocatorlEpairlETClassmUsPconstcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TClass*,int,less<TClass*> >",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_maplETClassmUcOintcOlesslETClassmUgRcOallocatorlEpairlETClassmUsPconstcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,int>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,int>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<RooDataSet*>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_listlERooDataSetmUcOallocatorlERooDataSetmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pair>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRcOallocatorlEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRcOallocatorlEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRcOallocatorlEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRcOallocatorlEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRcOallocatorlEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<const RooArgSet*,const RooArgSet*> >",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRcOallocatorlEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Pair,ULong_t>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_maplEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRcOunsignedsPlongcOlesslEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRsPgRcOallocatorlEpairlEconstsPpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRcOunsignedsPlonggRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<const RooArgSet*,const RooArgSet*>,unsigned long>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_maplEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRcOunsignedsPlongcOlesslEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRsPgRcOallocatorlEpairlEconstsPpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRcOunsignedsPlonggRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<const RooArgSet*,const RooArgSet*>,unsigned long,less<pair<const RooArgSet*,const RooArgSet*> > >",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_maplEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRcOunsignedsPlongcOlesslEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRsPgRcOallocatorlEpairlEconstsPpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRcOunsignedsPlonggRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,std::string>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,string>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,string,less<int> >",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<StreamConfig>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RooMsgService::StreamConfig>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<vector<RooMsgService::StreamConfig,allocator<RooMsgService::StreamConfig> > >",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_dequelEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOallocatorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("stack<std::vector<StreamConfig> >",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_stacklEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOdequelEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOallocatorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("stack<vector<StreamConfig> >",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_stacklEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOdequelEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOallocatorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("stack<vector<RooMsgService::StreamConfig,allocator<RooMsgService::StreamConfig> > >",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_stacklEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOdequelEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOallocatorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,std::ostream*>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_maplEstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,std::ostream*>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_maplEstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,basic_ostream<char,char_traits<char> >*>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_maplEstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,basic_ostream<char,char_traits<char> >*,less<string> >",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_maplEstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RooNormSetCache>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlERooNormSetCachecOallocatorlERooNormSetCachegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlERooNormSetCachecOallocatorlERooNormSetCachegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlERooNormSetCachecOallocatorlERooNormSetCachegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlERooNormSetCachecOallocatorlERooNormSetCachegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlERooNormSetCachecOallocatorlERooNormSetCachegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RooAbsCacheElement*>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlERooAbsCacheElementmUcOallocatorlERooAbsCacheElementmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlERooAbsCacheElementmUcOallocatorlERooAbsCacheElementmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlERooAbsCacheElementmUcOallocatorlERooAbsCacheElementmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlERooAbsCacheElementmUcOallocatorlERooAbsCacheElementmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlERooAbsCacheElementmUcOallocatorlERooAbsCacheElementmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Int_t>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<Int_t> >",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<Int_t> >",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<int,allocator<int> > >",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pRooArgSet>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlERooArgSetmUcOallocatorlERooArgSetmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlERooArgSetmUcOallocatorlERooArgSetmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlERooArgSetmUcOallocatorlERooArgSetmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlERooArgSetmUcOallocatorlERooArgSetmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlERooArgSetmUcOallocatorlERooArgSetmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RooArgSet*>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlERooArgSetmUcOallocatorlERooArgSetmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<Double_t,Double_t>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_pairlEdoublecOdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<const RooAbsArg*,std::pair<Double_t,Double_t> >",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_maplEconstsPRooAbsArgmUcOpairlEdoublecOdoublegRcOlesslEconstsPRooAbsArgmUgRcOallocatorlEpairlEconstsPRooAbsArgmUsPconstcOpairlEdoublecOdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<const RooAbsArg*,pair<double,double> >",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_maplEconstsPRooAbsArgmUcOpairlEdoublecOdoublegRcOlesslEconstsPRooAbsArgmUgRcOallocatorlEpairlEconstsPRooAbsArgmUsPconstcOpairlEdoublecOdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<const RooAbsArg*,pair<double,double>,less<const RooAbsArg*> >",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_maplEconstsPRooAbsArgmUcOpairlEdoublecOdoublegRcOlesslEconstsPRooAbsArgmUgRcOallocatorlEpairlEconstsPRooAbsArgmUsPconstcOpairlEdoublecOdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Double_t>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("RooCacheManager<std::vector<Double_t> >",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_RooCacheManagerlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("RooCacheManager<vector<Double_t> >",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_RooCacheManagerlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<double,allocator<double> >*>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRmUcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRmUcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRmUcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRmUcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRmUcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RooAbsLValue*>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlERooAbsLValuemUcOallocatorlERooAbsLValuemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlERooAbsLValuemUcOallocatorlERooAbsLValuemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlERooAbsLValuemUcOallocatorlERooAbsLValuemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlERooAbsLValuemUcOallocatorlERooAbsLValuemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlERooAbsLValuemUcOallocatorlERooAbsLValuemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<const RooAbsBinning*>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEconstsPRooAbsBinningmUcOallocatorlEconstsPRooAbsBinningmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEconstsPRooAbsBinningmUcOallocatorlEconstsPRooAbsBinningmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEconstsPRooAbsBinningmUcOallocatorlEconstsPRooAbsBinningmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEconstsPRooAbsBinningmUcOallocatorlEconstsPRooAbsBinningmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEconstsPRooAbsBinningmUcOallocatorlEconstsPRooAbsBinningmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<Double_t> >",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<Double_t> >",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<double,allocator<double> > >",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Int_t,AnaIntConfig>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_maplEintcORooAbsCachedPdfcLcLAnaIntConfigcOlesslEintgRcOallocatorlEpairlEconstsPintcORooAbsCachedPdfcLcLAnaIntConfiggRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,RooAbsCachedPdf::AnaIntConfig>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_maplEintcORooAbsCachedPdfcLcLAnaIntConfigcOlesslEintgRcOallocatorlEpairlEconstsPintcORooAbsCachedPdfcLcLAnaIntConfiggRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,RooAbsCachedPdf::AnaIntConfig,less<int> >",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_maplEintcORooAbsCachedPdfcLcLAnaIntConfigcOlesslEintgRcOallocatorlEpairlEconstsPintcORooAbsCachedPdfcLcLAnaIntConfiggRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<std::string,int>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_pairlEstringcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<string,int>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_pairlEstringcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<std::string,int> >",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<string,int> >",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<string,int> >",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<TH1F*,bool> >",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEpairlETH1FmUcOboolgRcOallocatorlEpairlETH1FmUcOboolgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<TH1F*,bool> >",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEpairlETH1FmUcOboolgRcOallocatorlEpairlETH1FmUcOboolgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEpairlETH1FmUcOboolgRcOallocatorlEpairlETH1FmUcOboolgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEpairlETH1FmUcOboolgRcOallocatorlEpairlETH1FmUcOboolgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEpairlETH1FmUcOboolgRcOallocatorlEpairlETH1FmUcOboolgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEpairlETH1FmUcOboolgRcOallocatorlEpairlETH1FmUcOboolgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<TH1F*,bool> >",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEpairlETH1FmUcOboolgRcOallocatorlEpairlETH1FmUcOboolgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Cluster>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEClustercOallocatorlEClustergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_Cluster),0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEClustercOallocatorlEClustergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_Cluster),0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEClustercOallocatorlEClustergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_Cluster),256,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEClustercOallocatorlEClustergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_Cluster),1,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEClustercOallocatorlEClustergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_Cluster),257,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEClustercOallocatorlEClustergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEClustercOallocatorlEClustergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEClustercOallocatorlEClustergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEClustercOallocatorlEClustergRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEClustercOallocatorlEClustergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEClustercOallocatorlEClustergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEClustercOallocatorlEClustergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEClustercOallocatorlEClustergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEClustercOallocatorlEClustergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEClustercOallocatorlEClustergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEClustercOallocatorlEClustergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEClustercOallocatorlEClustergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEClustercOallocatorlEClustergRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* ConfigureClass */
static void G__setup_memvarConfigureClass(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ProcessCORARS_DictLN_ConfigureClass));
   { ConfigureClass *p; p=(ConfigureClass*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_ConfigureClass),-1,-2,4,"Singleton_instance=",0,"the only class instance of the singleton class");
   G__memvar_setup((void*)((long)(&p->Temperature)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"Temperature=",0,"temperature in las");
   G__memvar_setup((void*)((long)(&p->ProcessAllStages)-(long)(p)),103,0,0,-1,-1,-1,1,"ProcessAllStages=",0,"process all the stages or not, from the original collected data to final results");
   G__memvar_setup((void*)((long)(&p->process_stages)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"process_stages=",0,"specify the running substage");
   G__memvar_setup((void*)((long)(&p->process_stage)-(long)(p)),105,0,0,-1,-1,-1,1,"process_stage=",0,"specify the running substage, from 1 to 10");
   G__memvar_setup((void*)((long)(&p->inPath)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"inPath=",0,"inpath of the original datas collected by CORARS and White Rabbit");
   G__memvar_setup((void*)((long)(&p->outPath)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"outPath=",0,"outpath of the processing stage x , it can also be the inpath of next step");
   G__memvar_setup((void*)((long)(&p->doTimeCalib)-(long)(p)),103,0,0,-1,-1,-1,1,"doTimeCalib=",0,"do time calibration or not");
   G__memvar_setup((void*)((long)(&p->CalibrationConfFile)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"CalibrationConfFile=",0,"configuration for time calibration");
   G__memvar_setup((void*)((long)(&p->TimeCalibrationFile)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"TimeCalibrationFile=",0,"resulted calibration file used in time calibration");
   G__memvar_setup((void*)((long)(&p->doLocateED)-(long)(p)),103,0,0,-1,-1,-1,1,"doLocateED=",0,"locate ED position or not");
   G__memvar_setup((void*)((long)(&p->useNormalizedCharge)-(long)(p)),103,0,0,-1,-1,-1,1,"useNormalizedCharge=",0,"normalize charge to the united thickness of ED");
   G__memvar_setup((void*)((long)(&p->FuncSlope)-(long)(p)),102,0,0,-1,-1,-1,1,"FuncSlope[8]=",0,"slope of ED position");
   G__memvar_setup((void*)((long)(&p->XTruncation)-(long)(p)),102,0,0,-1,-1,-1,1,"XTruncation[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->YTruncation)-(long)(p)),102,0,0,-1,-1,-1,1,"YTruncation[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->CORARSCollectionTime)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"CORARSCollectionTime=",0,"collection time of CORARS");
   G__memvar_setup((void*)((long)(&p->WRCollectionTime)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"WRCollectionTime=",0,"collection time of White Rabbit DAQ with new electronics");
   G__memvar_setup((void*)((long)(&p->TSCTFile)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"TSCTFile=",0,"file containing position of Trigger SCTs");
   G__memvar_setup((void*)((long)(&p->TSCTXY)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR),G__defined_typename("vector<std::pair<float,float> >"),-1,1,"TSCTXY=",0,"x and y of the bottom left of SCT");
   G__memvar_setup((void*)((long)(&p->NEDs)-(long)(p)),105,0,0,-1,-1,-1,1,"NEDs=",0,"totoal number of measured EDs");
   G__memvar_setup((void*)((long)(&p->EDName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"EDName[8]=",0,"ED name");
   G__memvar_setup((void*)((long)(&p->EDSCT1Name)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"EDSCT1Name[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT2Name)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"EDSCT2Name[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT3Name)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"EDSCT3Name[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT4Name)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"EDSCT4Name[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDZ)-(long)(p)),102,0,0,-1,-1,-1,1,"EDZ[8]=",0,"ED Height");
   G__memvar_setup((void*)((long)(&p->EDV1290NChannel)-(long)(p)),105,0,0,-1,-1,-1,1,"EDV1290NChannel[8]=",0,"ED V1290N Channel");
   G__memvar_setup((void*)((long)(&p->EDV792NChannel)-(long)(p)),105,0,0,-1,-1,-1,1,"EDV792NChannel[8]=",0,"ED V792N Channel");
   G__memvar_setup((void*)((long)(&p->UpScinV1290NChannel)-(long)(p)),105,0,0,-1,-1,-1,1,"UpScinV1290NChannel=",0,"V1290N Channel Number of Up Scintillator");
   G__memvar_setup((void*)((long)(&p->DownScinV1290NChannel)-(long)(p)),105,0,0,-1,-1,-1,1,"DownScinV1290NChannel=",0,"V1290N Channel Number of Down Scintillator");
   G__memvar_setup((void*)((long)(&p->TriggerID)-(long)(p)),105,0,0,-1,-1,-1,1,"TriggerID=",0,"Electrinics Pad ID of Trigger");
   G__memvar_setup((void*)((long)(&p->UpScinID)-(long)(p)),105,0,0,-1,-1,-1,1,"UpScinID=",0,"Electrinics Pad ID of Up Scintillator");
   G__memvar_setup((void*)((long)(&p->DownScinID)-(long)(p)),105,0,0,-1,-1,-1,1,"DownScinID=",0,"Electrinics Pad ID of Down Scintillator");
   G__memvar_setup((void*)((long)(&p->EDID)-(long)(p)),105,0,0,-1,-1,-1,1,"EDID[8]=",0,"Electrinics Pad ID of EDs");
   G__memvar_setup((void*)((long)(&p->NormalEventQualityFileName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"NormalEventQualityFileName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NormalEventQualityFile)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TFile),-1,-1,1,"NormalEventQualityFile=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NormalEventQuality)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"NormalEventQuality=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KM2AEvent */
static void G__setup_memvarKM2AEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ProcessCORARS_DictLN_KM2AEvent));
   { KM2AEvent *p; p=(KM2AEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"ev_n=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"mjd=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"dt=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fs=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nhit=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nmd=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"phi[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"theta[3]=",0,"0: even, 1: odd, 2: the whole array");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nfit=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"core_x=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"core_y=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"c0=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"a=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"b=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"r=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"x2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TClonesArray),-1,-1,4,"hits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KM2AHit */
static void G__setup_memvarKM2AHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ProcessCORARS_DictLN_KM2AHit));
   { KM2AHit *p; p=(KM2AHit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"id=",0,(char*)NULL);
   G__memvar_setup((void*)0,98,0,0,-1,G__defined_typename("UChar_t"),-1,4,"mode=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"ns=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"qa=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"qd=",0,(char*)NULL);
   G__memvar_setup((void*)0,98,0,0,-1,G__defined_typename("UChar_t"),-1,4,"peakTimeAnode=",0,(char*)NULL);
   G__memvar_setup((void*)0,98,0,0,-1,G__defined_typename("UChar_t"),-1,4,"peakTimeDynode=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"peda=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"pedd=",0,(char*)NULL);
   G__memvar_setup((void*)0,98,0,0,-1,G__defined_typename("UChar_t"),-1,4,"tag=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"oe=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"x=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"y=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"z=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"t0=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"t=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Alignment */
static void G__setup_memvarAlignment(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ProcessCORARS_DictLN_Alignment));
   { Alignment *p; p=(Alignment*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_ConfigureClass),-1,-1,4,"conf=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,4,"inPath=",0,"path of thein data files");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,4,"inrawfilename=",0,"in file name collected by White Babbit DAQ");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,4,"indaqfilename=",0,"in file name collected by DAQ with new electronics ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TFile),-1,-1,4,"inRawFile=",0,"in root file of CORARS DAQ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TTree),-1,-1,4,"inRawTree=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TChain),-1,-1,4,"inDAQChain=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,4,"outPath=",0,"out path");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,4,"outfilename=",0,"out file name");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TFile),-1,-1,4,"outFile=",0,"out root file containing measured time and charge of Scintillor s and EDs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TTree),-1,-1,4,"outTree=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"event_id=",0,"event id ");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"event_time=",0,"event time");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"V1190A_1_LeadingMeasure[512]=",0,"leading and trailing signal measured by V1190A");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"V1190A_1_TrailingMeasure[512]=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"V1190A_2_LeadingMeasure[512]=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"V1190A_2_TrailingMeasure[512]=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"V1290N_measure[16]=",0,"time  measured by V1290N");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"V792N_measure[16]=",0,"charge measured by V792N");
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"KM2ACharge[16]=",0,"charge measured by new electronics pad");
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"KM2ATime[16]=",0,"time measured by new electronics pad");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_KM2AEvent),-1,-1,4,"pevent=",0,"event of White Rabbit");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"UpScinV1290NChannel=",0,"V1290N Channel Number of Up Scintillator");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"DownScinV1290NChannel=",0,"V1290N Channel Number of Down Scintillator");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"EDV1290NChannel[8]=",0,"ED V1290N Channel");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"EDV792NChannel[8]=",0,"ED V792N Channel");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"NEDs=",0,"Number of measured EDs");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"TriggerID=",0,"Electrinics Pad ID of Trigger");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"UpScinID=",0,"Electrinics Pad ID of Up Scintillator ");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"UpScinHitIndex=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"DownScinID=",0,"Electrinics Pad ID of Down Scintillator");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"DownScinHitIndex=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"EDID[8]=",0,"Electrinics Pad ID of EDs");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"NEDNoiseHit[8]=",0,"Number of noise hits before trigger");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"EDHitIndex[8]=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"isCORARSAhead=",0,"true: CORARS records event first, false: White Rabbit records event first");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"NMisalignment=",0,"N of event of misalignment between CORARAS and White Babbit");
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"DeltaTOFMean=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"DeltaTOFSigma=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SelectBranch */
static void G__setup_memvarSelectBranch(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ProcessCORARS_DictLN_SelectBranch));
   { SelectBranch *p; p=(SelectBranch*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_ConfigureClass),-1,-1,4,"conf=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->inPath)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"inPath=",0,"path of thein data files");
   G__memvar_setup((void*)((long)(&p->inFileName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"inFileName=",0,"in file name ");
   G__memvar_setup((void*)((long)(&p->inFile)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TFile),-1,-1,1,"inFile=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->inTree)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TTree),-1,-1,1,"inTree=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->outPath)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"outPath=",0,"out path");
   G__memvar_setup((void*)((long)(&p->outFileName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"outFileName=",0,"out file name");
   G__memvar_setup((void*)((long)(&p->outFile)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TFile),-1,-1,1,"outFile=",0,"out root file containing measured time and charge of Scintillor s and EDs");
   G__memvar_setup((void*)((long)(&p->outTree)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TTree),-1,-1,1,"outTree=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->event_id)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"event_id=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->event_time)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"event_time=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TGC_Leading_One)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"TGC_Leading_One[512]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TGC_Trailing_One)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"TGC_Trailing_One[512]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TGC_Leading_Two)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"TGC_Leading_Two[512]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TGC_Trailing_Two)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"TGC_Trailing_Two[512]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->KM2ACharge)-(long)(p)),102,0,0,-1,-1,-1,1,"KM2ACharge[16]=",0,"charge measured by new electronics pad");
   G__memvar_setup((void*)((long)(&p->KM2ATime)-(long)(p)),102,0,0,-1,-1,-1,1,"KM2ATime[16]=",0,"time measured by new electronics pad");
   G__memvar_setup((void*)((long)(&p->NEDNoiseHit)-(long)(p)),105,0,0,-1,-1,-1,1,"NEDNoiseHit[8]=",0,"Number of noise hits before trigger");
   G__memvar_setup((void*)((long)(&p->Count_Up_Strip_One)-(long)(p)),105,0,0,-1,-1,-1,1,"Count_Up_Strip_One=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Count_Up_Wire_One)-(long)(p)),105,0,0,-1,-1,-1,1,"Count_Up_Wire_One=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Count_Down_Strip_One)-(long)(p)),105,0,0,-1,-1,-1,1,"Count_Down_Strip_One=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Count_Down_Wire_One)-(long)(p)),105,0,0,-1,-1,-1,1,"Count_Down_Wire_One=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Count_Up_Strip_Two)-(long)(p)),105,0,0,-1,-1,-1,1,"Count_Up_Strip_Two=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Count_Up_Wire_Two)-(long)(p)),105,0,0,-1,-1,-1,1,"Count_Up_Wire_Two=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Count_Down_Strip_Two)-(long)(p)),105,0,0,-1,-1,-1,1,"Count_Down_Strip_Two=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Count_Down_Wire_Two)-(long)(p)),105,0,0,-1,-1,-1,1,"Count_Down_Wire_Two=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FiredNStripsUpTGCOne)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1I),-1,-1,1,"FiredNStripsUpTGCOne=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FiredNWiresUpTGCOne)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1I),-1,-1,1,"FiredNWiresUpTGCOne=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FiredNStripsUpTGCTwo)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1I),-1,-1,1,"FiredNStripsUpTGCTwo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FiredNWiresUpTGCTwo)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1I),-1,-1,1,"FiredNWiresUpTGCTwo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FiredNStripsDownTGCOne)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1I),-1,-1,1,"FiredNStripsDownTGCOne=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FiredNWiresDownTGCOne)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1I),-1,-1,1,"FiredNWiresDownTGCOne=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FiredNStripsDownTGCTwo)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1I),-1,-1,1,"FiredNStripsDownTGCTwo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FiredNWiresDownTGCTwo)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1I),-1,-1,1,"FiredNWiresDownTGCTwo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CalcuVariables */
static void G__setup_memvarCalcuVariables(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ProcessCORARS_DictLN_CalcuVariables));
   { CalcuVariables *p; p=(CalcuVariables*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_ConfigureClass),-1,-1,4,"conf=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PedestalFile)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TFile),-1,-1,1,"PedestalFile=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->inPath)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"inPath=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->inFileName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"inFileName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->inFile)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TFile),-1,-1,1,"inFile=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->inTree)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TTree),-1,-1,1,"inTree=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->outPath)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"outPath=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->outFileName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"outFileName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->outFile)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TFile),-1,-1,1,"outFile=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->outTree)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TTree),-1,-1,1,"outTree=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TSCTXY)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR),G__defined_typename("vector<std::pair<float,float> >"),-1,1,"TSCTXY=",0,"x and y of the bottom left of SCT");
   G__memvar_setup((void*)((long)(&p->KM2ACharge)-(long)(p)),102,0,0,-1,-1,-1,1,"KM2ACharge[16]=",0,"charge measured by new electronics pad");
   G__memvar_setup((void*)((long)(&p->KM2ATime)-(long)(p)),102,0,0,-1,-1,-1,1,"KM2ATime[16]=",0,"time measured by new electronics pad");
   G__memvar_setup((void*)((long)(&p->NEDNoiseHit)-(long)(p)),105,0,0,-1,-1,-1,1,"NEDNoiseHit[8]=",0,"Number of noise hits before trigger");
   G__memvar_setup((void*)((long)(&p->EventQuality)-(long)(p)),105,0,0,-1,-1,-1,1,"EventQuality=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->CalibMean)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH2F),-1,-1,1,"CalibMean[12]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->event_id)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"event_id=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Up_TGC)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_Point),-1,-1,1,"Up_TGC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Down_TGC)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_Point),-1,-1,1,"Down_TGC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Up_Scin_ScinED)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_Scin),-1,-1,1,"Up_Scin_ScinED=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Down_Scin_ScinED)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_Scin),-1,-1,1,"Down_Scin_ScinED=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Up_Scin)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_Scin),-1,-1,1,"Up_Scin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Down_Scin)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_Scin),-1,-1,1,"Down_Scin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ElecDet)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_ED),-1,-1,1,"ElecDet[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Muon_TOF)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TOF),-1,-1,1,"Muon_TOF=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrackLength)-(long)(p)),102,0,0,-1,-1,-1,1,"TrackLength=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NEDs)-(long)(p)),105,0,0,-1,-1,-1,1,"NEDs=",0,"totoal number of measured EDs");
   G__memvar_setup((void*)((long)(&p->EDName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"EDName[8]=",0,"ED name");
   G__memvar_setup((void*)((long)(&p->DeltaTimeUDScins)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"DeltaTimeUDScins[4]=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* AnalyseED */
static void G__setup_memvarAnalyseED(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ProcessCORARS_DictLN_AnalyseED));
   { AnalyseED *p; p=(AnalyseED*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_ConfigureClass),-1,-1,4,"conf=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->CORARSCollectionTime)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"CORARSCollectionTime=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->inPath)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"inPath=",0,"path of thein data files");
   G__memvar_setup((void*)((long)(&p->inFileName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"inFileName=",0,"in file name ");
   G__memvar_setup((void*)((long)(&p->inFile)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TFile),-1,-1,1,"inFile=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->inTree)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TTree),-1,-1,1,"inTree=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDPositionFile)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TFile),-1,-1,1,"EDPositionFile=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->outPath)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"outPath=",0,"out path");
   G__memvar_setup((void*)((long)(&p->outFileName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"outFileName=",0,"out file name");
   G__memvar_setup((void*)((long)(&p->outFile)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TFile),-1,-1,1,"outFile=",0,"out root file containing measured time and charge of Scintillor s and ED");
   G__memvar_setup((void*)((long)(&p->NEDs)-(long)(p)),105,0,0,-1,-1,-1,1,"NEDs=",0,"totoal number of measured EDs");
   G__memvar_setup((void*)((long)(&p->EDName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"EDName[8]=",0,"ED name");
   G__memvar_setup((void*)((long)(&p->EDSCT1Name)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"EDSCT1Name[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT2Name)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"EDSCT2Name[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT3Name)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"EDSCT3Name[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT4Name)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"EDSCT4Name[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->SCT1BLRotatedPoint)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"SCT1BLRotatedPoint=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->SCT2BLRotatedPoint)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"SCT2BLRotatedPoint=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->SCT3BLRotatedPoint)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"SCT3BLRotatedPoint=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->SCT4BLRotatedPoint)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"SCT4BLRotatedPoint=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->XAxis)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TAxis),-1,-1,1,"XAxis[8]=",0,"the bin edge is the SCT boundary");
   G__memvar_setup((void*)((long)(&p->YAxis)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TAxis),-1,-1,1,"YAxis[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NEDNoiseHit)-(long)(p)),105,0,0,-1,-1,-1,1,"NEDNoiseHit[8]=",0,"Number of noise hits before trigger");
   G__memvar_setup((void*)((long)(&p->ElecDet)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_ED),-1,-1,1,"ElecDet[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Muon_TOF)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TOF),-1,-1,1,"Muon_TOF=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EventQuality)-(long)(p)),105,0,0,-1,-1,-1,1,"EventQuality=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDPlaneNHits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH2F),-1,-1,1,"EDPlaneNHits[8]=",0,"Count all the hits crossing ED Plane within whole ED plane");
   G__memvar_setup((void*)((long)(&p->EDPlaneNFiredHits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH2F),-1,-1,1,"EDPlaneNFiredHits[8]=",0,"Count all the hits above ED threashold (Firred Hits) crossing ED Plane within whole ED plane");
   G__memvar_setup((void*)((long)(&p->EDSCT1NHits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH2F),-1,-1,1,"EDSCT1NHits[8]=",0,"Count all the hits crossing ED Plane within EDSCT1");
   G__memvar_setup((void*)((long)(&p->EDSCT2NHits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH2F),-1,-1,1,"EDSCT2NHits[8]=",0,"Count all the hits crossing ED Plane within EDSCT2");
   G__memvar_setup((void*)((long)(&p->EDSCT3NHits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH2F),-1,-1,1,"EDSCT3NHits[8]=",0,"Count all the hits crossing ED Plane within EDSCT3");
   G__memvar_setup((void*)((long)(&p->EDSCT4NHits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH2F),-1,-1,1,"EDSCT4NHits[8]=",0,"Count all the hits crossing ED Plane within EDSCT4");
   G__memvar_setup((void*)((long)(&p->EDSCT1NFiredHits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH2F),-1,-1,1,"EDSCT1NFiredHits[8]=",0,"Count all the hits above ED threashold (Firred Hits) crossing ED Plane within EDSCT1");
   G__memvar_setup((void*)((long)(&p->EDSCT2NFiredHits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH2F),-1,-1,1,"EDSCT2NFiredHits[8]=",0,"Count all the hits above ED threashold (Firred Hits) crossing ED Plane within EDSCT2");
   G__memvar_setup((void*)((long)(&p->EDSCT3NFiredHits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH2F),-1,-1,1,"EDSCT3NFiredHits[8]=",0,"Count all the hits above ED threashold (Firred Hits) crossing ED Plane within EDSCT3");
   G__memvar_setup((void*)((long)(&p->EDSCT4NFiredHits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH2F),-1,-1,1,"EDSCT4NFiredHits[8]=",0,"Count all the hits above ED threashold (Firred Hits) crossing ED Plane within EDSCT4");
   G__memvar_setup((void*)((long)(&p->EDPlaneDetEffi2DScan)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH2F),-1,-1,1,"EDPlaneDetEffi2DScan[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT1DetEffi2DScan)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH2F),-1,-1,1,"EDSCT1DetEffi2DScan[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT2DetEffi2DScan)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH2F),-1,-1,1,"EDSCT2DetEffi2DScan[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT3DetEffi2DScan)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH2F),-1,-1,1,"EDSCT3DetEffi2DScan[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT4DetEffi2DScan)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH2F),-1,-1,1,"EDSCT4DetEffi2DScan[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT1DetEffi1DScan)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"EDSCT1DetEffi1DScan[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT2DetEffi1DScan)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"EDSCT2DetEffi1DScan[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT3DetEffi1DScan)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"EDSCT3DetEffi1DScan[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT4DetEffi1DScan)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"EDSCT4DetEffi1DScan[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DeltaTOF)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"DeltaTOF=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT1MeasureTime)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"EDSCT1MeasureTime[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT2MeasureTime)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"EDSCT2MeasureTime[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT3MeasureTime)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"EDSCT3MeasureTime[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT4MeasureTime)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"EDSCT4MeasureTime[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT1ReconTime)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"EDSCT1ReconTime[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT2ReconTime)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"EDSCT2ReconTime[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT3ReconTime)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"EDSCT3ReconTime[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT4ReconTime)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"EDSCT4ReconTime[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT1DeltaTime)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"EDSCT1DeltaTime[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT2DeltaTime)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"EDSCT2DeltaTime[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT3DeltaTime)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"EDSCT3DeltaTime[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT4DeltaTime)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"EDSCT4DeltaTime[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT1CorrectedDeltaTime)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"EDSCT1CorrectedDeltaTime[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT2CorrectedDeltaTime)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"EDSCT2CorrectedDeltaTime[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT3CorrectedDeltaTime)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"EDSCT3CorrectedDeltaTime[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT4CorrectedDeltaTime)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"EDSCT4CorrectedDeltaTime[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT1DeltaTimeBin)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"EDSCT1DeltaTimeBin[8][4][19]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT2DeltaTimeBin)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"EDSCT2DeltaTimeBin[8][4][19]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT3DeltaTimeBin)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"EDSCT3DeltaTimeBin[8][4][19]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT4DeltaTimeBin)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"EDSCT4DeltaTimeBin[8][4][19]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT1CorrectedDeltaTimeBin)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"EDSCT1CorrectedDeltaTimeBin[8][4][19]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT2CorrectedDeltaTimeBin)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"EDSCT2CorrectedDeltaTimeBin[8][4][19]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT3CorrectedDeltaTimeBin)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"EDSCT3CorrectedDeltaTimeBin[8][4][19]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT4CorrectedDeltaTimeBin)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"EDSCT4CorrectedDeltaTimeBin[8][4][19]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT1TimeRes2DScan)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH2F),-1,-1,1,"EDSCT1TimeRes2DScan[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT2TimeRes2DScan)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH2F),-1,-1,1,"EDSCT2TimeRes2DScan[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT3TimeRes2DScan)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH2F),-1,-1,1,"EDSCT3TimeRes2DScan[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT4TimeRes2DScan)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH2F),-1,-1,1,"EDSCT4TimeRes2DScan[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT1TimeRes1DScan)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"EDSCT1TimeRes1DScan[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT2TimeRes1DScan)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"EDSCT2TimeRes1DScan[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT3TimeRes1DScan)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"EDSCT3TimeRes1DScan[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT4TimeRes1DScan)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"EDSCT4TimeRes1DScan[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT1TimeOffset2DScan)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH2F),-1,-1,1,"EDSCT1TimeOffset2DScan[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT2TimeOffset2DScan)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH2F),-1,-1,1,"EDSCT2TimeOffset2DScan[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT3TimeOffset2DScan)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH2F),-1,-1,1,"EDSCT3TimeOffset2DScan[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT4TimeOffset2DScan)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH2F),-1,-1,1,"EDSCT4TimeOffset2DScan[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT1TimeOffset1DScan)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"EDSCT1TimeOffset1DScan[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT2TimeOffset1DScan)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"EDSCT2TimeOffset1DScan[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT3TimeOffset1DScan)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"EDSCT3TimeOffset1DScan[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT4TimeOffset1DScan)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"EDSCT4TimeOffset1DScan[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT1SignalCharge)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"EDSCT1SignalCharge[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT2SignalCharge)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"EDSCT2SignalCharge[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT3SignalCharge)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"EDSCT3SignalCharge[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT4SignalCharge)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"EDSCT4SignalCharge[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT1SignalChargeBin)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"EDSCT1SignalChargeBin[8][4][19]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT2SignalChargeBin)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"EDSCT2SignalChargeBin[8][4][19]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT3SignalChargeBin)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"EDSCT3SignalChargeBin[8][4][19]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT4SignalChargeBin)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"EDSCT4SignalChargeBin[8][4][19]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT1EnergyRes2DScan)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH2F),-1,-1,1,"EDSCT1EnergyRes2DScan[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT2EnergyRes2DScan)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH2F),-1,-1,1,"EDSCT2EnergyRes2DScan[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT3EnergyRes2DScan)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH2F),-1,-1,1,"EDSCT3EnergyRes2DScan[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT4EnergyRes2DScan)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH2F),-1,-1,1,"EDSCT4EnergyRes2DScan[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT1EnergyRes1DScan)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"EDSCT1EnergyRes1DScan[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT2EnergyRes1DScan)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"EDSCT2EnergyRes1DScan[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT3EnergyRes1DScan)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"EDSCT3EnergyRes1DScan[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT4EnergyRes1DScan)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"EDSCT4EnergyRes1DScan[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT1ReEnergyRes2DScan)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH2F),-1,-1,1,"EDSCT1ReEnergyRes2DScan[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT2ReEnergyRes2DScan)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH2F),-1,-1,1,"EDSCT2ReEnergyRes2DScan[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT3ReEnergyRes2DScan)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH2F),-1,-1,1,"EDSCT3ReEnergyRes2DScan[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT4ReEnergyRes2DScan)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH2F),-1,-1,1,"EDSCT4ReEnergyRes2DScan[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT1ReEnergyRes1DScan)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"EDSCT1ReEnergyRes1DScan[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT2ReEnergyRes1DScan)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"EDSCT2ReEnergyRes1DScan[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT3ReEnergyRes1DScan)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"EDSCT3ReEnergyRes1DScan[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT4ReEnergyRes1DScan)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"EDSCT4ReEnergyRes1DScan[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT1SingleParticlePeak2DScan)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH2F),-1,-1,1,"EDSCT1SingleParticlePeak2DScan[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT2SingleParticlePeak2DScan)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH2F),-1,-1,1,"EDSCT2SingleParticlePeak2DScan[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT3SingleParticlePeak2DScan)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH2F),-1,-1,1,"EDSCT3SingleParticlePeak2DScan[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT4SingleParticlePeak2DScan)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH2F),-1,-1,1,"EDSCT4SingleParticlePeak2DScan[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT1SingleParticlePeak1DScan)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"EDSCT1SingleParticlePeak1DScan[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT2SingleParticlePeak1DScan)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"EDSCT2SingleParticlePeak1DScan[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT3SingleParticlePeak1DScan)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"EDSCT3SingleParticlePeak1DScan[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT4SingleParticlePeak1DScan)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"EDSCT4SingleParticlePeak1DScan[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NPreHitsOnSCT)-(long)(p)),105,0,0,-1,-1,-1,1,"NPreHitsOnSCT[8]=",0,"N hits on SCT collected before the trigger");
   G__memvar_setup((void*)((long)(&p->SingleRate)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"SingleRate=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCTDetEffi)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"EDSCTDetEffi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCTDetEffiErrors)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"EDSCTDetEffiErrors=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDPlaneDetEffi)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTlEfloatgR),G__defined_typename("TMatrixF"),-1,1,"EDPlaneDetEffi[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDPlaneDetEffiErrors)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTlEfloatgR),G__defined_typename("TMatrixF"),-1,1,"EDPlaneDetEffiErrors[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT1DetEffi)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTlEfloatgR),G__defined_typename("TMatrixF"),-1,1,"EDSCT1DetEffi[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT2DetEffi)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTlEfloatgR),G__defined_typename("TMatrixF"),-1,1,"EDSCT2DetEffi[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT3DetEffi)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTlEfloatgR),G__defined_typename("TMatrixF"),-1,1,"EDSCT3DetEffi[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT4DetEffi)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTlEfloatgR),G__defined_typename("TMatrixF"),-1,1,"EDSCT4DetEffi[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT1DetEffiErrors)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTlEfloatgR),G__defined_typename("TMatrixF"),-1,1,"EDSCT1DetEffiErrors[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT2DetEffiErrors)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTlEfloatgR),G__defined_typename("TMatrixF"),-1,1,"EDSCT2DetEffiErrors[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT3DetEffiErrors)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTlEfloatgR),G__defined_typename("TMatrixF"),-1,1,"EDSCT3DetEffiErrors[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT4DetEffiErrors)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTlEfloatgR),G__defined_typename("TMatrixF"),-1,1,"EDSCT4DetEffiErrors[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->SysTimeRes)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"SysTimeRes=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->SysTimeResError)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"SysTimeResError=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ScinTimeRes)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"ScinTimeRes=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ScinTimeResError)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"ScinTimeResError=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCTTimeRes)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"EDSCTTimeRes=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCTTimeResErrors)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"EDSCTTimeResErrors=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCTTimeOffset)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"EDSCTTimeOffset=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCTTimeOffsetErrors)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"EDSCTTimeOffsetErrors=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT1TimeOffset)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTlEfloatgR),G__defined_typename("TMatrixF"),-1,1,"EDSCT1TimeOffset[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT2TimeOffset)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTlEfloatgR),G__defined_typename("TMatrixF"),-1,1,"EDSCT2TimeOffset[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT3TimeOffset)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTlEfloatgR),G__defined_typename("TMatrixF"),-1,1,"EDSCT3TimeOffset[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT4TimeOffset)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTlEfloatgR),G__defined_typename("TMatrixF"),-1,1,"EDSCT4TimeOffset[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT1TimeOffsetErrors)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTlEfloatgR),G__defined_typename("TMatrixF"),-1,1,"EDSCT1TimeOffsetErrors[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT2TimeOffsetErrors)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTlEfloatgR),G__defined_typename("TMatrixF"),-1,1,"EDSCT2TimeOffsetErrors[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT3TimeOffsetErrors)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTlEfloatgR),G__defined_typename("TMatrixF"),-1,1,"EDSCT3TimeOffsetErrors[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT4TimeOffsetErrors)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTlEfloatgR),G__defined_typename("TMatrixF"),-1,1,"EDSCT4TimeOffsetErrors[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT1TimeRes)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTlEfloatgR),G__defined_typename("TMatrixF"),-1,1,"EDSCT1TimeRes[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT2TimeRes)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTlEfloatgR),G__defined_typename("TMatrixF"),-1,1,"EDSCT2TimeRes[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT3TimeRes)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTlEfloatgR),G__defined_typename("TMatrixF"),-1,1,"EDSCT3TimeRes[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT4TimeRes)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTlEfloatgR),G__defined_typename("TMatrixF"),-1,1,"EDSCT4TimeRes[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT1TimeResErrors)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTlEfloatgR),G__defined_typename("TMatrixF"),-1,1,"EDSCT1TimeResErrors[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT2TimeResErrors)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTlEfloatgR),G__defined_typename("TMatrixF"),-1,1,"EDSCT2TimeResErrors[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT3TimeResErrors)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTlEfloatgR),G__defined_typename("TMatrixF"),-1,1,"EDSCT3TimeResErrors[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT4TimeResErrors)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTlEfloatgR),G__defined_typename("TMatrixF"),-1,1,"EDSCT4TimeResErrors[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCTEnergyRes)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"EDSCTEnergyRes=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCTEnergyResErrors)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"EDSCTEnergyResErrors=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT1EnergyRes)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTlEfloatgR),G__defined_typename("TMatrixF"),-1,1,"EDSCT1EnergyRes[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT2EnergyRes)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTlEfloatgR),G__defined_typename("TMatrixF"),-1,1,"EDSCT2EnergyRes[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT3EnergyRes)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTlEfloatgR),G__defined_typename("TMatrixF"),-1,1,"EDSCT3EnergyRes[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT4EnergyRes)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTlEfloatgR),G__defined_typename("TMatrixF"),-1,1,"EDSCT4EnergyRes[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT1EnergyResErrors)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTlEfloatgR),G__defined_typename("TMatrixF"),-1,1,"EDSCT1EnergyResErrors[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT2EnergyResErrors)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTlEfloatgR),G__defined_typename("TMatrixF"),-1,1,"EDSCT2EnergyResErrors[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT3EnergyResErrors)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTlEfloatgR),G__defined_typename("TMatrixF"),-1,1,"EDSCT3EnergyResErrors[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT4EnergyResErrors)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTlEfloatgR),G__defined_typename("TMatrixF"),-1,1,"EDSCT4EnergyResErrors[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCTReEnergyRes)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"EDSCTReEnergyRes=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCTReEnergyResErrors)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"EDSCTReEnergyResErrors=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT1ReEnergyRes)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTlEfloatgR),G__defined_typename("TMatrixF"),-1,1,"EDSCT1ReEnergyRes[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT2ReEnergyRes)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTlEfloatgR),G__defined_typename("TMatrixF"),-1,1,"EDSCT2ReEnergyRes[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT3ReEnergyRes)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTlEfloatgR),G__defined_typename("TMatrixF"),-1,1,"EDSCT3ReEnergyRes[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT4ReEnergyRes)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTlEfloatgR),G__defined_typename("TMatrixF"),-1,1,"EDSCT4ReEnergyRes[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT1ReEnergyResErrors)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTlEfloatgR),G__defined_typename("TMatrixF"),-1,1,"EDSCT1ReEnergyResErrors[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT2ReEnergyResErrors)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTlEfloatgR),G__defined_typename("TMatrixF"),-1,1,"EDSCT2ReEnergyResErrors[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT3ReEnergyResErrors)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTlEfloatgR),G__defined_typename("TMatrixF"),-1,1,"EDSCT3ReEnergyResErrors[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT4ReEnergyResErrors)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTlEfloatgR),G__defined_typename("TMatrixF"),-1,1,"EDSCT4ReEnergyResErrors[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCTSingleParticlePeak)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"EDSCTSingleParticlePeak=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCTSingleParticlePeakErrors)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"EDSCTSingleParticlePeakErrors=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT1SingleParticlePeak)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTlEfloatgR),G__defined_typename("TMatrixF"),-1,1,"EDSCT1SingleParticlePeak[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT2SingleParticlePeak)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTlEfloatgR),G__defined_typename("TMatrixF"),-1,1,"EDSCT2SingleParticlePeak[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT3SingleParticlePeak)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTlEfloatgR),G__defined_typename("TMatrixF"),-1,1,"EDSCT3SingleParticlePeak[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT4SingleParticlePeak)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTlEfloatgR),G__defined_typename("TMatrixF"),-1,1,"EDSCT4SingleParticlePeak[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT1SingleParticlePeakErrors)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTlEfloatgR),G__defined_typename("TMatrixF"),-1,1,"EDSCT1SingleParticlePeakErrors[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT2SingleParticlePeakErrors)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTlEfloatgR),G__defined_typename("TMatrixF"),-1,1,"EDSCT2SingleParticlePeakErrors[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT3SingleParticlePeakErrors)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTlEfloatgR),G__defined_typename("TMatrixF"),-1,1,"EDSCT3SingleParticlePeakErrors[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT4SingleParticlePeakErrors)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTlEfloatgR),G__defined_typename("TMatrixF"),-1,1,"EDSCT4SingleParticlePeakErrors[8]=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ChargeCorrectTime */
static void G__setup_memvarChargeCorrectTime(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ProcessCORARS_DictLN_ChargeCorrectTime));
   { ChargeCorrectTime *p; p=(ChargeCorrectTime*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_ConfigureClass),-1,-1,4,"conf=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->inPath)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"inPath=",0,"path of thein data files");
   G__memvar_setup((void*)((long)(&p->inFileName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"inFileName=",0,"in file name ");
   G__memvar_setup((void*)((long)(&p->inFile)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TFile),-1,-1,1,"inFile=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->inTree)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TTree),-1,-1,1,"inTree=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->outPath)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"outPath=",0,"out path");
   G__memvar_setup((void*)((long)(&p->outFileName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"outFileName=",0,"out file name");
   G__memvar_setup((void*)((long)(&p->outFile)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TFile),-1,-1,1,"outFile=",0,"out root file containing measured time and charge of Scintillor s and ED");
   G__memvar_setup((void*)((long)(&p->NEDs)-(long)(p)),105,0,0,-1,-1,-1,1,"NEDs=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"EDName[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ElecDet)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_ED),-1,-1,1,"ElecDet[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ChargeDeltaTime)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"ChargeDeltaTime[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DeltaTime)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"DeltaTime[8][55]=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* GenerateTimeCalib */
static void G__setup_memvarGenerateTimeCalib(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ProcessCORARS_DictLN_GenerateTimeCalib));
   { GenerateTimeCalib *p; p=(GenerateTimeCalib*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->chain)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TChain),-1,-1,1,"chain=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->inPath)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"inPath=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->outPath)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"outPath=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->inFileName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"inFileName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->outFile)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TFile),-1,-1,1,"outFile=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->outTree)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TTree),-1,-1,1,"outTree=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->SoutTree)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TTree),-1,-1,1,"SoutTree=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->outFileName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"outFileName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TSCTXY)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR),G__defined_typename("vector<std::pair<float,float> >"),-1,1,"TSCTXY=",0,"x and y of the bottom left of SCT");
   G__memvar_setup((void*)((long)(&p->Up_Scin_Calib)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_Scin),-1,-1,1,"Up_Scin_Calib=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Down_Scin_Calib)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_Scin),-1,-1,1,"Down_Scin_Calib=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Up_Scin)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_Scin),-1,-1,1,"Up_Scin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Down_Scin)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_Scin),-1,-1,1,"Down_Scin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EventQuality)-(long)(p)),105,0,0,-1,-1,-1,1,"EventQuality=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SimulateTimeCalib */
static void G__setup_memvarSimulateTimeCalib(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ProcessCORARS_DictLN_SimulateTimeCalib));
   { SimulateTimeCalib *p; p=(SimulateTimeCalib*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,4,"inPath=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,4,"outPath=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TFile),-1,-1,4,"inFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TTree),-1,-1,4,"inTree=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TTree),-1,-1,4,"SinTree=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,4,"inFileName=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TFile),-1,-1,4,"outFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TTree),-1,-1,4,"outTree=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,4,"outFileName=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,4,"DownCalibToDistance[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,4,"DownCalinBin[6][62]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,4,"CalibToDistance[12]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,4,"CalinBin[12][62]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTlEfloatgR),G__defined_typename("TMatrixF"),-1,4,"DownFitParas=",0,"initial fitting parameters of downcalib vs DistanceToPMT");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTlEfloatgR),G__defined_typename("TMatrixF"),-1,4,"FitParas=",0,"fitting parameters of calib vs DistanceToPMT");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_Scin),-1,-1,4,"Up_Scin=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_Scin),-1,-1,4,"Down_Scin=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ReGenerateTimeCalib */
static void G__setup_memvarReGenerateTimeCalib(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ProcessCORARS_DictLN_ReGenerateTimeCalib));
   { ReGenerateTimeCalib *p; p=(ReGenerateTimeCalib*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->inPath)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"inPath=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->inFileName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"inFileName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->inFile)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TFile),-1,-1,1,"inFile=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->inTree)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TTree),-1,-1,1,"inTree=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->outPath)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"outPath=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->outFileName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"outFileName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->outFile)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TFile),-1,-1,1,"outFile=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->outTree)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TTree),-1,-1,1,"outTree=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TSCTXY)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR),G__defined_typename("vector<std::pair<float,float> >"),-1,1,"TSCTXY=",0,"x and y of the bottom left of SCT");
   G__memvar_setup((void*)((long)(&p->FitParas)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TMatrixTlEfloatgR),G__defined_typename("TMatrixF"),-1,1,"FitParas=",0,"fitting parameters of calib vs DistanceToPMT");
   G__memvar_setup((void*)((long)(&p->CalibBin)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"CalibBin[12][10][48]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->CalibMean)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH2F),-1,-1,1,"CalibMean[12]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Up_Scin)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_Scin),-1,-1,1,"Up_Scin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Down_Scin)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_Scin),-1,-1,1,"Down_Scin=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ComDiscriminator */
static void G__setup_memvarComDiscriminator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ProcessCORARS_DictLN_ComDiscriminator));
   { ComDiscriminator *p; p=(ComDiscriminator*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TFile),-1,-1,4,"InPut_File=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TString),-1,-1,4,"InPut_File_Name=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TFile),-1,-1,4,"OutPut_File=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TTree),-1,-1,4,"OutPut_Tree=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TTree),-1,-1,4,"InPut_Tree=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TString),-1,-1,4,"OutPut_File_Name=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"Up_TGC_Strip_One[32]=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"Up_TGC_Wire_One[32]=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"Down_TGC_Strip_One[32]=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"Down_TGC_Wire_One[32]=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"ScinED_Time_Signal[16]=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"ED_Charge_Signal[16]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"Up_TGC_Strip_Number=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"Up_TGC_Wire_Number=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"Down_TGC_Strip_Number=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"Down_TGC_Wire_Number=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"params[189]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"calib_mean[8][10][48]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"calib_charge[8][55]=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"event_id=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_Point_CD),-1,-1,4,"Up_TGC=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_Point_CD),-1,-1,4,"Down_TGC=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_Scin_CD),-1,-1,4,"Up_Scin=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_Scin_CD),-1,-1,4,"Down_Scin=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_ED_CD),-1,-1,4,"ElecDet5=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TOF_CD),-1,-1,4,"Muon_TOF=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Cluster */
static void G__setup_memvarCluster(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ProcessCORARS_DictLN_Cluster));
   { Cluster *p; p=(Cluster*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->Number)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"Number=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Leading)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),G__defined_typename("vector<unsigned int>"),-1,1,"Leading=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Trailing)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),G__defined_typename("vector<unsigned int>"),-1,1,"Trailing=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->SignalWidth)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"SignalWidth=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MaxSignal)-(long)(p)),105,0,0,-1,-1,-1,1,"MaxSignal=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CalcuTGCScin */
static void G__setup_memvarCalcuTGCScin(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ProcessCORARS_DictLN_CalcuTGCScin));
   { CalcuTGCScin *p; p=(CalcuTGCScin*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_ConfigureClass),-1,-1,4,"conf=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->inPath)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"inPath=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->inFileName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"inFileName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->inFile)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TFile),-1,-1,1,"inFile=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->inTree)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TTree),-1,-1,1,"inTree=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->outPath)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"outPath=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->outFileName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"outFileName=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->outFile)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TFile),-1,-1,1,"outFile=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->outTree)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TTree),-1,-1,1,"outTree=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Up_TGC_Strip_Leading_One)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Up_TGC_Strip_Leading_One[32]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Up_TGC_Strip_Trailing_One)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Up_TGC_Strip_Trailing_One[32]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Up_TGC_Wire_Leading_One)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Up_TGC_Wire_Leading_One[32]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Up_TGC_Wire_Trailing_One)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Up_TGC_Wire_Trailing_One[32]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Down_TGC_Strip_Leading_One)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Down_TGC_Strip_Leading_One[32]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Down_TGC_Strip_Trailing_One)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Down_TGC_Strip_Trailing_One[32]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Down_TGC_Wire_Leading_One)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Down_TGC_Wire_Leading_One[32]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Down_TGC_Wire_Trailing_One)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Down_TGC_Wire_Trailing_One[32]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Up_TGC_Strip_Leading_Two)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Up_TGC_Strip_Leading_Two[32]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Up_TGC_Strip_Trailing_Two)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Up_TGC_Strip_Trailing_Two[32]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Up_TGC_Wire_Leading_Two)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Up_TGC_Wire_Leading_Two[32]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Up_TGC_Wire_Trailing_Two)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Up_TGC_Wire_Trailing_Two[32]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Down_TGC_Strip_Leading_Two)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Down_TGC_Strip_Leading_Two[32]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Down_TGC_Strip_Trailing_Two)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Down_TGC_Strip_Trailing_Two[32]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Down_TGC_Wire_Leading_Two)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Down_TGC_Wire_Leading_Two[32]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Down_TGC_Wire_Trailing_Two)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"Down_TGC_Wire_Trailing_Two[32]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TSCTXY)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR),G__defined_typename("vector<std::pair<float,float> >"),-1,1,"TSCTXY=",0,"x and y of the bottom left of SCT");
   G__memvar_setup((void*)((long)(&p->UpScinV1290NChannel)-(long)(p)),105,0,0,-1,-1,-1,1,"UpScinV1290NChannel=",0,"V1290N Channel of Up SCT");
   G__memvar_setup((void*)((long)(&p->DownScinV1290NChannel)-(long)(p)),105,0,0,-1,-1,-1,1,"DownScinV1290NChannel=",0,"V1290N Channel of Down SCT");
   G__memvar_setup((void*)((long)(&p->KM2ACharge)-(long)(p)),102,0,0,-1,-1,-1,1,"KM2ACharge[16]=",0,"charge measured by new electronics pad");
   G__memvar_setup((void*)((long)(&p->KM2ATime)-(long)(p)),102,0,0,-1,-1,-1,1,"KM2ATime[16]=",0,"time measured by new electronics pad");
   G__memvar_setup((void*)((long)(&p->NEDNoiseHit)-(long)(p)),105,0,0,-1,-1,-1,1,"NEDNoiseHit[8]=",0,"Number of noise hits before trigger");
   G__memvar_setup((void*)((long)(&p->Count_Up_Strip_One)-(long)(p)),105,0,0,-1,-1,-1,1,"Count_Up_Strip_One=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Count_Up_Wire_One)-(long)(p)),105,0,0,-1,-1,-1,1,"Count_Up_Wire_One=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Count_Down_Strip_One)-(long)(p)),105,0,0,-1,-1,-1,1,"Count_Down_Strip_One=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Count_Down_Wire_One)-(long)(p)),105,0,0,-1,-1,-1,1,"Count_Down_Wire_One=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Count_Up_Strip_Two)-(long)(p)),105,0,0,-1,-1,-1,1,"Count_Up_Strip_Two=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Count_Up_Wire_Two)-(long)(p)),105,0,0,-1,-1,-1,1,"Count_Up_Wire_Two=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Count_Down_Strip_Two)-(long)(p)),105,0,0,-1,-1,-1,1,"Count_Down_Strip_Two=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Count_Down_Wire_Two)-(long)(p)),105,0,0,-1,-1,-1,1,"Count_Down_Wire_Two=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->params)-(long)(p)),102,0,0,-1,-1,-1,1,"params[189]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->event_id)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"event_id=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->event_time)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"event_time=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Up_TGC_One)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TGC),-1,-1,1,"Up_TGC_One=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Down_TGC_One)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TGC),-1,-1,1,"Down_TGC_One=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Up_TGC_Two)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TGC),-1,-1,1,"Up_TGC_Two=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Down_TGC_Two)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TGC),-1,-1,1,"Down_TGC_Two=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Up_TGC)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_Point),-1,-1,1,"Up_TGC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Down_TGC)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_Point),-1,-1,1,"Down_TGC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Up_Scin)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_Scin),-1,-1,1,"Up_Scin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Down_Scin)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_Scin),-1,-1,1,"Down_Scin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Up_TGC_Strip_One_Cluster)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEClustercOallocatorlEClustergRsPgR),G__defined_typename("vector<Cluster>"),-1,1,"Up_TGC_Strip_One_Cluster=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Up_TGC_Wire_One_Cluster)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEClustercOallocatorlEClustergRsPgR),G__defined_typename("vector<Cluster>"),-1,1,"Up_TGC_Wire_One_Cluster=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Down_TGC_Strip_One_Cluster)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEClustercOallocatorlEClustergRsPgR),G__defined_typename("vector<Cluster>"),-1,1,"Down_TGC_Strip_One_Cluster=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Down_TGC_Wire_One_Cluster)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEClustercOallocatorlEClustergRsPgR),G__defined_typename("vector<Cluster>"),-1,1,"Down_TGC_Wire_One_Cluster=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Up_TGC_Strip_Two_Cluster)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEClustercOallocatorlEClustergRsPgR),G__defined_typename("vector<Cluster>"),-1,1,"Up_TGC_Strip_Two_Cluster=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Up_TGC_Wire_Two_Cluster)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEClustercOallocatorlEClustergRsPgR),G__defined_typename("vector<Cluster>"),-1,1,"Up_TGC_Wire_Two_Cluster=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Down_TGC_Strip_Two_Cluster)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEClustercOallocatorlEClustergRsPgR),G__defined_typename("vector<Cluster>"),-1,1,"Down_TGC_Strip_Two_Cluster=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Down_TGC_Wire_Two_Cluster)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEClustercOallocatorlEClustergRsPgR),G__defined_typename("vector<Cluster>"),-1,1,"Down_TGC_Wire_Two_Cluster=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->up_one_strip_cluster_size)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"up_one_strip_cluster_size=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->up_one_wire_cluster_size)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"up_one_wire_cluster_size=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->up_two_strip_cluster_size)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"up_two_strip_cluster_size=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->up_two_wire_cluster_size)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"up_two_wire_cluster_size=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->down_one_strip_cluster_size)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"down_one_strip_cluster_size=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->down_one_wire_cluster_size)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"down_one_wire_cluster_size=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->down_two_strip_cluster_size)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"down_two_strip_cluster_size=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->down_two_wire_cluster_size)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"down_two_wire_cluster_size=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->up_one_strip_cluster_validnumber)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"up_one_strip_cluster_validnumber=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->up_one_wire_cluster_validnumber)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"up_one_wire_cluster_validnumber=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->up_two_strip_cluster_validnumber)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"up_two_strip_cluster_validnumber=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->up_two_wire_cluster_validnumber)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"up_two_wire_cluster_validnumber=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->down_one_strip_cluster_validnumber)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"down_one_strip_cluster_validnumber=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->down_one_wire_cluster_validnumber)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"down_one_wire_cluster_validnumber=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->down_two_strip_cluster_validnumber)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"down_two_strip_cluster_validnumber=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->down_two_wire_cluster_validnumber)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"down_two_wire_cluster_validnumber=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->up_one_strip_cluster_maxsignal)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"up_one_strip_cluster_maxsignal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->up_one_wire_cluster_maxsignal)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"up_one_wire_cluster_maxsignal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->up_two_strip_cluster_maxsignal)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"up_two_strip_cluster_maxsignal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->up_two_wire_cluster_maxsignal)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"up_two_wire_cluster_maxsignal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->down_one_strip_cluster_maxsignal)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"down_one_strip_cluster_maxsignal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->down_one_wire_cluster_maxsignal)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"down_one_wire_cluster_maxsignal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->down_two_strip_cluster_maxsignal)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"down_two_strip_cluster_maxsignal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->down_two_wire_cluster_maxsignal)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"down_two_wire_cluster_maxsignal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Delta_Up_Strip_ValidNumber)-(long)(p)),105,0,0,-1,-1,-1,1,"Delta_Up_Strip_ValidNumber=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Delta_Up_Wire_ValidNumber)-(long)(p)),105,0,0,-1,-1,-1,1,"Delta_Up_Wire_ValidNumber=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Delta_Down_Strip_ValidNumber)-(long)(p)),105,0,0,-1,-1,-1,1,"Delta_Down_Strip_ValidNumber=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Delta_Down_Wire_ValidNumber)-(long)(p)),105,0,0,-1,-1,-1,1,"Delta_Down_Wire_ValidNumber=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EventQuality)-(long)(p)),105,0,0,-1,-1,-1,1,"EventQuality=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nosignal)-(long)(p)),105,0,0,-1,-1,-1,1,"nosignal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EventQualityDis)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"EventQualityDis=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->UpTGCOneStripSignalWidth)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"UpTGCOneStripSignalWidth=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->UpTGCOneWireSignalWidth)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"UpTGCOneWireSignalWidth=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->UpTGCTwoStripSignalWidth)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"UpTGCTwoStripSignalWidth=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->UpTGCTwoWireSignalWidth)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"UpTGCTwoWireSignalWidth=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DownTGCOneStripSignalWidth)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"DownTGCOneStripSignalWidth=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DownTGCOneWireSignalWidth)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"DownTGCOneWireSignalWidth=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DownTGCTwoStripSignalWidth)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"DownTGCTwoStripSignalWidth=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DownTGCTwoWireSignalWidth)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"DownTGCTwoWireSignalWidth=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->UpScinHitsGraph)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TGraph),-1,-1,1,"UpScinHitsGraph=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DownScinHitsGraph)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TGraph),-1,-1,1,"DownScinHitsGraph=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->UpScinX)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"UpScinX=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DownScinX)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"DownScinX=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<Cluster,allocator<Cluster> > */
static void G__setup_memvarvectorlEClustercOallocatorlEClustergRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEClustercOallocatorlEClustergRsPgR));
   { vector<Cluster,allocator<Cluster> > *p; p=(vector<Cluster,allocator<Cluster> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* LocateED */
static void G__setup_memvarLocateED(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ProcessCORARS_DictLN_LocateED));
   { LocateED *p; p=(LocateED*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_ConfigureClass),-1,-1,4,"conf=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->inPath)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"inPath=",0,"path of thein data files");
   G__memvar_setup((void*)((long)(&p->inFileName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"inFileName=",0,"in file name ");
   G__memvar_setup((void*)((long)(&p->inFile)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TFile),-1,-1,1,"inFile=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->inTree)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TTree),-1,-1,1,"inTree=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->outPath)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"outPath=",0,"out path");
   G__memvar_setup((void*)((long)(&p->outFileName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"outFileName=",0,"out file name");
   G__memvar_setup((void*)((long)(&p->outFile)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TFile),-1,-1,1,"outFile=",0,"out root file containing measured time and charge of Scintillor s and EDs");
   G__memvar_setup((void*)((long)(&p->NEDs)-(long)(p)),105,0,0,-1,-1,-1,1,"NEDs=",0,"totoal number of measured EDs");
   G__memvar_setup((void*)((long)(&p->EDName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"EDName[8]=",0,"ED name");
   G__memvar_setup((void*)((long)(&p->EDSCT1Name)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"EDSCT1Name[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT2Name)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"EDSCT2Name[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT3Name)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"EDSCT3Name[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDSCT4Name)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"EDSCT4Name[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDHitsGraphs)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TGraph),-1,-1,1,"EDHitsGraphs[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->RotatedEDHitsGraphs)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TGraph),-1,-1,1,"RotatedEDHitsGraphs[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDNoisesGraphs)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TGraph),-1,-1,1,"EDNoisesGraphs[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->RotatedEDNoisesGraphs)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TGraph),-1,-1,1,"RotatedEDNoisesGraphs[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Inner1BLine)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TLine),-1,-1,1,"Inner1BLine[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Inner1TLine)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TLine),-1,-1,1,"Inner1TLine[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Inner1LLine)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TLine),-1,-1,1,"Inner1LLine[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Inner1RLine)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TLine),-1,-1,1,"Inner1RLine[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Outer1BLine)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TLine),-1,-1,1,"Outer1BLine[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Outer1TLine)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TLine),-1,-1,1,"Outer1TLine[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Outer1LLine)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TLine),-1,-1,1,"Outer1LLine[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Outer1RLine)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TLine),-1,-1,1,"Outer1RLine[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Inner2BLine)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TLine),-1,-1,1,"Inner2BLine[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Inner2TLine)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TLine),-1,-1,1,"Inner2TLine[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Inner2LLine)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TLine),-1,-1,1,"Inner2LLine[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Inner2RLine)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TLine),-1,-1,1,"Inner2RLine[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Outer2BLine)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TLine),-1,-1,1,"Outer2BLine[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Outer2TLine)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TLine),-1,-1,1,"Outer2TLine[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Outer2LLine)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TLine),-1,-1,1,"Outer2LLine[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Outer2RLine)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TLine),-1,-1,1,"Outer2RLine[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Inner3BLine)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TLine),-1,-1,1,"Inner3BLine[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Inner3TLine)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TLine),-1,-1,1,"Inner3TLine[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Inner3LLine)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TLine),-1,-1,1,"Inner3LLine[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Inner3RLine)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TLine),-1,-1,1,"Inner3RLine[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Outer3BLine)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TLine),-1,-1,1,"Outer3BLine[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Outer3TLine)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TLine),-1,-1,1,"Outer3TLine[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Outer3LLine)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TLine),-1,-1,1,"Outer3LLine[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Outer3RLine)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TLine),-1,-1,1,"Outer3RLine[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Inner4BLine)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TLine),-1,-1,1,"Inner4BLine[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Inner4TLine)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TLine),-1,-1,1,"Inner4TLine[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Inner4LLine)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TLine),-1,-1,1,"Inner4LLine[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Inner4RLine)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TLine),-1,-1,1,"Inner4RLine[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Outer4BLine)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TLine),-1,-1,1,"Outer4BLine[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Outer4TLine)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TLine),-1,-1,1,"Outer4TLine[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Outer4LLine)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TLine),-1,-1,1,"Outer4LLine[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Outer4RLine)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TLine),-1,-1,1,"Outer4RLine[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FuncSlope)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"FuncSlope=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->XTruncation)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"XTruncation=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->YTruncation)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"YTruncation=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->SCT1BLPoint)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"SCT1BLPoint=",0,"the left  bottom  point (x, y) of SCT 1");
   G__memvar_setup((void*)((long)(&p->SCT2BLPoint)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"SCT2BLPoint=",0,"the left  bottom  point (x, y) of SCT 2");
   G__memvar_setup((void*)((long)(&p->SCT3BLPoint)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"SCT3BLPoint=",0,"the left  bottom  point (x, y) of SCT 3");
   G__memvar_setup((void*)((long)(&p->SCT4BLPoint)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"SCT4BLPoint=",0,"the left  bottom  point (x, y) of SCT 4");
   G__memvar_setup((void*)((long)(&p->SCT1BLRotatedPoint)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"SCT1BLRotatedPoint=",0,"the left  bottom point (x, y) after rotation of SCT 1");
   G__memvar_setup((void*)((long)(&p->SCT2BLRotatedPoint)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"SCT2BLRotatedPoint=",0,"the left  bottom point (x, y) after rotation of SCT 2");
   G__memvar_setup((void*)((long)(&p->SCT3BLRotatedPoint)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"SCT3BLRotatedPoint=",0,"the left  bottom point (x, y) after rotation of SCT 3");
   G__memvar_setup((void*)((long)(&p->SCT4BLRotatedPoint)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"SCT4BLRotatedPoint=",0,"the left  bottom point (x, y) after rotation of SCT 4");
   }
   G__tag_memvar_reset();
}


   /* ReCalcuVariables */
static void G__setup_memvarReCalcuVariables(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ProcessCORARS_DictLN_ReCalcuVariables));
   { ReCalcuVariables *p; p=(ReCalcuVariables*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_ConfigureClass),-1,-1,4,"conf=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->inPath)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"inPath=",0,"path of thein data files");
   G__memvar_setup((void*)((long)(&p->inFileName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"inFileName=",0,"in file name ");
   G__memvar_setup((void*)((long)(&p->inFile)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TFile),-1,-1,1,"inFile=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->inTree)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TTree),-1,-1,1,"inTree=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->outPath)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"outPath=",0,"out path");
   G__memvar_setup((void*)((long)(&p->outFileName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"outFileName=",0,"out file name");
   G__memvar_setup((void*)((long)(&p->outFile)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TFile),-1,-1,1,"outFile=",0,"out root file containing measured time and charge of Scintillor s and ED");
   G__memvar_setup((void*)((long)(&p->outTree)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TTree),-1,-1,1,"outTree=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NEDs)-(long)(p)),105,0,0,-1,-1,-1,1,"NEDs=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EDName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string),-1,-1,1,"EDName[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NEDNoiseHit)-(long)(p)),105,0,0,-1,-1,-1,1,"NEDNoiseHit[8]=",0,"Number of noise hits before trigger");
   G__memvar_setup((void*)((long)(&p->ElecDet)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_ED),-1,-1,1,"ElecDet[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EventQuality)-(long)(p)),105,0,0,-1,-1,-1,1,"EventQuality=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Muon_TOF)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TOF),-1,-1,1,"Muon_TOF=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TrackLength)-(long)(p)),102,0,0,-1,-1,-1,1,"TrackLength=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->FuncSlope)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,1,"FuncSlope=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ChargeDeltaTime)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH1F),-1,-1,1,"ChargeDeltaTime[8]=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarProcessCORARS_Dict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncConfigureClass(void) {
   /* ConfigureClass */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ProcessCORARS_DictLN_ConfigureClass));
   G__memfunc_setup("ConfigureClass",1432,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__ProcessCORARS_DictLN_ConfigureClass), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Instance",821,G__ProcessCORARS_Dict_304_0_2, 85, G__get_linked_tagnum(&G__ProcessCORARS_DictLN_ConfigureClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (ConfigureClass* (*)())(&ConfigureClass::Instance) ), 0);
   G__memfunc_setup("SetProcessStage",1535,G__ProcessCORARS_Dict_304_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetinPath",900,G__ProcessCORARS_Dict_304_0_4, 117, G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetoutPath",1029,G__ProcessCORARS_Dict_304_0_5, 117, G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCORARSCollectionTime",2181,G__ProcessCORARS_Dict_304_0_6, 117, G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWRCollectionTime",1892,G__ProcessCORARS_Dict_304_0_7, 117, G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTSCTXY",795,G__ProcessCORARS_Dict_304_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", "read the x and y of the bottom left of SCT from TSCTFile", (void*) NULL, 0);
   G__memfunc_setup("GetTSCTXY",783,G__ProcessCORARS_Dict_304_0_9, 117, G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR), G__defined_typename("vector<std::pair<float,float> >"), 0, 0, 1, 1, 0, "", "get the x and y of TSCT", (void*) NULL, 0);
   G__memfunc_setup("GetNEDs",618,G__ProcessCORARS_Dict_304_0_10, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEDName",810,G__ProcessCORARS_Dict_304_0_11, 117, G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string), -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEDSCT1Name",1093,G__ProcessCORARS_Dict_304_0_12, 117, G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string), -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEDSCT2Name",1094,G__ProcessCORARS_Dict_304_0_13, 117, G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string), -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEDSCT3Name",1095,G__ProcessCORARS_Dict_304_0_14, 117, G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string), -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEDSCT4Name",1096,G__ProcessCORARS_Dict_304_0_15, 117, G__get_linked_tagnum(&G__ProcessCORARS_DictLN_string), -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEDZ",515,G__ProcessCORARS_Dict_304_0_16, 102, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEDV1290NChannel",1490,G__ProcessCORARS_Dict_304_0_17, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEDV792NChannel",1448,G__ProcessCORARS_Dict_304_0_18, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUpScinV1290NChannel",1947,G__ProcessCORARS_Dict_304_0_19, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDownScinV1290NChannel",2158,G__ProcessCORARS_Dict_304_0_20, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTriggerID",1153,G__ProcessCORARS_Dict_304_0_21, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUpScinID",1023,G__ProcessCORARS_Dict_304_0_22, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDownScinID",1234,G__ProcessCORARS_Dict_304_0_23, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEDID",566,G__ProcessCORARS_Dict_304_0_24, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("ConfigureClass", 1432, G__ProcessCORARS_Dict_304_0_25, (int) ('i'), G__get_linked_tagnum(&G__ProcessCORARS_DictLN_ConfigureClass), -1, 0, 1, 1, 1, 0, "u 'ConfigureClass' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ConfigureClass", 1558, G__ProcessCORARS_Dict_304_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ProcessCORARS_Dict_304_0_27, (int) ('u'), G__get_linked_tagnum(&G__ProcessCORARS_DictLN_ConfigureClass), -1, 1, 1, 1, 1, 0, "u 'ConfigureClass' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKM2AEvent(void) {
   /* KM2AEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ProcessCORARS_DictLN_KM2AEvent));
   G__memfunc_setup("KM2AEvent",781,G__ProcessCORARS_Dict_687_0_1, 105, G__get_linked_tagnum(&G__ProcessCORARS_DictLN_KM2AEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEvN",565,G__ProcessCORARS_Dict_687_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - s_ev_n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMjd",583,G__ProcessCORARS_Dict_687_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - s_mjd", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFs",485,G__ProcessCORARS_Dict_687_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - s_fs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDt",484,G__ProcessCORARS_Dict_687_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - s_dt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNhit",703,G__ProcessCORARS_Dict_687_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - s_nhit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EvN",265,G__ProcessCORARS_Dict_687_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NHit",371,G__ProcessCORARS_Dict_687_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Nmd",287,G__ProcessCORARS_Dict_687_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Mjd",283,G__ProcessCORARS_Dict_687_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fs",185,G__ProcessCORARS_Dict_687_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Dt",184,G__ProcessCORARS_Dict_687_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Phi",289,G__ProcessCORARS_Dict_687_0_13, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Phiz",411,G__ProcessCORARS_Dict_687_0_14, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Phio",400,G__ProcessCORARS_Dict_687_0_15, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Theta",502,G__ProcessCORARS_Dict_687_0_16, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Thetaz",624,G__ProcessCORARS_Dict_687_0_17, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Thetao",613,G__ProcessCORARS_Dict_687_0_18, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Corex",513,G__ProcessCORARS_Dict_687_0_19, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Corey",514,G__ProcessCORARS_Dict_687_0_20, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("C0",115,G__ProcessCORARS_Dict_687_0_21, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("A",65,G__ProcessCORARS_Dict_687_0_22, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("B",66,G__ProcessCORARS_Dict_687_0_23, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Hitlist",737,G__ProcessCORARS_Dict_687_0_24, 85, G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TClonesArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddHit",558,G__ProcessCORARS_Dict_687_0_25, 121, -1, -1, 0, 15, 1, 1, 0, 
"h - 'UInt_t' 0 - p_id d - - 0 - p_x "
"d - - 0 - p_y d - - 0 - p_z "
"d - - 0 - p_t0 i - - 0 - p_oe "
"b - 'UChar_t' 0 - p_mode h - 'UInt_t' 0 - p_time_ns "
"h - 'UInt_t' 0 - p_peakAnode h - 'UInt_t' 0 - p_peakDynode "
"b - 'UChar_t' 0 - p_peakTimeAnode b - 'UChar_t' 0 - p_peakTimeDynode "
"h - 'UInt_t' 0 - p_pedAnode h - 'UInt_t' 0 - p_pedDynode "
"b - 'UChar_t' 0 - p_tag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,G__ProcessCORARS_Dict_687_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fit",291,G__ProcessCORARS_Dict_687_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - nMode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ProcessCORARS_Dict_687_0_28, 85, G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KM2AEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ProcessCORARS_Dict_687_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KM2AEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ProcessCORARS_Dict_687_0_30, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KM2AEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ProcessCORARS_Dict_687_0_31, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KM2AEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ProcessCORARS_Dict_687_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ProcessCORARS_Dict_687_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KM2AEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ProcessCORARS_Dict_687_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KM2AEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ProcessCORARS_Dict_687_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KM2AEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ProcessCORARS_Dict_687_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KM2AEvent::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KM2AEvent", 781, G__ProcessCORARS_Dict_687_0_40, (int) ('i'), G__get_linked_tagnum(&G__ProcessCORARS_DictLN_KM2AEvent), -1, 0, 1, 1, 1, 0, "u 'KM2AEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KM2AEvent", 907, G__ProcessCORARS_Dict_687_0_41, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ProcessCORARS_Dict_687_0_42, (int) ('u'), G__get_linked_tagnum(&G__ProcessCORARS_DictLN_KM2AEvent), -1, 1, 1, 1, 1, 0, "u 'KM2AEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKM2AHit(void) {
   /* KM2AHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ProcessCORARS_DictLN_KM2AHit));
   G__memfunc_setup("KM2AHit",560,G__ProcessCORARS_Dict_688_0_1, 105, G__get_linked_tagnum(&G__ProcessCORARS_DictLN_KM2AHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KM2AHit",560,G__ProcessCORARS_Dict_688_0_2, 105, G__get_linked_tagnum(&G__ProcessCORARS_DictLN_KM2AHit), -1, 0, 15, 1, 1, 0, 
"h - 'UInt_t' 0 - p_id d - - 0 - p_x "
"d - - 0 - p_y d - - 0 - p_z "
"d - - 0 - p_t0 i - - 0 - p_oe "
"b - 'UChar_t' 0 - p_mode h - 'UInt_t' 0 - p_time_ns "
"h - 'UInt_t' 0 - p_peakAnode h - 'UInt_t' 0 - p_peakDynode "
"b - 'UChar_t' 0 - p_peakTimeAnode b - 'UChar_t' 0 - p_peakTimeDynode "
"h - 'UInt_t' 0 - p_pedAnode h - 'UInt_t' 0 - p_pedDynode "
"b - 'UChar_t' 0 - p_tag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ID",141,G__ProcessCORARS_Dict_688_0_3, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Time",399,G__ProcessCORARS_Dict_688_0_4, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Charge",586,G__ProcessCORARS_Dict_688_0_5, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("X",88,G__ProcessCORARS_Dict_688_0_6, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Y",89,G__ProcessCORARS_Dict_688_0_7, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Z",90,G__ProcessCORARS_Dict_688_0_8, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("T",84,G__ProcessCORARS_Dict_688_0_9, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OE",148,G__ProcessCORARS_Dict_688_0_10, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Id",173,G__ProcessCORARS_Dict_688_0_11, 98, -1, G__defined_typename("UChar_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Peda",378,G__ProcessCORARS_Dict_688_0_12, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Pedd",381,G__ProcessCORARS_Dict_688_0_13, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PeakTimeAnode",1271,G__ProcessCORARS_Dict_688_0_14, 98, -1, G__defined_typename("UChar_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PeakTimeDynode",1395,G__ProcessCORARS_Dict_688_0_15, 98, -1, G__defined_typename("UChar_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Qa",178,G__ProcessCORARS_Dict_688_0_16, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Qd",181,G__ProcessCORARS_Dict_688_0_17, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ProcessCORARS_Dict_688_0_18, 85, G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KM2AHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ProcessCORARS_Dict_688_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KM2AHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ProcessCORARS_Dict_688_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KM2AHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ProcessCORARS_Dict_688_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KM2AHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ProcessCORARS_Dict_688_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ProcessCORARS_Dict_688_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KM2AHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ProcessCORARS_Dict_688_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KM2AHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ProcessCORARS_Dict_688_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KM2AHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ProcessCORARS_Dict_688_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KM2AHit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KM2AHit", 560, G__ProcessCORARS_Dict_688_0_30, (int) ('i'), G__get_linked_tagnum(&G__ProcessCORARS_DictLN_KM2AHit), -1, 0, 1, 1, 1, 0, "u 'KM2AHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KM2AHit", 686, G__ProcessCORARS_Dict_688_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ProcessCORARS_Dict_688_0_32, (int) ('u'), G__get_linked_tagnum(&G__ProcessCORARS_DictLN_KM2AHit), -1, 1, 1, 1, 1, 0, "u 'KM2AHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAlignment(void) {
   /* Alignment */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ProcessCORARS_DictLN_Alignment));
   G__memfunc_setup("Alignment",927,G__ProcessCORARS_Dict_689_0_1, 105, G__get_linked_tagnum(&G__ProcessCORARS_DictLN_Alignment), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__ProcessCORARS_Dict_689_0_2, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNMisalignment",1622,G__ProcessCORARS_Dict_689_0_3, 105, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - CORARSSite i - - 0 - WTSite "
"i - - 0 - MaxNMisAlignment i - - 0 - NLast "
"g - - 0 - CORARSAhead", "get the N of event of misalignment between CORARAS and White Babbit", (void*) NULL, 0);
   G__memfunc_setup("GetHitIndex",1085,G__ProcessCORARS_Dict_689_0_4, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'KM2AEvent' - 0 - pevent i - - 0 - ID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNHits",774,G__ProcessCORARS_Dict_689_0_5, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'KM2AEvent' - 0 - pevent i - - 0 - ID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEDNNoise",1013,G__ProcessCORARS_Dict_689_0_6, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'KM2AEvent' - 0 - pevent i - - 0 - ID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Align",491,G__ProcessCORARS_Dict_689_0_7, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("Alignment", 927, G__ProcessCORARS_Dict_689_0_8, (int) ('i'), G__get_linked_tagnum(&G__ProcessCORARS_DictLN_Alignment), -1, 0, 1, 1, 1, 0, "u 'Alignment' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Alignment", 1053, G__ProcessCORARS_Dict_689_0_9, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ProcessCORARS_Dict_689_0_10, (int) ('u'), G__get_linked_tagnum(&G__ProcessCORARS_DictLN_Alignment), -1, 1, 1, 1, 1, 0, "u 'Alignment' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSelectBranch(void) {
   /* SelectBranch */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ProcessCORARS_DictLN_SelectBranch));
   G__memfunc_setup("SelectBranch",1198,G__ProcessCORARS_Dict_752_0_1, 105, G__get_linked_tagnum(&G__ProcessCORARS_DictLN_SelectBranch), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__ProcessCORARS_Dict_752_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Count",521,G__ProcessCORARS_Dict_752_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Select",608,G__ProcessCORARS_Dict_752_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SelectBranch", 1198, G__ProcessCORARS_Dict_752_0_5, (int) ('i'), G__get_linked_tagnum(&G__ProcessCORARS_DictLN_SelectBranch), -1, 0, 1, 1, 1, 0, "u 'SelectBranch' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SelectBranch", 1324, G__ProcessCORARS_Dict_752_0_6, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ProcessCORARS_Dict_752_0_7, (int) ('u'), G__get_linked_tagnum(&G__ProcessCORARS_DictLN_SelectBranch), -1, 1, 1, 1, 1, 0, "u 'SelectBranch' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCalcuVariables(void) {
   /* CalcuVariables */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ProcessCORARS_DictLN_CalcuVariables));
   G__memfunc_setup("CalcuVariables",1409,G__ProcessCORARS_Dict_769_0_1, 105, G__get_linked_tagnum(&G__ProcessCORARS_DictLN_CalcuVariables), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__ProcessCORARS_Dict_769_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Calcu_Scin",980,G__ProcessCORARS_Dict_769_0_3, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Calcu_ED",720,G__ProcessCORARS_Dict_769_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Calcu",488,G__ProcessCORARS_Dict_769_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("CalcuVariables", 1409, G__ProcessCORARS_Dict_769_0_6, (int) ('i'), G__get_linked_tagnum(&G__ProcessCORARS_DictLN_CalcuVariables), -1, 0, 1, 1, 1, 0, "u 'CalcuVariables' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CalcuVariables", 1535, G__ProcessCORARS_Dict_769_0_7, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ProcessCORARS_Dict_769_0_8, (int) ('u'), G__get_linked_tagnum(&G__ProcessCORARS_DictLN_CalcuVariables), -1, 1, 1, 1, 1, 0, "u 'CalcuVariables' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAnalyseED(void) {
   /* AnalyseED */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ProcessCORARS_DictLN_AnalyseED));
   G__memfunc_setup("AnalyseED",854,G__ProcessCORARS_Dict_1252_0_1, 105, G__get_linked_tagnum(&G__ProcessCORARS_DictLN_AnalyseED), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__ProcessCORARS_Dict_1252_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NewHist",706,G__ProcessCORARS_Dict_1252_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillHitPoint",1206,G__ProcessCORARS_Dict_1252_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillDeltaTOF",1114,G__ProcessCORARS_Dict_1252_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillDeltaTime",1280,G__ProcessCORARS_Dict_1252_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillCharge",977,G__ProcessCORARS_Dict_1252_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetEffi",951,G__ProcessCORARS_Dict_1252_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSysTimeRes",1304,G__ProcessCORARS_Dict_1252_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTimeRes",985,G__ProcessCORARS_Dict_1252_0_10, 117, G__get_linked_tagnum(&G__ProcessCORARS_DictLN_pairlEfloatcOfloatgR), -1, 0, 1, 1, 1, 0, "U 'TH1F' - 0 - EDSCTCorrectedDeltaTime", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTimeRes",985,G__ProcessCORARS_Dict_1252_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTimeOffset",1302,G__ProcessCORARS_Dict_1252_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Convolution",1184,G__ProcessCORARS_Dict_1252_0_13, 121, -1, -1, 0, 8, 1, 1, 0, 
"U 'TH1F' - 0 - h f - - 0 - fitlowedge "
"f - - 0 - fithighedge F - - 0 - singleparticlepeak "
"F - - 0 - singleparticlepeakerror F - - 0 - resolution "
"F - - 0 - resolutionerror u 'string' - 0 - canvasname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergyRes",1204,G__ProcessCORARS_Dict_1252_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CloneTH2F",773,G__ProcessCORARS_Dict_1252_0_15, 85, G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TH2F), -1, 0, 4, 1, 1, 0, 
"U 'TMatrixT<float>' 'TMatrixF' 0 - matrix u 'string' - 0 - name "
"u 'string' - 0 - title u 'string' - 0 - zaxislabel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ScanED",526,G__ProcessCORARS_Dict_1252_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Analyse",717,G__ProcessCORARS_Dict_1252_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("AnalyseED", 854, G__ProcessCORARS_Dict_1252_0_18, (int) ('i'), G__get_linked_tagnum(&G__ProcessCORARS_DictLN_AnalyseED), -1, 0, 1, 1, 1, 0, "u 'AnalyseED' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~AnalyseED", 980, G__ProcessCORARS_Dict_1252_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ProcessCORARS_Dict_1252_0_20, (int) ('u'), G__get_linked_tagnum(&G__ProcessCORARS_DictLN_AnalyseED), -1, 1, 1, 1, 1, 0, "u 'AnalyseED' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncChargeCorrectTime(void) {
   /* ChargeCorrectTime */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ProcessCORARS_DictLN_ChargeCorrectTime));
   G__memfunc_setup("ChargeCorrectTime",1707,G__ProcessCORARS_Dict_1253_0_1, 105, G__get_linked_tagnum(&G__ProcessCORARS_DictLN_ChargeCorrectTime), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__ProcessCORARS_Dict_1253_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Correct",722,G__ProcessCORARS_Dict_1253_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("ChargeCorrectTime", 1707, G__ProcessCORARS_Dict_1253_0_4, (int) ('i'), G__get_linked_tagnum(&G__ProcessCORARS_DictLN_ChargeCorrectTime), -1, 0, 1, 1, 1, 0, "u 'ChargeCorrectTime' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ChargeCorrectTime", 1833, G__ProcessCORARS_Dict_1253_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ProcessCORARS_Dict_1253_0_6, (int) ('u'), G__get_linked_tagnum(&G__ProcessCORARS_DictLN_ChargeCorrectTime), -1, 1, 1, 1, 1, 0, "u 'ChargeCorrectTime' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncGenerateTimeCalib(void) {
   /* GenerateTimeCalib */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ProcessCORARS_DictLN_GenerateTimeCalib));
   G__memfunc_setup("GenerateTimeCalib",1685,G__ProcessCORARS_Dict_1254_0_1, 105, G__get_linked_tagnum(&G__ProcessCORARS_DictLN_GenerateTimeCalib), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__ProcessCORARS_Dict_1254_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDownCalib",1171,G__ProcessCORARS_Dict_1254_0_3, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Generate",811,G__ProcessCORARS_Dict_1254_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("GenerateTimeCalib", 1685, G__ProcessCORARS_Dict_1254_0_5, (int) ('i'), G__get_linked_tagnum(&G__ProcessCORARS_DictLN_GenerateTimeCalib), -1, 0, 1, 1, 1, 0, "u 'GenerateTimeCalib' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~GenerateTimeCalib", 1811, G__ProcessCORARS_Dict_1254_0_6, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ProcessCORARS_Dict_1254_0_7, (int) ('u'), G__get_linked_tagnum(&G__ProcessCORARS_DictLN_GenerateTimeCalib), -1, 1, 1, 1, 1, 0, "u 'GenerateTimeCalib' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSimulateTimeCalib(void) {
   /* SimulateTimeCalib */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ProcessCORARS_DictLN_SimulateTimeCalib));
   G__memfunc_setup("SimulateTimeCalib",1710,G__ProcessCORARS_Dict_1255_0_1, 105, G__get_linked_tagnum(&G__ProcessCORARS_DictLN_SimulateTimeCalib), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__ProcessCORARS_Dict_1255_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDownFitParas",1490,G__ProcessCORARS_Dict_1255_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCalib",763,G__ProcessCORARS_Dict_1255_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Simulate",836,G__ProcessCORARS_Dict_1255_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SimulateTimeCalib", 1710, G__ProcessCORARS_Dict_1255_0_6, (int) ('i'), G__get_linked_tagnum(&G__ProcessCORARS_DictLN_SimulateTimeCalib), -1, 0, 1, 1, 1, 0, "u 'SimulateTimeCalib' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SimulateTimeCalib", 1836, G__ProcessCORARS_Dict_1255_0_7, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ProcessCORARS_Dict_1255_0_8, (int) ('u'), G__get_linked_tagnum(&G__ProcessCORARS_DictLN_SimulateTimeCalib), -1, 1, 1, 1, 1, 0, "u 'SimulateTimeCalib' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncReGenerateTimeCalib(void) {
   /* ReGenerateTimeCalib */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ProcessCORARS_DictLN_ReGenerateTimeCalib));
   G__memfunc_setup("ReGenerateTimeCalib",1868,G__ProcessCORARS_Dict_1256_0_1, 105, G__get_linked_tagnum(&G__ProcessCORARS_DictLN_ReGenerateTimeCalib), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__ProcessCORARS_Dict_1256_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcuScinCalib",1360,G__ProcessCORARS_Dict_1256_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReGenerate",994,G__ProcessCORARS_Dict_1256_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("ReGenerateTimeCalib", 1868, G__ProcessCORARS_Dict_1256_0_5, (int) ('i'), G__get_linked_tagnum(&G__ProcessCORARS_DictLN_ReGenerateTimeCalib), -1, 0, 1, 1, 1, 0, "u 'ReGenerateTimeCalib' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ReGenerateTimeCalib", 1994, G__ProcessCORARS_Dict_1256_0_6, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ProcessCORARS_Dict_1256_0_7, (int) ('u'), G__get_linked_tagnum(&G__ProcessCORARS_DictLN_ReGenerateTimeCalib), -1, 1, 1, 1, 1, 0, "u 'ReGenerateTimeCalib' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncComDiscriminator(void) {
   /* ComDiscriminator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ProcessCORARS_DictLN_ComDiscriminator));
   G__memfunc_setup("ComDiscriminator",1655,G__ProcessCORARS_Dict_1261_0_1, 105, G__get_linked_tagnum(&G__ProcessCORARS_DictLN_ComDiscriminator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__ProcessCORARS_Dict_1261_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Get_Number",1000,G__ProcessCORARS_Dict_1261_0_3, 105, -1, -1, 0, 1, 1, 1, 0, "H - 'UInt_t' 0 - Signal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Get_Valid_Strip_Wire_Number",2718,G__ProcessCORARS_Dict_1261_0_4, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Calcu_TGC_Coor",1303,G__ProcessCORARS_Dict_1261_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Calcu_Scin",980,G__ProcessCORARS_Dict_1261_0_6, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Calcu_ED5",773,G__ProcessCORARS_Dict_1261_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Calcu",488,G__ProcessCORARS_Dict_1261_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("ComDiscriminator", 1655, G__ProcessCORARS_Dict_1261_0_9, (int) ('i'), G__get_linked_tagnum(&G__ProcessCORARS_DictLN_ComDiscriminator), -1, 0, 1, 1, 1, 0, "u 'ComDiscriminator' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ComDiscriminator", 1781, G__ProcessCORARS_Dict_1261_0_10, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ProcessCORARS_Dict_1261_0_11, (int) ('u'), G__get_linked_tagnum(&G__ProcessCORARS_DictLN_ComDiscriminator), -1, 1, 1, 1, 1, 0, "u 'ComDiscriminator' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCluster(void) {
   /* Cluster */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ProcessCORARS_DictLN_Cluster));
   G__memfunc_setup("Cluster",738,G__ProcessCORARS_Dict_1262_0_1, 105, G__get_linked_tagnum(&G__ProcessCORARS_DictLN_Cluster), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMiddleNumber",1496,G__ProcessCORARS_Dict_1262_0_2, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMiddleNumberM3",1624,G__ProcessCORARS_Dict_1262_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMaxSignalWidth",1700,G__ProcessCORARS_Dict_1262_0_4, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ProcessCORARS_Dict_1262_0_5, 85, G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Cluster::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ProcessCORARS_Dict_1262_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Cluster::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ProcessCORARS_Dict_1262_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Cluster::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ProcessCORARS_Dict_1262_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Cluster::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__ProcessCORARS_Dict_1262_0_9, 85, G__get_linked_tagnum(&G__ProcessCORARS_DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__ProcessCORARS_Dict_1262_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__ProcessCORARS_Dict_1262_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ProcessCORARS_Dict_1262_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ProcessCORARS_Dict_1262_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Cluster::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ProcessCORARS_Dict_1262_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Cluster::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ProcessCORARS_Dict_1262_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Cluster::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ProcessCORARS_Dict_1262_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Cluster::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Cluster", 738, G__ProcessCORARS_Dict_1262_0_17, (int) ('i'), G__get_linked_tagnum(&G__ProcessCORARS_DictLN_Cluster), -1, 0, 1, 1, 1, 0, "u 'Cluster' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Cluster", 864, G__ProcessCORARS_Dict_1262_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ProcessCORARS_Dict_1262_0_19, (int) ('u'), G__get_linked_tagnum(&G__ProcessCORARS_DictLN_Cluster), -1, 1, 1, 1, 1, 0, "u 'Cluster' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCalcuTGCScin(void) {
   /* CalcuTGCScin */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ProcessCORARS_DictLN_CalcuTGCScin));
   G__memfunc_setup("CalcuTGCScin",1107,G__ProcessCORARS_Dict_1265_0_1, 105, G__get_linked_tagnum(&G__ProcessCORARS_DictLN_CalcuTGCScin), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__ProcessCORARS_Dict_1265_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetClusters",1141,G__ProcessCORARS_Dict_1265_0_3, 121, -1, -1, 0, 3, 1, 1, 0, 
"H - 'UInt_t' 0 - Leading H - 'UInt_t' 0 - Trailing "
"U 'vector<Cluster,allocator<Cluster> >' 'vector<Cluster>' 0 - vectorcluster", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAllClusters",1422,G__ProcessCORARS_Dict_1265_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetClusterValidNumbers",2254,G__ProcessCORARS_Dict_1265_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<Cluster,allocator<Cluster> >' 'vector<Cluster>' 0 - vectorcluster U 'vector<int,allocator<int> >' 'vector<int>' 0 - vectorvalidnumber", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetValidNumber",1401,G__ProcessCORARS_Dict_1265_0_6, 105, -1, -1, 0, 1, 1, 1, 0, "u 'vector<Cluster,allocator<Cluster> >' 'vector<Cluster>' 0 - valid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetValidNumbers",1516,G__ProcessCORARS_Dict_1265_0_7, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Calcu_TGC",805,G__ProcessCORARS_Dict_1265_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Calcu_Scin",980,G__ProcessCORARS_Dict_1265_0_9, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Calcu",488,G__ProcessCORARS_Dict_1265_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("recalculate",1157,G__ProcessCORARS_Dict_1265_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("recalculate1",1206,G__ProcessCORARS_Dict_1265_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__ProcessCORARS_Dict_1265_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getValidLineNumber",1825,G__ProcessCORARS_Dict_1265_0_14, 105, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<int,allocator<int> >' 'vector<int>' 0 - vec1 u 'vector<int,allocator<int> >' 'vector<int>' 0 - vec2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eventAnalysis",1382,G__ProcessCORARS_Dict_1265_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("CalcuTGCScin", 1107, G__ProcessCORARS_Dict_1265_0_16, (int) ('i'), G__get_linked_tagnum(&G__ProcessCORARS_DictLN_CalcuTGCScin), -1, 0, 1, 1, 1, 0, "u 'CalcuTGCScin' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CalcuTGCScin", 1233, G__ProcessCORARS_Dict_1265_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ProcessCORARS_Dict_1265_0_18, (int) ('u'), G__get_linked_tagnum(&G__ProcessCORARS_DictLN_CalcuTGCScin), -1, 1, 1, 1, 1, 0, "u 'CalcuTGCScin' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEClustercOallocatorlEClustergRsPgR(void) {
   /* vector<Cluster,allocator<Cluster> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEClustercOallocatorlEClustergRsPgR));
   G__memfunc_setup("at",213,G__ProcessCORARS_Dict_1267_0_1, 117, G__get_linked_tagnum(&G__ProcessCORARS_DictLN_Cluster), G__defined_typename("vector<Cluster,allocator<Cluster> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<Cluster,allocator<Cluster> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__ProcessCORARS_Dict_1267_0_2, 117, G__get_linked_tagnum(&G__ProcessCORARS_DictLN_Cluster), G__defined_typename("vector<Cluster,allocator<Cluster> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<Cluster,allocator<Cluster> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__ProcessCORARS_Dict_1267_0_3, 117, G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEClustercOallocatorlEClustergRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__ProcessCORARS_Dict_1267_0_4, 117, G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEClustercOallocatorlEClustergRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__ProcessCORARS_Dict_1267_0_5, 117, G__get_linked_tagnum(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEClustercOallocatorlEClustergRsPgRcLcLiteratorgR), G__defined_typename("vector<Cluster,allocator<Cluster> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__ProcessCORARS_Dict_1267_0_6, 117, G__get_linked_tagnum(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEClustercOallocatorlEClustergRsPgRcLcLiteratorgR), G__defined_typename("vector<Cluster,allocator<Cluster> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__ProcessCORARS_Dict_1267_0_7, 107, -1, G__defined_typename("vector<Cluster,allocator<Cluster> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__ProcessCORARS_Dict_1267_0_8, 107, -1, G__defined_typename("vector<Cluster,allocator<Cluster> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__ProcessCORARS_Dict_1267_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<Cluster,allocator<Cluster> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__ProcessCORARS_Dict_1267_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<Cluster,allocator<Cluster> >::size_type' 0 - sz u 'Cluster' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__ProcessCORARS_Dict_1267_0_11, 107, -1, G__defined_typename("vector<Cluster,allocator<Cluster> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__ProcessCORARS_Dict_1267_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__ProcessCORARS_Dict_1267_0_13, 117, G__get_linked_tagnum(&G__ProcessCORARS_DictLN_Cluster), G__defined_typename("vector<Cluster,allocator<Cluster> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<Cluster,allocator<Cluster> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__ProcessCORARS_Dict_1267_0_14, 117, G__get_linked_tagnum(&G__ProcessCORARS_DictLN_Cluster), G__defined_typename("vector<Cluster,allocator<Cluster> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<Cluster,allocator<Cluster> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<Cluster,allocator<Cluster> >",3416,G__ProcessCORARS_Dict_1267_0_15, 105, G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEClustercOallocatorlEClustergRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<Cluster,allocator<Cluster> >",3416,G__ProcessCORARS_Dict_1267_0_16, 105, G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEClustercOallocatorlEClustergRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<Cluster,allocator<Cluster> >::size_type' 0 - n u 'Cluster' - 11 'Cluster()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<Cluster,allocator<Cluster> >",3416,G__ProcessCORARS_Dict_1267_0_17, 105, G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEClustercOallocatorlEClustergRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<Cluster,allocator<Cluster> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<Cluster,allocator<Cluster> >",3416,G__ProcessCORARS_Dict_1267_0_18, 105, G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEClustercOallocatorlEClustergRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<Cluster,allocator<Cluster> >::iterator' 'vector<Cluster,allocator<Cluster> >::const_iterator' 10 - first u 'vector<Cluster,allocator<Cluster> >::iterator' 'vector<Cluster,allocator<Cluster> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__ProcessCORARS_Dict_1267_0_19, 117, G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEClustercOallocatorlEClustergRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<Cluster,allocator<Cluster> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__ProcessCORARS_Dict_1267_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<Cluster,allocator<Cluster> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__ProcessCORARS_Dict_1267_0_21, 117, G__get_linked_tagnum(&G__ProcessCORARS_DictLN_Cluster), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__ProcessCORARS_Dict_1267_0_22, 117, G__get_linked_tagnum(&G__ProcessCORARS_DictLN_Cluster), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__ProcessCORARS_Dict_1267_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'Cluster' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__ProcessCORARS_Dict_1267_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<Cluster,allocator<Cluster> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__ProcessCORARS_Dict_1267_0_25, 117, G__get_linked_tagnum(&G__ProcessCORARS_DictLN_vectorlEClustercOallocatorlEClustergRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<Cluster,allocator<Cluster> >::iterator' - 0 - position u 'Cluster' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__ProcessCORARS_Dict_1267_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<Cluster,allocator<Cluster> >::iterator' - 0 - position u 'vector<Cluster,allocator<Cluster> >::iterator' 'vector<Cluster,allocator<Cluster> >::const_iterator' 10 - first "
"u 'vector<Cluster,allocator<Cluster> >::iterator' 'vector<Cluster,allocator<Cluster> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__ProcessCORARS_Dict_1267_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<Cluster,allocator<Cluster> >::iterator' - 0 - position k - 'vector<Cluster,allocator<Cluster> >::size_type' 0 - n "
"u 'Cluster' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__ProcessCORARS_Dict_1267_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__ProcessCORARS_Dict_1267_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<Cluster,allocator<Cluster> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__ProcessCORARS_Dict_1267_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<Cluster,allocator<Cluster> >::iterator' - 0 - first u 'vector<Cluster,allocator<Cluster> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__ProcessCORARS_Dict_1267_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<Cluster,allocator<Cluster> >", 3542, G__ProcessCORARS_Dict_1267_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncLocateED(void) {
   /* LocateED */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ProcessCORARS_DictLN_LocateED));
   G__memfunc_setup("LocateED",737,G__ProcessCORARS_Dict_1270_0_1, 105, G__get_linked_tagnum(&G__ProcessCORARS_DictLN_LocateED), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__ProcessCORARS_Dict_1270_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGraphs",901,G__ProcessCORARS_Dict_1270_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRotatedGraphs",1624,G__ProcessCORARS_Dict_1270_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSlope",803,G__ProcessCORARS_Dict_1270_0_5, 121, -1, -1, 0, 13, 1, 1, 0, 
"i - - 0 - NEvents U 'TGraph' - 0 - graph "
"f - - 0 - minslope f - - 0 - maxslope "
"f - - 0 - slopestep f - - 0 - minytruncation "
"f - - 0 - maxytruncation f - - 0 - minxtruncation "
"f - - 0 - maxxtruncation f - - 0 - truncationstep "
"F - - 0 - Slope F - - 0 - XTrunc "
"F - - 0 - YTrunc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSlopes",918,G__ProcessCORARS_Dict_1270_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIntersectionPoints",2196,G__ProcessCORARS_Dict_1270_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIntersectionPoint",2081,G__ProcessCORARS_Dict_1270_0_8, 121, -1, -1, 0, 4, 1, 1, 0, 
"U 'TF1' - 0 - func1 U 'TF1' - 0 - func2 "
"F - - 0 - pointx F - - 0 - pointy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Tuning",629,G__ProcessCORARS_Dict_1270_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLines",795,G__ProcessCORARS_Dict_1270_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Write",523,G__ProcessCORARS_Dict_1270_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindED",522,G__ProcessCORARS_Dict_1270_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("LocateED", 737, G__ProcessCORARS_Dict_1270_0_13, (int) ('i'), G__get_linked_tagnum(&G__ProcessCORARS_DictLN_LocateED), -1, 0, 1, 1, 1, 0, "u 'LocateED' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~LocateED", 863, G__ProcessCORARS_Dict_1270_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ProcessCORARS_Dict_1270_0_15, (int) ('u'), G__get_linked_tagnum(&G__ProcessCORARS_DictLN_LocateED), -1, 1, 1, 1, 1, 0, "u 'LocateED' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncReCalcuVariables(void) {
   /* ReCalcuVariables */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ProcessCORARS_DictLN_ReCalcuVariables));
   G__memfunc_setup("ReCalcuVariables",1592,G__ProcessCORARS_Dict_1271_0_1, 105, G__get_linked_tagnum(&G__ProcessCORARS_DictLN_ReCalcuVariables), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__ProcessCORARS_Dict_1271_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReCalcu",671,G__ProcessCORARS_Dict_1271_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("ReCalcuVariables", 1592, G__ProcessCORARS_Dict_1271_0_4, (int) ('i'), G__get_linked_tagnum(&G__ProcessCORARS_DictLN_ReCalcuVariables), -1, 0, 1, 1, 1, 0, "u 'ReCalcuVariables' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ReCalcuVariables", 1718, G__ProcessCORARS_Dict_1271_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ProcessCORARS_Dict_1271_0_6, (int) ('u'), G__get_linked_tagnum(&G__ProcessCORARS_DictLN_ReCalcuVariables), -1, 1, 1, 1, 1, 0, "u 'ReCalcuVariables' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncProcessCORARS_Dict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalProcessCORARS_Dict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {
}

static void G__cpp_setup_func30() {
}

static void G__cpp_setup_func31() {
}

static void G__cpp_setup_func32() {
}

static void G__cpp_setup_func33() {
}

static void G__cpp_setup_func34() {
}

static void G__cpp_setup_func35() {
}

static void G__cpp_setup_func36() {
}

static void G__cpp_setup_func37() {
}

static void G__cpp_setup_func38() {
}

static void G__cpp_setup_func39() {
}

static void G__cpp_setup_func40() {
}

static void G__cpp_setup_func41() {
}

static void G__cpp_setup_func42() {
}

static void G__cpp_setup_func43() {
}

static void G__cpp_setup_func44() {
}

static void G__cpp_setup_func45() {
}

static void G__cpp_setup_func46() {
}

static void G__cpp_setup_func47() {
}

static void G__cpp_setup_func48() {
}

static void G__cpp_setup_func49() {
}

static void G__cpp_setup_func50() {
}

static void G__cpp_setup_func51() {
}

static void G__cpp_setup_func52() {
}

static void G__cpp_setup_func53() {
}

static void G__cpp_setup_func54() {
}

static void G__cpp_setup_func55() {
}

static void G__cpp_setup_func56() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcProcessCORARS_Dict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
  G__cpp_setup_func30();
  G__cpp_setup_func31();
  G__cpp_setup_func32();
  G__cpp_setup_func33();
  G__cpp_setup_func34();
  G__cpp_setup_func35();
  G__cpp_setup_func36();
  G__cpp_setup_func37();
  G__cpp_setup_func38();
  G__cpp_setup_func39();
  G__cpp_setup_func40();
  G__cpp_setup_func41();
  G__cpp_setup_func42();
  G__cpp_setup_func43();
  G__cpp_setup_func44();
  G__cpp_setup_func45();
  G__cpp_setup_func46();
  G__cpp_setup_func47();
  G__cpp_setup_func48();
  G__cpp_setup_func49();
  G__cpp_setup_func50();
  G__cpp_setup_func51();
  G__cpp_setup_func52();
  G__cpp_setup_func53();
  G__cpp_setup_func54();
  G__cpp_setup_func55();
  G__cpp_setup_func56();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__ProcessCORARS_DictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_vectorlEboolcOallocatorlEboolgRsPgR = { "vector<bool,allocator<bool> >" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_TAxis = { "TAxis" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_TF1 = { "TF1" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_TH1I = { "TH1I" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_TH1F = { "TH1F" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_ConfigureClass = { "ConfigureClass" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_pairlEfloatcOfloatgR = { "pair<float,float>" , 115 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR = { "vector<pair<float,float>,allocator<pair<float,float> > >" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<float,float>,allocator<pair<float,float> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR = { "map<string,int,less<string>,allocator<pair<const string,int> > >" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_pairlEstringcOintgR = { "pair<string,int>" , 115 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_pairlEdoublecOdoublegR = { "pair<double,double>" , 115 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_TChain = { "TChain" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_pairlEunsignedsPintcOintgR = { "pair<unsigned int,int>" , 115 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR = { "vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_KM2AEvent = { "KM2AEvent" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_KM2AHit = { "KM2AHit" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_Alignment = { "Alignment" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_TElementActionTlEdoublegR = { "TElementActionT<double>" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_TElementPosActionTlEdoublegR = { "TElementPosActionT<double>" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_TMatrixTRow_constlEdoublegR = { "TMatrixTRow_const<double>" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_TMatrixTlEdoublegR = { "TMatrixT<double>" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_TMatrixTSymlEdoublegR = { "TMatrixTSym<double>" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_TMatrixTRowlEdoublegR = { "TMatrixTRow<double>" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_TMatrixTSparselEdoublegR = { "TMatrixTSparse<double>" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_TMatrixTSparseRow_constlEdoublegR = { "TMatrixTSparseRow_const<double>" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_TMatrixTSparseRowlEdoublegR = { "TMatrixTSparseRow<double>" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_TMatrixTDiag_constlEdoublegR = { "TMatrixTDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_TMatrixTColumn_constlEdoublegR = { "TMatrixTColumn_const<double>" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_TMatrixTSparseDiag_constlEdoublegR = { "TMatrixTSparseDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_TMatrixTFlat_constlEdoublegR = { "TMatrixTFlat_const<double>" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_TMatrixTSub_constlEdoublegR = { "TMatrixTSub_const<double>" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_TMatrixTColumnlEdoublegR = { "TMatrixTColumn<double>" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_TMatrixTDiaglEdoublegR = { "TMatrixTDiag<double>" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_TMatrixTFlatlEdoublegR = { "TMatrixTFlat<double>" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_TMatrixTSublEdoublegR = { "TMatrixTSub<double>" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_TMatrixTSparseDiaglEdoublegR = { "TMatrixTSparseDiag<double>" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_SelectBranch = { "SelectBranch" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_TH2F = { "TH2F" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_TGraph = { "TGraph" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_Point = { "Point" , 115 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_TGC = { "TGC" , 115 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_Scin = { "Scin" , 115 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_ED = { "ED" , 115 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_TOF = { "TOF" , 115 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_CalcuVariables = { "CalcuVariables" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_TLine = { "TLine" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_listlEdoublecOallocatorlEdoublegRsPgR = { "list<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_listlEstringcOallocatorlEstringgRsPgR = { "list<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_maplEstringcOTH1mUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1mUgRsPgRsPgR = { "map<string,TH1*,less<string>,allocator<pair<const string,TH1*> > >" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_maplEstringcORooDataHistmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataHistmUgRsPgRsPgR = { "map<string,RooDataHist*,less<string>,allocator<pair<const string,RooDataHist*> > >" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_maplEstringcORooDataSetmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataSetmUgRsPgRsPgR = { "map<string,RooDataSet*,less<string>,allocator<pair<const string,RooDataSet*> > >" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_maplEstringcORooAbsDatamUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooAbsDatamUgRsPgRsPgR = { "map<string,RooAbsData*,less<string>,allocator<pair<const string,RooAbsData*> > >" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR = { "set<string,less<string>,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR = { "map<string,string,less<string>,allocator<pair<const string,string> > >" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_setlEpairlERooAbsArgmUcORooAbsArgmUgRcOlesslEpairlERooAbsArgmUcORooAbsArgmUgRsPgRcOallocatorlEpairlERooAbsArgmUcORooAbsArgmUgRsPgRsPgR = { "set<pair<RooAbsArg*,RooAbsArg*>,less<pair<RooAbsArg*,RooAbsArg*> >,allocator<pair<RooAbsArg*,RooAbsArg*> > >" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_dequelERooAbsCachemUcOallocatorlERooAbsCachemUgRsPgR = { "deque<RooAbsCache*,allocator<RooAbsCache*> >" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_maplERooAbsArgmUcOTRefArraymUcOlesslERooAbsArgmUgRcOallocatorlEpairlERooAbsArgmUsPconstcOTRefArraymUgRsPgRsPgR = { "map<RooAbsArg*,TRefArray*,less<RooAbsArg*>,allocator<pair<RooAbsArg* const,TRefArray*> > >" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_dequelERooAbsArgmUcOallocatorlERooAbsArgmUgRsPgR = { "deque<RooAbsArg*,allocator<RooAbsArg*> >" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_stacklERooAbsArgmUcOdequelERooAbsArgmUcOallocatorlERooAbsArgmUgRsPgRsPgR = { "stack<RooAbsArg*,deque<RooAbsArg*,allocator<RooAbsArg*> > >" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_vectorlERooCurvemUcOallocatorlERooCurvemUgRsPgR = { "vector<RooCurve*,allocator<RooCurve*> >" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlERooCurvemUcOallocatorlERooCurvemUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RooCurve*,allocator<RooCurve*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_listlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgR = { "list<RooAbsReal::EvalError,allocator<RooAbsReal::EvalError> >" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_pairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgR = { "pair<string,list<RooAbsReal::EvalError,allocator<RooAbsReal::EvalError> > >" , 115 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_maplEconstsPRooAbsArgmUcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRcOlesslEconstsPRooAbsArgmUgRcOallocatorlEpairlEconstsPRooAbsArgmUsPconstcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRsPgRsPgRsPgR = { "map<const RooAbsArg*,pair<string,list<RooAbsReal::EvalError,allocator<RooAbsReal::EvalError> > >,less<const RooAbsArg*>,allocator<pair<const RooAbsArg* const,pair<string,list<RooAbsReal::EvalError,allocator<RooAbsReal::EvalError> > > > > >" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_maplEstringcORooSharedPropertiesmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooSharedPropertiesmUgRsPgRsPgR = { "map<string,RooSharedProperties*,less<string>,allocator<pair<const string,RooSharedProperties*> > >" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_maplETClassmUcOintcOlesslETClassmUgRcOallocatorlEpairlETClassmUsPconstcOintgRsPgRsPgR = { "map<TClass*,int,less<TClass*>,allocator<pair<TClass* const,int> > >" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_listlERooDataSetmUcOallocatorlERooDataSetmUgRsPgR = { "list<RooDataSet*,allocator<RooDataSet*> >" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_vectorlEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRcOallocatorlEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRsPgRsPgR = { "vector<pair<const RooArgSet*,const RooArgSet*>,allocator<pair<const RooArgSet*,const RooArgSet*> > >" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRcOallocatorlEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<const RooArgSet*,const RooArgSet*>,allocator<pair<const RooArgSet*,const RooArgSet*> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_maplEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRcOunsignedsPlongcOlesslEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRsPgRcOallocatorlEpairlEconstsPpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRcOunsignedsPlonggRsPgRsPgR = { "map<pair<const RooArgSet*,const RooArgSet*>,unsigned long,less<pair<const RooArgSet*,const RooArgSet*> >,allocator<pair<const pair<const RooArgSet*,const RooArgSet*>,unsigned long> > >" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR = { "map<int,string,less<int>,allocator<pair<const int,string> > >" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_vectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgR = { "vector<RooMsgService::StreamConfig,allocator<RooMsgService::StreamConfig> >" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RooMsgService::StreamConfig,allocator<RooMsgService::StreamConfig> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_dequelEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOallocatorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRsPgRsPgR = { "deque<vector<RooMsgService::StreamConfig,allocator<RooMsgService::StreamConfig> >,allocator<vector<RooMsgService::StreamConfig,allocator<RooMsgService::StreamConfig> > > >" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_stacklEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOdequelEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOallocatorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRsPgRsPgRsPgR = { "stack<vector<RooMsgService::StreamConfig,allocator<RooMsgService::StreamConfig> >,deque<vector<RooMsgService::StreamConfig,allocator<RooMsgService::StreamConfig> >,allocator<vector<RooMsgService::StreamConfig,allocator<RooMsgService::StreamConfig> > > > >" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_maplEstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUgRsPgRsPgR = { "map<string,basic_ostream<char,char_traits<char> >*,less<string>,allocator<pair<const string,basic_ostream<char,char_traits<char> >*> > >" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_vectorlERooNormSetCachecOallocatorlERooNormSetCachegRsPgR = { "vector<RooNormSetCache,allocator<RooNormSetCache> >" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlERooNormSetCachecOallocatorlERooNormSetCachegRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RooNormSetCache,allocator<RooNormSetCache> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_vectorlERooAbsCacheElementmUcOallocatorlERooAbsCacheElementmUgRsPgR = { "vector<RooAbsCacheElement*,allocator<RooAbsCacheElement*> >" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlERooAbsCacheElementmUcOallocatorlERooAbsCacheElementmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RooAbsCacheElement*,allocator<RooAbsCacheElement*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR = { "vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_vectorlERooArgSetmUcOallocatorlERooArgSetmUgRsPgR = { "vector<RooArgSet*,allocator<RooArgSet*> >" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlERooArgSetmUcOallocatorlERooArgSetmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RooArgSet*,allocator<RooArgSet*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_maplEconstsPRooAbsArgmUcOpairlEdoublecOdoublegRcOlesslEconstsPRooAbsArgmUgRcOallocatorlEpairlEconstsPRooAbsArgmUsPconstcOpairlEdoublecOdoublegRsPgRsPgRsPgR = { "map<const RooAbsArg*,pair<double,double>,less<const RooAbsArg*>,allocator<pair<const RooAbsArg* const,pair<double,double> > > >" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_RooCacheManagerlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgR = { "RooCacheManager<vector<double,allocator<double> > >" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRmUcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRmUgRsPgR = { "vector<vector<double,allocator<double> >*,allocator<vector<double,allocator<double> >*> >" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRmUcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<double,allocator<double> >*,allocator<vector<double,allocator<double> >*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_vectorlERooAbsLValuemUcOallocatorlERooAbsLValuemUgRsPgR = { "vector<RooAbsLValue*,allocator<RooAbsLValue*> >" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlERooAbsLValuemUcOallocatorlERooAbsLValuemUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RooAbsLValue*,allocator<RooAbsLValue*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_vectorlEconstsPRooAbsBinningmUcOallocatorlEconstsPRooAbsBinningmUgRsPgR = { "vector<const RooAbsBinning*,allocator<const RooAbsBinning*> >" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEconstsPRooAbsBinningmUcOallocatorlEconstsPRooAbsBinningmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<const RooAbsBinning*,allocator<const RooAbsBinning*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR = { "vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_maplEintcORooAbsCachedPdfcLcLAnaIntConfigcOlesslEintgRcOallocatorlEpairlEconstsPintcORooAbsCachedPdfcLcLAnaIntConfiggRsPgRsPgR = { "map<int,RooAbsCachedPdf::AnaIntConfig,less<int>,allocator<pair<const int,RooAbsCachedPdf::AnaIntConfig> > >" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR = { "vector<pair<string,int>,allocator<pair<string,int> > >" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<string,int>,allocator<pair<string,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_vectorlEpairlETH1FmUcOboolgRcOallocatorlEpairlETH1FmUcOboolgRsPgRsPgR = { "vector<pair<TH1F*,bool>,allocator<pair<TH1F*,bool> > >" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEpairlETH1FmUcOboolgRcOallocatorlEpairlETH1FmUcOboolgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<TH1F*,bool>,allocator<pair<TH1F*,bool> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_AnalyseED = { "AnalyseED" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_ChargeCorrectTime = { "ChargeCorrectTime" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_GenerateTimeCalib = { "GenerateTimeCalib" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_SimulateTimeCalib = { "SimulateTimeCalib" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_ReGenerateTimeCalib = { "ReGenerateTimeCalib" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_Point_CD = { "Point_CD" , 115 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_Scin_CD = { "Scin_CD" , 115 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_ED_CD = { "ED_CD" , 115 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_TOF_CD = { "TOF_CD" , 115 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_ComDiscriminator = { "ComDiscriminator" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_Cluster = { "Cluster" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_CalcuTGCScin = { "CalcuTGCScin" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_vectorlEClustercOallocatorlEClustergRsPgR = { "vector<Cluster,allocator<Cluster> >" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_vectorlEClustercOallocatorlEClustergRsPgRcLcLiterator = { "vector<Cluster,allocator<Cluster> >::iterator" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEClustercOallocatorlEClustergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Cluster,allocator<Cluster> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_LocateED = { "LocateED" , 99 , -1 };
G__linked_taginfo G__ProcessCORARS_DictLN_ReCalcuVariables = { "ReCalcuVariables" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableProcessCORARS_Dict() {
  G__ProcessCORARS_DictLN_TClass.tagnum = -1 ;
  G__ProcessCORARS_DictLN_TBuffer.tagnum = -1 ;
  G__ProcessCORARS_DictLN_TMemberInspector.tagnum = -1 ;
  G__ProcessCORARS_DictLN_TObject.tagnum = -1 ;
  G__ProcessCORARS_DictLN_TString.tagnum = -1 ;
  G__ProcessCORARS_DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_vectorlEboolcOallocatorlEboolgRsPgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_string.tagnum = -1 ;
  G__ProcessCORARS_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_TClonesArray.tagnum = -1 ;
  G__ProcessCORARS_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_TFile.tagnum = -1 ;
  G__ProcessCORARS_DictLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_TAxis.tagnum = -1 ;
  G__ProcessCORARS_DictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_TF1.tagnum = -1 ;
  G__ProcessCORARS_DictLN_TH1I.tagnum = -1 ;
  G__ProcessCORARS_DictLN_TH1F.tagnum = -1 ;
  G__ProcessCORARS_DictLN_ConfigureClass.tagnum = -1 ;
  G__ProcessCORARS_DictLN_pairlEfloatcOfloatgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_TTree.tagnum = -1 ;
  G__ProcessCORARS_DictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_pairlEstringcOintgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_pairlEdoublecOdoublegR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_TChain.tagnum = -1 ;
  G__ProcessCORARS_DictLN_pairlEunsignedsPintcOintgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_KM2AEvent.tagnum = -1 ;
  G__ProcessCORARS_DictLN_KM2AHit.tagnum = -1 ;
  G__ProcessCORARS_DictLN_Alignment.tagnum = -1 ;
  G__ProcessCORARS_DictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_TElementActionTlEdoublegR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_TElementPosActionTlEdoublegR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_TMatrixTRow_constlEdoublegR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_TMatrixTlEdoublegR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_TMatrixTSymlEdoublegR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_TMatrixTRowlEdoublegR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_TMatrixTSparselEdoublegR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_TMatrixTSparseRow_constlEdoublegR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_TMatrixTSparseRowlEdoublegR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_TMatrixTDiag_constlEdoublegR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_TMatrixTColumn_constlEdoublegR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_TMatrixTSparseDiag_constlEdoublegR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_TMatrixTFlat_constlEdoublegR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_TMatrixTSub_constlEdoublegR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_TMatrixTColumnlEdoublegR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_TMatrixTDiaglEdoublegR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_TMatrixTFlatlEdoublegR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_TMatrixTSublEdoublegR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_TMatrixTSparseDiaglEdoublegR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_SelectBranch.tagnum = -1 ;
  G__ProcessCORARS_DictLN_TH2F.tagnum = -1 ;
  G__ProcessCORARS_DictLN_TGraph.tagnum = -1 ;
  G__ProcessCORARS_DictLN_Point.tagnum = -1 ;
  G__ProcessCORARS_DictLN_TGC.tagnum = -1 ;
  G__ProcessCORARS_DictLN_Scin.tagnum = -1 ;
  G__ProcessCORARS_DictLN_ED.tagnum = -1 ;
  G__ProcessCORARS_DictLN_TOF.tagnum = -1 ;
  G__ProcessCORARS_DictLN_CalcuVariables.tagnum = -1 ;
  G__ProcessCORARS_DictLN_TLine.tagnum = -1 ;
  G__ProcessCORARS_DictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_listlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_listlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_maplEstringcOTH1mUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1mUgRsPgRsPgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_maplEstringcORooDataHistmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataHistmUgRsPgRsPgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_maplEstringcORooDataSetmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataSetmUgRsPgRsPgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_maplEstringcORooAbsDatamUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooAbsDatamUgRsPgRsPgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_setlEpairlERooAbsArgmUcORooAbsArgmUgRcOlesslEpairlERooAbsArgmUcORooAbsArgmUgRsPgRcOallocatorlEpairlERooAbsArgmUcORooAbsArgmUgRsPgRsPgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_dequelERooAbsCachemUcOallocatorlERooAbsCachemUgRsPgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_maplERooAbsArgmUcOTRefArraymUcOlesslERooAbsArgmUgRcOallocatorlEpairlERooAbsArgmUsPconstcOTRefArraymUgRsPgRsPgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_dequelERooAbsArgmUcOallocatorlERooAbsArgmUgRsPgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_stacklERooAbsArgmUcOdequelERooAbsArgmUcOallocatorlERooAbsArgmUgRsPgRsPgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_vectorlERooCurvemUcOallocatorlERooCurvemUgRsPgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlERooCurvemUcOallocatorlERooCurvemUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_listlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_pairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_maplEconstsPRooAbsArgmUcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRcOlesslEconstsPRooAbsArgmUgRcOallocatorlEpairlEconstsPRooAbsArgmUsPconstcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_maplEstringcORooSharedPropertiesmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooSharedPropertiesmUgRsPgRsPgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_maplETClassmUcOintcOlesslETClassmUgRcOallocatorlEpairlETClassmUsPconstcOintgRsPgRsPgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_listlERooDataSetmUcOallocatorlERooDataSetmUgRsPgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_vectorlEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRcOallocatorlEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRsPgRsPgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRcOallocatorlEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_maplEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRcOunsignedsPlongcOlesslEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRsPgRcOallocatorlEpairlEconstsPpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRcOunsignedsPlonggRsPgRsPgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_vectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_dequelEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOallocatorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRsPgRsPgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_stacklEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOdequelEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOallocatorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_maplEstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUgRsPgRsPgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_vectorlERooNormSetCachecOallocatorlERooNormSetCachegRsPgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlERooNormSetCachecOallocatorlERooNormSetCachegRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_vectorlERooAbsCacheElementmUcOallocatorlERooAbsCacheElementmUgRsPgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlERooAbsCacheElementmUcOallocatorlERooAbsCacheElementmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_vectorlERooArgSetmUcOallocatorlERooArgSetmUgRsPgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlERooArgSetmUcOallocatorlERooArgSetmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_maplEconstsPRooAbsArgmUcOpairlEdoublecOdoublegRcOlesslEconstsPRooAbsArgmUgRcOallocatorlEpairlEconstsPRooAbsArgmUsPconstcOpairlEdoublecOdoublegRsPgRsPgRsPgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_RooCacheManagerlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRmUcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRmUgRsPgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRmUcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_vectorlERooAbsLValuemUcOallocatorlERooAbsLValuemUgRsPgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlERooAbsLValuemUcOallocatorlERooAbsLValuemUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_vectorlEconstsPRooAbsBinningmUcOallocatorlEconstsPRooAbsBinningmUgRsPgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEconstsPRooAbsBinningmUcOallocatorlEconstsPRooAbsBinningmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_maplEintcORooAbsCachedPdfcLcLAnaIntConfigcOlesslEintgRcOallocatorlEpairlEconstsPintcORooAbsCachedPdfcLcLAnaIntConfiggRsPgRsPgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_vectorlEpairlETH1FmUcOboolgRcOallocatorlEpairlETH1FmUcOboolgRsPgRsPgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEpairlETH1FmUcOboolgRcOallocatorlEpairlETH1FmUcOboolgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_AnalyseED.tagnum = -1 ;
  G__ProcessCORARS_DictLN_ChargeCorrectTime.tagnum = -1 ;
  G__ProcessCORARS_DictLN_GenerateTimeCalib.tagnum = -1 ;
  G__ProcessCORARS_DictLN_SimulateTimeCalib.tagnum = -1 ;
  G__ProcessCORARS_DictLN_ReGenerateTimeCalib.tagnum = -1 ;
  G__ProcessCORARS_DictLN_Point_CD.tagnum = -1 ;
  G__ProcessCORARS_DictLN_Scin_CD.tagnum = -1 ;
  G__ProcessCORARS_DictLN_ED_CD.tagnum = -1 ;
  G__ProcessCORARS_DictLN_TOF_CD.tagnum = -1 ;
  G__ProcessCORARS_DictLN_ComDiscriminator.tagnum = -1 ;
  G__ProcessCORARS_DictLN_Cluster.tagnum = -1 ;
  G__ProcessCORARS_DictLN_CalcuTGCScin.tagnum = -1 ;
  G__ProcessCORARS_DictLN_vectorlEClustercOallocatorlEClustergRsPgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_vectorlEClustercOallocatorlEClustergRsPgRcLcLiterator.tagnum = -1 ;
  G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEClustercOallocatorlEClustergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ProcessCORARS_DictLN_LocateED.tagnum = -1 ;
  G__ProcessCORARS_DictLN_ReCalcuVariables.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableProcessCORARS_Dict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_TClass);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_TObject);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_TString);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_vectorlEboolcOallocatorlEboolgRsPgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_string);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_TFile);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_TAxis);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_TF1);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_TH1I);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_TH1F);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_ConfigureClass),sizeof(ConfigureClass),-1,262400,(char*)NULL,G__setup_memvarConfigureClass,G__setup_memfuncConfigureClass);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_pairlEfloatcOfloatgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_vectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEpairlEfloatcOfloatgRcOallocatorlEpairlEfloatcOfloatgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_TTree);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_pairlEstringcOintgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_pairlEdoublecOdoublegR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_TChain);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_pairlEunsignedsPintcOintgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_KM2AEvent),sizeof(KM2AEvent),-1,292096,(char*)NULL,G__setup_memvarKM2AEvent,G__setup_memfuncKM2AEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_KM2AHit),sizeof(KM2AHit),-1,324864,(char*)NULL,G__setup_memvarKM2AHit,G__setup_memfuncKM2AHit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_Alignment),sizeof(Alignment),-1,263424,(char*)NULL,G__setup_memvarAlignment,G__setup_memfuncAlignment);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_TElementActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_TElementPosActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_TMatrixTRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_TMatrixTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_TMatrixTSymlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_TMatrixTRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_TMatrixTSparselEdoublegR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_TMatrixTSparseRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_TMatrixTSparseRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_TMatrixTDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_TMatrixTColumn_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_TMatrixTSparseDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_TMatrixTFlat_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_TMatrixTSub_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_TMatrixTColumnlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_TMatrixTDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_TMatrixTFlatlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_TMatrixTSublEdoublegR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_TMatrixTSparseDiaglEdoublegR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_SelectBranch),sizeof(SelectBranch),-1,263424,(char*)NULL,G__setup_memvarSelectBranch,G__setup_memfuncSelectBranch);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_TH2F);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_TGraph);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_Point);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_TGC);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_Scin);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_ED);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_TOF);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_CalcuVariables),sizeof(CalcuVariables),-1,263424,(char*)NULL,G__setup_memvarCalcuVariables,G__setup_memfuncCalcuVariables);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_TLine);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_listlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_listlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_maplEstringcOTH1mUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1mUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_maplEstringcORooDataHistmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataHistmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_maplEstringcORooDataSetmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataSetmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_maplEstringcORooAbsDatamUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooAbsDatamUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_setlEpairlERooAbsArgmUcORooAbsArgmUgRcOlesslEpairlERooAbsArgmUcORooAbsArgmUgRsPgRcOallocatorlEpairlERooAbsArgmUcORooAbsArgmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_dequelERooAbsCachemUcOallocatorlERooAbsCachemUgRsPgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_maplERooAbsArgmUcOTRefArraymUcOlesslERooAbsArgmUgRcOallocatorlEpairlERooAbsArgmUsPconstcOTRefArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_dequelERooAbsArgmUcOallocatorlERooAbsArgmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_stacklERooAbsArgmUcOdequelERooAbsArgmUcOallocatorlERooAbsArgmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_vectorlERooCurvemUcOallocatorlERooCurvemUgRsPgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlERooCurvemUcOallocatorlERooCurvemUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_listlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_pairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_maplEconstsPRooAbsArgmUcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRcOlesslEconstsPRooAbsArgmUgRcOallocatorlEpairlEconstsPRooAbsArgmUsPconstcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_maplEstringcORooSharedPropertiesmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooSharedPropertiesmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_maplETClassmUcOintcOlesslETClassmUgRcOallocatorlEpairlETClassmUsPconstcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_listlERooDataSetmUcOallocatorlERooDataSetmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_vectorlEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRcOallocatorlEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRcOallocatorlEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_maplEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRcOunsignedsPlongcOlesslEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRsPgRcOallocatorlEpairlEconstsPpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRcOunsignedsPlonggRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_vectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_dequelEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOallocatorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_stacklEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOdequelEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOallocatorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_maplEstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_vectorlERooNormSetCachecOallocatorlERooNormSetCachegRsPgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlERooNormSetCachecOallocatorlERooNormSetCachegRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_vectorlERooAbsCacheElementmUcOallocatorlERooAbsCacheElementmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlERooAbsCacheElementmUcOallocatorlERooAbsCacheElementmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_vectorlERooArgSetmUcOallocatorlERooArgSetmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlERooArgSetmUcOallocatorlERooArgSetmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_maplEconstsPRooAbsArgmUcOpairlEdoublecOdoublegRcOlesslEconstsPRooAbsArgmUgRcOallocatorlEpairlEconstsPRooAbsArgmUsPconstcOpairlEdoublecOdoublegRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_RooCacheManagerlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRmUcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRmUcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_vectorlERooAbsLValuemUcOallocatorlERooAbsLValuemUgRsPgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlERooAbsLValuemUcOallocatorlERooAbsLValuemUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_vectorlEconstsPRooAbsBinningmUcOallocatorlEconstsPRooAbsBinningmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEconstsPRooAbsBinningmUcOallocatorlEconstsPRooAbsBinningmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_maplEintcORooAbsCachedPdfcLcLAnaIntConfigcOlesslEintgRcOallocatorlEpairlEconstsPintcORooAbsCachedPdfcLcLAnaIntConfiggRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_vectorlEpairlETH1FmUcOboolgRcOallocatorlEpairlETH1FmUcOboolgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEpairlETH1FmUcOboolgRcOallocatorlEpairlETH1FmUcOboolgRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_AnalyseED),sizeof(AnalyseED),-1,263424,(char*)NULL,G__setup_memvarAnalyseED,G__setup_memfuncAnalyseED);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_ChargeCorrectTime),sizeof(ChargeCorrectTime),-1,263424,(char*)NULL,G__setup_memvarChargeCorrectTime,G__setup_memfuncChargeCorrectTime);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_GenerateTimeCalib),sizeof(GenerateTimeCalib),-1,263424,(char*)NULL,G__setup_memvarGenerateTimeCalib,G__setup_memfuncGenerateTimeCalib);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_SimulateTimeCalib),sizeof(SimulateTimeCalib),-1,263424,(char*)NULL,G__setup_memvarSimulateTimeCalib,G__setup_memfuncSimulateTimeCalib);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_ReGenerateTimeCalib),sizeof(ReGenerateTimeCalib),-1,263424,(char*)NULL,G__setup_memvarReGenerateTimeCalib,G__setup_memfuncReGenerateTimeCalib);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_Point_CD);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_Scin_CD);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_ED_CD);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_TOF_CD);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_ComDiscriminator),sizeof(ComDiscriminator),-1,263424,(char*)NULL,G__setup_memvarComDiscriminator,G__setup_memfuncComDiscriminator);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_Cluster),sizeof(Cluster),-1,263424,(char*)NULL,G__setup_memvarCluster,G__setup_memfuncCluster);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_CalcuTGCScin),sizeof(CalcuTGCScin),-1,263424,(char*)NULL,G__setup_memvarCalcuTGCScin,G__setup_memfuncCalcuTGCScin);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_vectorlEClustercOallocatorlEClustergRsPgR),sizeof(vector<Cluster,allocator<Cluster> >),-1,36608,(char*)NULL,G__setup_memvarvectorlEClustercOallocatorlEClustergRsPgR,G__setup_memfuncvectorlEClustercOallocatorlEClustergRsPgR);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_vectorlEClustercOallocatorlEClustergRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_reverse_iteratorlEvectorlEClustercOallocatorlEClustergRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_LocateED),sizeof(LocateED),-1,263424,(char*)NULL,G__setup_memvarLocateED,G__setup_memfuncLocateED);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ProcessCORARS_DictLN_ReCalcuVariables),sizeof(ReCalcuVariables),-1,263424,(char*)NULL,G__setup_memvarReCalcuVariables,G__setup_memfuncReCalcuVariables);
}
extern "C" void G__cpp_setupProcessCORARS_Dict(void) {
  G__check_setup_version(30051515,"G__cpp_setupProcessCORARS_Dict()");
  G__set_cpp_environmentProcessCORARS_Dict();
  G__cpp_setup_tagtableProcessCORARS_Dict();

  G__cpp_setup_inheritanceProcessCORARS_Dict();

  G__cpp_setup_typetableProcessCORARS_Dict();

  G__cpp_setup_memvarProcessCORARS_Dict();

  G__cpp_setup_memfuncProcessCORARS_Dict();
  G__cpp_setup_globalProcessCORARS_Dict();
  G__cpp_setup_funcProcessCORARS_Dict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncProcessCORARS_Dict();
  return;
}
class G__cpp_setup_initProcessCORARS_Dict {
  public:
    G__cpp_setup_initProcessCORARS_Dict() { G__add_setup_func("ProcessCORARS_Dict",(G__incsetup)(&G__cpp_setupProcessCORARS_Dict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initProcessCORARS_Dict() { G__remove_setup_func("ProcessCORARS_Dict"); }
};
G__cpp_setup_initProcessCORARS_Dict G__cpp_setup_initializerProcessCORARS_Dict;

